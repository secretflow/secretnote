{
  "variables": {
    "python/none": {
      "ref": "python/none",
      "kind": "object",
      "type": "builtins.NoneType",
      "snapshot": "None"
    },
    "python/id/0x12f121700+1": {
      "ref": "python/id/0x12f121700+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x72a5b50a1443a496",
      "module": "ray._private.worker",
      "name": "get",
      "signature": {
        "parameters": [
          {
            "name": "object_refs",
            "kind": 1,
            "annotation": "typing.Union[ray._raylet.ObjectRef, typing.Sequence[ray._raylet.ObjectRef]]"
          },
          {
            "name": "timeout",
            "kind": 3,
            "annotation": "typing.Union[float, NoneType]"
          }
        ],
        "return_annotation": "typing.Union[typing.Any, typing.List[typing.Any]]"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/_private/worker.py",
      "firstlineno": 2439,
      "source": "@PublicAPI\n@client_mode_hook\ndef get(\n    object_refs: Union[ray.ObjectRef, Sequence[ray.ObjectRef]],\n    *,\n    timeout: Optional[float] = None,\n) -> Union[Any, List[Any]]:\n    \"\"\"Get a remote object or a list of remote objects from the object store.\n\n    This method blocks until the object corresponding to the object ref is\n    available in the local object store. If this object is not in the local\n    object store, it will be shipped from an object store that has it (once the\n    object has been created). If object_refs is a list, then the objects\n    corresponding to each object in the list will be returned.\n\n    Ordering for an input list of object refs is preserved for each object\n    returned. That is, if an object ref to A precedes an object ref to B in the\n    input list, then A will precede B in the returned list.\n\n    This method will issue a warning if it's running inside async context,\n    you can use ``await object_ref`` instead of ``ray.get(object_ref)``. For\n    a list of object refs, you can use ``await asyncio.gather(*object_refs)``.\n\n    Related patterns and anti-patterns:\n\n    - :doc:`/ray-core/patterns/ray-get-loop`\n    - :doc:`/ray-core/patterns/unnecessary-ray-get`\n    - :doc:`/ray-core/patterns/ray-get-submission-order`\n    - :doc:`/ray-core/patterns/ray-get-too-many-objects`\n\n\n    Args:\n        object_refs: Object ref of the object to get or a list of object refs\n            to get.\n        timeout (Optional[float]): The maximum amount of time in seconds to\n            wait before returning. Set this to None will block until the\n            corresponding object becomes available. Setting ``timeout=0`` will\n            return the object immediately if it's available, else raise\n            GetTimeoutError in accordance with the above docstring.\n\n    Returns:\n        A Python object or a list of Python objects.\n\n    Raises:\n        GetTimeoutError: A GetTimeoutError is raised if a timeout is set and\n            the get takes longer than timeout to return.\n        Exception: An exception is raised if the task that created the object\n            or that created one of the objects raised an exception.\n    \"\"\"\n    worker = global_worker\n    worker.check_connected()\n\n    if hasattr(worker, \"core_worker\") and worker.core_worker.current_actor_is_asyncio():\n        global blocking_get_inside_async_warned\n        if not blocking_get_inside_async_warned:\n            logger.warning(\n                \"Using blocking ray.get inside async actor. \"\n                \"This blocks the event loop. Please use `await` \"\n                \"on object ref with asyncio.gather if you want to \"\n                \"yield execution to the event loop instead.\"\n            )\n            blocking_get_inside_async_warned = True\n\n    with profiling.profile(\"ray.get\"):\n        # TODO(sang): Should make StreamingObjectRefGenerator\n        # compatible to ray.get for dataset.\n        if isinstance(object_refs, StreamingObjectRefGenerator):\n            return object_refs\n\n        is_individual_id = isinstance(object_refs, ray.ObjectRef)\n        if is_individual_id:\n            object_refs = [object_refs]\n\n        if not isinstance(object_refs, list):\n            raise ValueError(\n                \"'object_refs' must either be an ObjectRef or a list of ObjectRefs.\"\n            )\n\n        # TODO(ujvl): Consider how to allow user to retrieve the ready objects.\n        values, debugger_breakpoint = worker.get_objects(object_refs, timeout=timeout)\n        for i, value in enumerate(values):\n            if isinstance(value, RayError):\n                if isinstance(value, ray.exceptions.ObjectLostError):\n                    worker.core_worker.dump_object_store_memory_usage()\n                if isinstance(value, RayTaskError):\n                    raise value.as_instanceof_cause()\n                else:\n                    raise value\n\n        if is_individual_id:\n            values = values[0]\n\n        if debugger_breakpoint != b\"\":\n            frame = sys._getframe().f_back\n            rdb = ray.util.pdb._connect_ray_pdb(\n                host=None,\n                port=None,\n                patch_stdstreams=False,\n                quiet=None,\n                breakpoint_uuid=debugger_breakpoint.decode()\n                if debugger_breakpoint\n                else None,\n                debugger_external=worker.ray_debugger_external,\n            )\n            rdb.set_trace(frame=frame)\n\n        return values\n",
      "docstring": "Get a remote object or a list of remote objects from the object store.\n\nThis method blocks until the object corresponding to the object ref is\navailable in the local object store. If this object is not in the local\nobject store, it will be shipped from an object store that has it (once the\nobject has been created). If object_refs is a list, then the objects\ncorresponding to each object in the list will be returned.\n\nOrdering for an input list of object refs is preserved for each object\nreturned. That is, if an object ref to A precedes an object ref to B in the\ninput list, then A will precede B in the returned list.\n\nThis method will issue a warning if it's running inside async context,\nyou can use ``await object_ref`` instead of ``ray.get(object_ref)``. For\na list of object refs, you can use ``await asyncio.gather(*object_refs)``.\n\nRelated patterns and anti-patterns:\n\n- :doc:`/ray-core/patterns/ray-get-loop`\n- :doc:`/ray-core/patterns/unnecessary-ray-get`\n- :doc:`/ray-core/patterns/ray-get-submission-order`\n- :doc:`/ray-core/patterns/ray-get-too-many-objects`\n\n\nArgs:\n    object_refs: Object ref of the object to get or a list of object refs\n        to get.\n    timeout (Optional[float]): The maximum amount of time in seconds to\n        wait before returning. Set this to None will block until the\n        corresponding object becomes available. Setting ``timeout=0`` will\n        return the object immediately if it's available, else raise\n        GetTimeoutError in accordance with the above docstring.\n\nReturns:\n    A Python object or a list of Python objects.\n\nRaises:\n    GetTimeoutError: A GetTimeoutError is raised if a timeout is set and\n        the get takes longer than timeout to return.\n    Exception: An exception is raised if the task that created the object\n        or that created one of the objects raised an exception.",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/frame/0x12f208110/line/2439": {
      "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439",
      "kind": "frame",
      "type": "builtins.frame",
      "local_vars": {
        "object_refs": { "ref": "otel/span/0x0/transient/id/0x33e7b6e40" },
        "timeout": { "ref": "python/none" }
      },
      "global_vars": {
        "global_worker": { "ref": "python/id/0x12f1176a0+1" },
        "blocking_get_inside_async_warned": {
          "ref": "otel/span/0x0/transient/id/0x106d04d60"
        },
        "logger": { "ref": "python/id/0x12c248d30+1" },
        "StreamingObjectRefGenerator": { "ref": "python/id/0x12c036490+1" },
        "RayError": { "ref": "python/id/0x12c0284c0+1" },
        "RayTaskError": { "ref": "python/id/0x12c028fd0+1" }
      },
      "outer_frames": [
        { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
        { "ref": "otel/span/0x0/transient/frame/0x2afd3d640/line/103" },
        { "ref": "otel/span/0x0/transient/frame/0x17f052040/line/24" },
        { "ref": "otel/span/0x0/transient/frame/0x2afe90b80/line/136" },
        { "ref": "otel/span/0x0/transient/frame/0x11a3307c0/line/162" },
        { "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/35" },
        { "ref": "otel/span/0x0/transient/frame/0x33a8379f0/line/42" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661bc0/line/3508" },
        { "ref": "otel/span/0x0/transient/frame/0x11c6632d0/line/3448" },
        { "ref": "otel/span/0x0/transient/frame/0x105ba37e0/line/3269" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661df0/line/129" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660400/line/3064" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660c50/line/3009" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661870/line/549" },
        { "ref": "otel/span/0x0/transient/frame/0x11c626890/line/426" },
        { "ref": "otel/span/0x0/transient/frame/0x11c64b770/line/758" },
        { "ref": "otel/span/0x0/transient/frame/0x14c621df0/line/418" },
        { "ref": "otel/span/0x0/transient/frame/0x11812c420/line/513" },
        { "ref": "otel/span/0x0/transient/frame/0x118129210/line/524" },
        { "ref": "otel/span/0x0/transient/frame/0x14d077200/line/81" },
        { "ref": "otel/span/0x0/transient/frame/0x14d076fd0/line/1859" },
        { "ref": "otel/span/0x0/transient/frame/0x118113d60/line/570" },
        { "ref": "otel/span/0x0/transient/frame/0x11812e380/line/195" },
        { "ref": "otel/span/0x0/transient/frame/0x104e89a40/line/737" },
        { "ref": "otel/span/0x0/transient/frame/0x14d022260/line/1053" },
        { "ref": "otel/span/0x0/transient/frame/0x104ddc230/line/17" },
        { "ref": "otel/span/0x0/transient/frame/0x12c618b00/line/87" },
        { "ref": "otel/span/0x0/transient/frame/0x12c614a80/line/194" }
      ],
      "module": "ray._private.worker",
      "func": "get"
    },
    "otel/span/0x0/transient/id/0x33baa0180": {
      "ref": "otel/span/0x0/transient/id/0x33baa0180",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[]",
      "values": []
    },
    "python/id/0x12f1176a0+1": {
      "ref": "python/id/0x12f1176a0+1",
      "kind": "object",
      "type": "ray._private.worker.Worker",
      "snapshot": "<ray._private.worker.Worker object at 0x12f1176a0>"
    },
    "otel/span/0x0/transient/id/0x106d04d60": {
      "ref": "otel/span/0x0/transient/id/0x106d04d60",
      "kind": "object",
      "type": "builtins.bool",
      "snapshot": "False"
    },
    "python/id/0x12c248d30+1": {
      "ref": "python/id/0x12c248d30+1",
      "kind": "object",
      "type": "logging.Logger",
      "snapshot": "<Logger ray._private.worker (INFO)>"
    },
    "python/id/0x12c036490+1": {
      "ref": "python/id/0x12c036490+1",
      "kind": "object",
      "type": "builtins.type",
      "snapshot": "<class 'ray._raylet.StreamingObjectRefGenerator'>"
    },
    "python/id/0x12c0284c0+1": {
      "ref": "python/id/0x12c0284c0+1",
      "kind": "object",
      "type": "builtins.type",
      "snapshot": "<class 'ray.exceptions.RayError'>"
    },
    "python/id/0x12c028fd0+1": {
      "ref": "python/id/0x12c028fd0+1",
      "kind": "object",
      "type": "builtins.type",
      "snapshot": "<class 'ray.exceptions.RayTaskError'>"
    },
    "otel/span/0x0/transient/frame/0x2afd3d640/line/103": {
      "ref": "otel/span/0x0/transient/frame/0x2afd3d640/line/103",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/_private/client_mode_hook.py",
      "lineno": 103,
      "func": "wrapper",
      "code": "return func(*args, **kwargs)"
    },
    "otel/span/0x0/transient/frame/0x17f052040/line/24": {
      "ref": "otel/span/0x0/transient/frame/0x17f052040/line/24",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/_private/auto_init_hook.py",
      "lineno": 24,
      "func": "auto_init_wrapper",
      "code": "return fn(*args, **kwargs)"
    },
    "otel/span/0x0/transient/frame/0x17ee9f420/line/174": {
      "ref": "otel/span/0x0/transient/frame/0x17ee9f420/line/174",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/distributed/primitive.py",
      "lineno": 174,
      "func": "_resolve_args",
      "code": "actual_vals = ray.get(list(refs.values()))"
    },
    "otel/span/0x0/transient/frame/0x33baa1580/line/184": {
      "ref": "otel/span/0x0/transient/frame/0x33baa1580/line/184",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/distributed/primitive.py",
      "lineno": 184,
      "func": "_remote",
      "code": "args, kwargs = _resolve_args(*args, **kwargs)"
    },
    "otel/span/0x0/transient/frame/0x12c4c2b80/line/230": {
      "ref": "otel/span/0x0/transient/frame/0x12c4c2b80/line/230",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/remote_function.py",
      "lineno": 230,
      "func": "remote",
      "code": "return func_cls._remote(args=args, kwargs=kwargs, **updated_options)"
    },
    "otel/span/0x0/transient/frame/0x2b85f82e0/line/100": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/100",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/pyu.py",
      "lineno": 100,
      "func": "wrapper",
      "code": "sfd.remote(self._run)"
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/2": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/2",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 2,
      "func": "main",
      "code": "x1, _ = alice(load_dataset_for_training, num_returns=2)(rand_key=42, party_id=0)"
    },
    "otel/span/0x0/transient/frame/0x33a8379f0/line/42": {
      "ref": "otel/span/0x0/transient/frame/0x33a8379f0/line/42",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 42,
      "func": "<module>",
      "code": "main()"
    },
    "otel/span/0x0/transient/frame/0x11c661bc0/line/3508": {
      "ref": "otel/span/0x0/transient/frame/0x11c661bc0/line/3508",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/IPython/core/interactiveshell.py",
      "lineno": 3508,
      "func": "run_code",
      "code": "exec(code_obj, self.user_global_ns, self.user_ns)"
    },
    "otel/span/0x0/transient/frame/0x11c6632d0/line/3448": {
      "ref": "otel/span/0x0/transient/frame/0x11c6632d0/line/3448",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/IPython/core/interactiveshell.py",
      "lineno": 3448,
      "func": "run_ast_nodes",
      "code": "if await self.run_code(code, result, async_=asy):"
    },
    "otel/span/0x0/transient/frame/0x105ba37e0/line/3269": {
      "ref": "otel/span/0x0/transient/frame/0x105ba37e0/line/3269",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/IPython/core/interactiveshell.py",
      "lineno": 3269,
      "func": "run_cell_async",
      "code": "has_raised = await self.run_ast_nodes(code_ast.body, cell_name,"
    },
    "otel/span/0x0/transient/frame/0x11c661df0/line/129": {
      "ref": "otel/span/0x0/transient/frame/0x11c661df0/line/129",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/IPython/core/async_helpers.py",
      "lineno": 129,
      "func": "_pseudo_sync_runner",
      "code": "coro.send(None)"
    },
    "otel/span/0x0/transient/frame/0x11c660400/line/3064": {
      "ref": "otel/span/0x0/transient/frame/0x11c660400/line/3064",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/IPython/core/interactiveshell.py",
      "lineno": 3064,
      "func": "_run_cell",
      "code": "result = runner(coro)"
    },
    "otel/span/0x0/transient/frame/0x11c660c50/line/3009": {
      "ref": "otel/span/0x0/transient/frame/0x11c660c50/line/3009",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/IPython/core/interactiveshell.py",
      "lineno": 3009,
      "func": "run_cell",
      "code": "result = self._run_cell("
    },
    "otel/span/0x0/transient/frame/0x11c661870/line/549": {
      "ref": "otel/span/0x0/transient/frame/0x11c661870/line/549",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ipykernel/zmqshell.py",
      "lineno": 549,
      "func": "run_cell",
      "code": "return super().run_cell(*args, **kwargs)"
    },
    "otel/span/0x0/transient/frame/0x11c626890/line/426": {
      "ref": "otel/span/0x0/transient/frame/0x11c626890/line/426",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ipykernel/ipkernel.py",
      "lineno": 426,
      "func": "do_execute",
      "code": "res = shell.run_cell("
    },
    "otel/span/0x0/transient/frame/0x11c64b770/line/758": {
      "ref": "otel/span/0x0/transient/frame/0x11c64b770/line/758",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ipykernel/kernelbase.py",
      "lineno": 758,
      "func": "execute_request",
      "code": "reply_content = await reply_content"
    },
    "otel/span/0x0/transient/frame/0x14c621df0/line/418": {
      "ref": "otel/span/0x0/transient/frame/0x14c621df0/line/418",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ipykernel/kernelbase.py",
      "lineno": 418,
      "func": "dispatch_shell",
      "code": "await result"
    },
    "otel/span/0x0/transient/frame/0x11812c420/line/513": {
      "ref": "otel/span/0x0/transient/frame/0x11812c420/line/513",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ipykernel/kernelbase.py",
      "lineno": 513,
      "func": "process_one",
      "code": "await dispatch(*args)"
    },
    "otel/span/0x0/transient/frame/0x118129210/line/524": {
      "ref": "otel/span/0x0/transient/frame/0x118129210/line/524",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ipykernel/kernelbase.py",
      "lineno": 524,
      "func": "dispatch_queue",
      "code": "await self.process_one()"
    },
    "otel/span/0x0/transient/frame/0x14d077200/line/81": {
      "ref": "otel/span/0x0/transient/frame/0x14d077200/line/81",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/.rye/py/cpython@3.8.18/install/lib/python3.8/asyncio/events.py",
      "lineno": 81,
      "func": "_run",
      "code": "self._context.run(self._callback, *self._args)"
    },
    "otel/span/0x0/transient/frame/0x14d076fd0/line/1859": {
      "ref": "otel/span/0x0/transient/frame/0x14d076fd0/line/1859",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/.rye/py/cpython@3.8.18/install/lib/python3.8/asyncio/base_events.py",
      "lineno": 1859,
      "func": "_run_once",
      "code": "handle._run()"
    },
    "otel/span/0x0/transient/frame/0x118113d60/line/570": {
      "ref": "otel/span/0x0/transient/frame/0x118113d60/line/570",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/.rye/py/cpython@3.8.18/install/lib/python3.8/asyncio/base_events.py",
      "lineno": 570,
      "func": "run_forever",
      "code": "self._run_once()"
    },
    "otel/span/0x0/transient/frame/0x11812e380/line/195": {
      "ref": "otel/span/0x0/transient/frame/0x11812e380/line/195",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/tornado/platform/asyncio.py",
      "lineno": 195,
      "func": "start",
      "code": "self.asyncio_loop.run_forever()"
    },
    "otel/span/0x0/transient/frame/0x104e89a40/line/737": {
      "ref": "otel/span/0x0/transient/frame/0x104e89a40/line/737",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ipykernel/kernelapp.py",
      "lineno": 737,
      "func": "start",
      "code": "self.io_loop.start()"
    },
    "otel/span/0x0/transient/frame/0x14d022260/line/1053": {
      "ref": "otel/span/0x0/transient/frame/0x14d022260/line/1053",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/traitlets/config/application.py",
      "lineno": 1053,
      "func": "launch_instance",
      "code": "app.start()"
    },
    "otel/span/0x0/transient/frame/0x104ddc230/line/17": {
      "ref": "otel/span/0x0/transient/frame/0x104ddc230/line/17",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ipykernel_launcher.py",
      "lineno": 17,
      "func": "<module>",
      "code": "app.launch_new_instance()"
    },
    "otel/span/0x0/transient/frame/0x12c618b00/line/87": {
      "ref": "otel/span/0x0/transient/frame/0x12c618b00/line/87",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/.rye/py/cpython@3.8.18/install/lib/python3.8/runpy.py",
      "lineno": 87,
      "func": "_run_code",
      "code": "exec(code, run_globals)"
    },
    "otel/span/0x0/transient/frame/0x12c614a80/line/194": {
      "ref": "otel/span/0x0/transient/frame/0x12c614a80/line/194",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/.rye/py/cpython@3.8.18/install/lib/python3.8/runpy.py",
      "lineno": 194,
      "func": "_run_module_as_main",
      "code": "return _run_code(code, main_globals, None,"
    },
    "otel/span/0x0/transient/id/0x33bd0a3c0": {
      "ref": "otel/span/0x0/transient/id/0x33bd0a3c0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[]",
      "values": []
    },
    "otel/span/0x0/transient/id/0x33bce8a00": {
      "ref": "otel/span/0x0/transient/id/0x33bce8a00",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': []}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33bd0a3c0" } }
    },
    "python/id/0x12f0cbd30+1": {
      "ref": "python/id/0x12f0cbd30+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x5176066bfe611207",
      "module": "ray.remote_function",
      "name": "RemoteFunction._remote",
      "signature": {
        "parameters": [
          { "name": "self", "kind": 1, "annotation": "typing.Any" },
          { "name": "args", "kind": 1, "annotation": "typing.Any" },
          { "name": "kwargs", "kind": 1, "annotation": "typing.Any" },
          { "name": "task_options", "kind": 4, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/remote_function.py",
      "firstlineno": 244,
      "source": "@_tracing_task_invocation\ndef _remote(self, args=None, kwargs=None, **task_options):\n    \"\"\"Submit the remote function for execution.\"\"\"\n    # We pop the \"max_calls\" coming from \"@ray.remote\" here. We no longer need\n    # it in \"_remote()\".\n    task_options.pop(\"max_calls\", None)\n    auto_init_ray()\n    if client_mode_should_convert():\n        return client_mode_convert_function(self, args, kwargs, **task_options)\n\n    worker = ray._private.worker.global_worker\n    worker.check_connected()\n\n    # If this function was not exported in this session and job, we need to\n    # export this function again, because the current GCS doesn't have it.\n    if (\n        not self._is_cross_language\n        and self._last_export_session_and_job != worker.current_session_and_job\n    ):\n        self._function_descriptor = PythonFunctionDescriptor.from_function(\n            self._function, self._uuid\n        )\n        # There is an interesting question here. If the remote function is\n        # used by a subsequent driver (in the same script), should the\n        # second driver pickle the function again? If yes, then the remote\n        # function definition can differ in the second driver (e.g., if\n        # variables in its closure have changed). We probably want the\n        # behavior of the remote function in the second driver to be\n        # independent of whether or not the function was invoked by the\n        # first driver. This is an argument for repickling the function,\n        # which we do here.\n        self._pickled_function = pickle_dumps(\n            self._function,\n            f\"Could not serialize the function {self._function_descriptor.repr}\",\n        )\n\n        self._last_export_session_and_job = worker.current_session_and_job\n        worker.function_actor_manager.export(self)\n\n    kwargs = {} if kwargs is None else kwargs\n    args = [] if args is None else args\n\n    # fill task required options\n    for k, v in ray_option_utils.task_options.items():\n        if k == \"max_retries\":\n            # TODO(swang): We need to override max_retries here because the default\n            # value gets set at Ray import time. Ideally, we should allow setting\n            # default values from env vars for other options too.\n            v.default_value = os.environ.get(\n                \"RAY_TASK_MAX_RETRIES\", v.default_value\n            )\n            v.default_value = int(v.default_value)\n        task_options[k] = task_options.get(k, v.default_value)\n    # \"max_calls\" already takes effects and should not apply again.\n    # Remove the default value here.\n    task_options.pop(\"max_calls\", None)\n\n    # TODO(suquark): cleanup these fields\n    name = task_options[\"name\"]\n    runtime_env = parse_runtime_env(task_options[\"runtime_env\"])\n    placement_group = task_options[\"placement_group\"]\n    placement_group_bundle_index = task_options[\"placement_group_bundle_index\"]\n    placement_group_capture_child_tasks = task_options[\n        \"placement_group_capture_child_tasks\"\n    ]\n    scheduling_strategy = task_options[\"scheduling_strategy\"]\n    num_returns = task_options[\"num_returns\"]\n    if num_returns == \"dynamic\":\n        num_returns = -1\n    elif num_returns == \"streaming\":\n        # TODO(sang): This is a temporary private API.\n        # Remove it when we migrate to the streaming generator.\n        num_returns = ray._raylet.STREAMING_GENERATOR_RETURN\n\n    max_retries = task_options[\"max_retries\"]\n    retry_exceptions = task_options[\"retry_exceptions\"]\n    if isinstance(retry_exceptions, (list, tuple)):\n        retry_exception_allowlist = tuple(retry_exceptions)\n        retry_exceptions = True\n    else:\n        retry_exception_allowlist = None\n\n    if scheduling_strategy is None or not isinstance(\n        scheduling_strategy, PlacementGroupSchedulingStrategy\n    ):\n        _warn_if_using_deprecated_placement_group(task_options, 4)\n\n    resources = ray._private.utils.resources_from_ray_options(task_options)\n\n    if scheduling_strategy is None or isinstance(\n        scheduling_strategy, PlacementGroupSchedulingStrategy\n    ):\n        if isinstance(scheduling_strategy, PlacementGroupSchedulingStrategy):\n            placement_group = scheduling_strategy.placement_group\n            placement_group_bundle_index = (\n                scheduling_strategy.placement_group_bundle_index\n            )\n            placement_group_capture_child_tasks = (\n                scheduling_strategy.placement_group_capture_child_tasks\n            )\n\n        if placement_group_capture_child_tasks is None:\n            placement_group_capture_child_tasks = (\n                worker.should_capture_child_tasks_in_placement_group\n            )\n        placement_group = _configure_placement_group_based_on_context(\n            placement_group_capture_child_tasks,\n            placement_group_bundle_index,\n            resources,\n            {},  # no placement_resources for tasks\n            self._function_descriptor.function_name,\n            placement_group=placement_group,\n        )\n        if not placement_group.is_empty:\n            scheduling_strategy = PlacementGroupSchedulingStrategy(\n                placement_group,\n                placement_group_bundle_index,\n                placement_group_capture_child_tasks,\n            )\n        else:\n            scheduling_strategy = \"DEFAULT\"\n\n    serialized_runtime_env_info = None\n    if runtime_env is not None:\n        serialized_runtime_env_info = get_runtime_env_info(\n            runtime_env,\n            is_job_runtime_env=False,\n            serialize=True,\n        )\n\n    if _task_launch_hook:\n        _task_launch_hook(self._function_descriptor, resources, scheduling_strategy)\n\n    def invocation(args, kwargs):\n        if self._is_cross_language:\n            list_args = cross_language._format_args(worker, args, kwargs)\n        elif not args and not kwargs and not self._function_signature:\n            list_args = []\n        else:\n            list_args = ray._private.signature.flatten_args(\n                self._function_signature, args, kwargs\n            )\n\n        if worker.mode == ray._private.worker.LOCAL_MODE:\n            assert (\n                not self._is_cross_language\n            ), \"Cross language remote function cannot be executed locally.\"\n        object_refs = worker.core_worker.submit_task(\n            self._language,\n            self._function_descriptor,\n            list_args,\n            name if name is not None else \"\",\n            num_returns,\n            resources,\n            max_retries,\n            retry_exceptions,\n            retry_exception_allowlist,\n            scheduling_strategy,\n            worker.debugger_breakpoint,\n            serialized_runtime_env_info or \"{}\",\n        )\n        # Reset worker's debug context from the last \"remote\" command\n        # (which applies only to this .remote call).\n        worker.debugger_breakpoint = b\"\"\n        if num_returns == STREAMING_GENERATOR_RETURN:\n            # Streaming generator will return a single ref\n            # that is for the generator task.\n            assert len(object_refs) == 1\n            generator_ref = object_refs[0]\n            return StreamingObjectRefGenerator(generator_ref, worker)\n        if len(object_refs) == 1:\n            return object_refs[0]\n        elif len(object_refs) > 1:\n            return object_refs\n\n    if self._decorator is not None:\n        invocation = self._decorator(invocation)\n\n    return invocation(args, kwargs)\n",
      "docstring": "Submit the remote function for execution.",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/frame/0x14d194e70/line/244": {
      "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244",
      "kind": "frame",
      "type": "builtins.frame",
      "local_vars": {
        "args": { "ref": "otel/span/0x0/transient/id/0x33de59860" },
        "kwargs": { "ref": "otel/span/0x0/transient/id/0x33e72e7c0" },
        "task_options": { "ref": "otel/span/0x0/transient/id/0x33e6afb40" },
        "self": { "ref": "python/id/0x33e705730+1" }
      },
      "global_vars": {
        "auto_init_ray": { "ref": "python/id/0x11fbe3a60+1" },
        "client_mode_should_convert": { "ref": "python/id/0x11fbea160+1" },
        "client_mode_convert_function": { "ref": "python/id/0x11fbea280+1" },
        "PythonFunctionDescriptor": { "ref": "python/id/0x28a5a90d8+1" },
        "pickle_dumps": { "ref": "python/id/0x12c3b3c10+1" },
        "parse_runtime_env": { "ref": "python/id/0x11ffb0280+1" },
        "PlacementGroupSchedulingStrategy": { "ref": "python/id/0x12c021780+1" },
        "_warn_if_using_deprecated_placement_group": {
          "ref": "python/id/0x11ffc2040+1"
        },
        "_configure_placement_group_based_on_context": {
          "ref": "python/id/0x11ffbd0d0+1"
        },
        "get_runtime_env_info": { "ref": "python/id/0x11ffb01f0+1" }
      },
      "outer_frames": [
        { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
        { "ref": "otel/span/0x0/transient/frame/0x14d192500/line/306" },
        { "ref": "otel/span/0x0/transient/frame/0x33baa1580/line/185" },
        { "ref": "otel/span/0x0/transient/frame/0x12c4c2b80/line/230" },
        { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/100" },
        { "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/33" },
        { "ref": "otel/span/0x0/transient/frame/0x33a8379f0/line/42" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661bc0/line/3508" },
        { "ref": "otel/span/0x0/transient/frame/0x11c6632d0/line/3448" },
        { "ref": "otel/span/0x0/transient/frame/0x105ba37e0/line/3269" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661df0/line/129" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660400/line/3064" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660c50/line/3009" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661870/line/549" },
        { "ref": "otel/span/0x0/transient/frame/0x11c626890/line/426" },
        { "ref": "otel/span/0x0/transient/frame/0x11c64b770/line/758" },
        { "ref": "otel/span/0x0/transient/frame/0x14c621df0/line/418" },
        { "ref": "otel/span/0x0/transient/frame/0x11812c420/line/513" },
        { "ref": "otel/span/0x0/transient/frame/0x118129210/line/524" },
        { "ref": "otel/span/0x0/transient/frame/0x14d077200/line/81" },
        { "ref": "otel/span/0x0/transient/frame/0x14d076fd0/line/1859" },
        { "ref": "otel/span/0x0/transient/frame/0x118113d60/line/570" },
        { "ref": "otel/span/0x0/transient/frame/0x11812e380/line/195" },
        { "ref": "otel/span/0x0/transient/frame/0x104e89a40/line/737" },
        { "ref": "otel/span/0x0/transient/frame/0x14d022260/line/1053" },
        { "ref": "otel/span/0x0/transient/frame/0x104ddc230/line/17" },
        { "ref": "otel/span/0x0/transient/frame/0x12c618b00/line/87" },
        { "ref": "otel/span/0x0/transient/frame/0x12c614a80/line/194" }
      ],
      "module": "ray.remote_function",
      "func": "RemoteFunction._remote"
    },
    "otel/span/0x0/transient/id/0x33bd8ad30": {
      "ref": "otel/span/0x0/transient/id/0x33bd8ad30",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<function load_dataset_for_training at 0x33ad2daf0>,)",
      "values": [{ "ref": "python/id/0x33ad2daf0+1" }]
    },
    "python/id/0x33ad2daf0+1": {
      "ref": "python/id/0x33ad2daf0+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x488b01810541f6d6",
      "module": "__main__",
      "name": "load_dataset_for_training",
      "signature": {
        "parameters": [
          { "name": "rand_key", "kind": 1, "annotation": "builtins.int" },
          { "name": "party_id", "kind": 1, "annotation": "builtins.int" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "Cell In[4]",
      "firstlineno": 6,
      "source": "def load_dataset_for_training(rand_key: int, party_id: int):\n    x, y = load_breast_cancer(return_X_y=True)\n    x = (x - np.min(x)) / (np.max(x) - np.min(x))\n    x_train, x_test, y_train, y_test = train_test_split(\n        x,\n        y,\n        test_size=0.2,\n        random_state=rand_key,\n    )\n    if party_id == 0:\n        return x_train[:, :15], None\n    else:\n        return x_train[:, 15:], y_train\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33bcf7cc0": {
      "ref": "otel/span/0x0/transient/id/0x33bcf7cc0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'party_id': 0, 'rand_key': 42}",
      "values": {
        "party_id": { "ref": "otel/span/0x0/transient/id/0x106d0bb40" },
        "rand_key": { "ref": "otel/span/0x0/transient/id/0x106d0c080" }
      }
    },
    "otel/span/0x0/transient/id/0x106d0bb40": {
      "ref": "otel/span/0x0/transient/id/0x106d0bb40",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "0"
    },
    "otel/span/0x0/transient/id/0x106d0c080": {
      "ref": "otel/span/0x0/transient/id/0x106d0c080",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "42"
    },
    "otel/span/0x0/transient/id/0x33ba99ec0": {
      "ref": "otel/span/0x0/transient/id/0x33ba99ec0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 2, 'resources': {'alice': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33bcf7d40" }
      }
    },
    "otel/span/0x0/transient/id/0x106d0bb80": {
      "ref": "otel/span/0x0/transient/id/0x106d0bb80",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "2"
    },
    "otel/span/0x0/transient/id/0x33bcf7d40": {
      "ref": "otel/span/0x0/transient/id/0x33bcf7d40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'alice': 1}",
      "values": { "alice": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "otel/span/0x0/transient/id/0x106d0bb60": {
      "ref": "otel/span/0x0/transient/id/0x106d0bb60",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "1"
    },
    "python/id/0x33b9a0d00+1": {
      "ref": "python/id/0x33b9a0d00+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33b9a0d00>"
    },
    "python/id/0x11fbe3a60+1": {
      "ref": "python/id/0x11fbe3a60+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x1284600138b1d8c8",
      "module": "ray._private.auto_init_hook",
      "name": "auto_init_ray",
      "signature": { "parameters": [], "return_annotation": "typing.Any" },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/_private/auto_init_hook.py",
      "firstlineno": 9,
      "source": "def auto_init_ray():\n    if (\n        os.environ.get(\"RAY_ENABLE_AUTO_CONNECT\", \"\") != \"0\"\n        and not ray.is_initialized()\n    ):\n        auto_init_lock.acquire()\n        if not ray.is_initialized():\n            ray.init()\n        auto_init_lock.release()\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "python/id/0x11fbea160+1": {
      "ref": "python/id/0x11fbea160+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x41fd7b0a64719ab9",
      "module": "ray._private.client_mode_hook",
      "name": "client_mode_should_convert",
      "signature": { "parameters": [], "return_annotation": "typing.Any" },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/_private/client_mode_hook.py",
      "firstlineno": 108,
      "source": "def client_mode_should_convert():\n    \"\"\"Determines if functions should be converted to client mode.\"\"\"\n\n    # `is_client_mode_enabled_by_default` is used for testing with\n    # `RAY_CLIENT_MODE=1`. This flag means all tests run with client mode.\n    return (\n        is_client_mode_enabled or is_client_mode_enabled_by_default\n    ) and _get_client_hook_status_on_thread()\n",
      "docstring": "Determines if functions should be converted to client mode.",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "python/id/0x11fbea280+1": {
      "ref": "python/id/0x11fbea280+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x48bd30628eb65818",
      "module": "ray._private.client_mode_hook",
      "name": "client_mode_convert_function",
      "signature": {
        "parameters": [
          { "name": "func_cls", "kind": 1, "annotation": "typing.Any" },
          { "name": "in_args", "kind": 1, "annotation": "typing.Any" },
          { "name": "in_kwargs", "kind": 1, "annotation": "typing.Any" },
          { "name": "kwargs", "kind": 4, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/_private/client_mode_hook.py",
      "firstlineno": 146,
      "source": "def client_mode_convert_function(func_cls, in_args, in_kwargs, **kwargs):\n    \"\"\"Runs a preregistered ray RemoteFunction through the ray client.\n\n    The common case for this is to transparently convert that RemoteFunction\n    to a ClientRemoteFunction. This happens in circumstances where the\n    RemoteFunction is declared early, in a library and only then is Ray used in\n    client mode -- necessitating a conversion.\n    \"\"\"\n    from ray.util.client import ray\n\n    key = getattr(func_cls, RAY_CLIENT_MODE_ATTR, None)\n\n    # Second part of \"or\" is needed in case func_cls is reused between Ray\n    # client sessions in one Python interpreter session.\n    if (key is None) or (not ray._converted_key_exists(key)):\n        key = ray._convert_function(func_cls)\n        setattr(func_cls, RAY_CLIENT_MODE_ATTR, key)\n    client_func = ray._get_converted(key)\n    return client_func._remote(in_args, in_kwargs, **kwargs)\n",
      "docstring": "Runs a preregistered ray RemoteFunction through the ray client.\n\nThe common case for this is to transparently convert that RemoteFunction\nto a ClientRemoteFunction. This happens in circumstances where the\nRemoteFunction is declared early, in a library and only then is Ray used in\nclient mode -- necessitating a conversion.",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "python/id/0x28a5a90d8+1": {
      "ref": "python/id/0x28a5a90d8+1",
      "kind": "object",
      "type": "builtins.type",
      "snapshot": "<class 'ray._raylet.PythonFunctionDescriptor'>"
    },
    "python/id/0x12c3b3c10+1": {
      "ref": "python/id/0x12c3b3c10+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x22d750907a0fc06e",
      "module": "ray._private.serialization",
      "name": "pickle_dumps",
      "signature": {
        "parameters": [
          { "name": "obj", "kind": 1, "annotation": "typing.Any" },
          { "name": "error_msg", "kind": 1, "annotation": "builtins.str" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/_private/serialization.py",
      "firstlineno": 58,
      "source": "def pickle_dumps(obj: Any, error_msg: str):\n    \"\"\"Wrap cloudpickle.dumps to provide better error message\n    when the object is not serializable.\n    \"\"\"\n    try:\n        return pickle.dumps(obj)\n    except TypeError as e:\n        sio = io.StringIO()\n        inspect_serializability(obj, print_file=sio)\n        msg = f\"{error_msg}:\\n{sio.getvalue()}\"\n        raise TypeError(msg) from e\n",
      "docstring": "Wrap cloudpickle.dumps to provide better error message\nwhen the object is not serializable.",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "python/id/0x11ffb0280+1": {
      "ref": "python/id/0x11ffb0280+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0xba8bf997322500e",
      "module": "ray._private.utils",
      "name": "parse_runtime_env",
      "signature": {
        "parameters": [
          {
            "name": "runtime_env",
            "kind": 1,
            "annotation": "typing.Union[typing.Dict, ForwardRef('RuntimeEnv'), NoneType]"
          }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/_private/utils.py",
      "firstlineno": 1599,
      "source": "def parse_runtime_env(runtime_env: Optional[Union[Dict, \"RuntimeEnv\"]]):\n    from ray.runtime_env import RuntimeEnv\n\n    # Parse local pip/conda config files here. If we instead did it in\n    # .remote(), it would get run in the Ray Client server, which runs on\n    # a remote node where the files aren't available.\n    if runtime_env:\n        if isinstance(runtime_env, dict):\n            return RuntimeEnv(**(runtime_env or {}))\n        raise TypeError(\n            \"runtime_env must be dict or RuntimeEnv, \",\n            f\"but got: {type(runtime_env)}\",\n        )\n    else:\n        # Keep the new_runtime_env as None.  In .remote(), we need to know\n        # if runtime_env is None to know whether or not to fall back to the\n        # runtime_env specified in the @ray.remote decorator.\n        return None\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "python/id/0x12c021780+1": {
      "ref": "python/id/0x12c021780+1",
      "kind": "object",
      "type": "builtins.type",
      "snapshot": "<class 'ray.util.scheduling_strategies.PlacementGroupSchedulingStrategy'>"
    },
    "python/id/0x11ffc2040+1": {
      "ref": "python/id/0x11ffc2040+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x1a41f2696eb2eb2e",
      "module": "ray._private.ray_option_utils",
      "name": "_warn_if_using_deprecated_placement_group",
      "signature": {
        "parameters": [
          {
            "name": "options",
            "kind": 1,
            "annotation": "typing.Dict[str, typing.Any]"
          },
          { "name": "caller_stacklevel", "kind": 1, "annotation": "builtins.int" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/_private/ray_option_utils.py",
      "firstlineno": 239,
      "source": "def _warn_if_using_deprecated_placement_group(\n    options: Dict[str, Any], caller_stacklevel: int\n):\n    placement_group = options[\"placement_group\"]\n    placement_group_bundle_index = options[\"placement_group_bundle_index\"]\n    placement_group_capture_child_tasks = options[\"placement_group_capture_child_tasks\"]\n    if placement_group != \"default\":\n        warnings.warn(\n            \"placement_group parameter is deprecated. Use \"\n            \"scheduling_strategy=PlacementGroupSchedulingStrategy(...) \"\n            \"instead, see the usage at \"\n            f\"https://docs.ray.io/en/{get_ray_doc_version()}/ray-core/package-ref.html#ray-remote.\",  # noqa: E501\n            DeprecationWarning,\n            stacklevel=caller_stacklevel + 1,\n        )\n    if placement_group_bundle_index != -1:\n        warnings.warn(\n            \"placement_group_bundle_index parameter is deprecated. Use \"\n            \"scheduling_strategy=PlacementGroupSchedulingStrategy(...) \"\n            \"instead, see the usage at \"\n            f\"https://docs.ray.io/en/{get_ray_doc_version()}/ray-core/package-ref.html#ray-remote.\",  # noqa: E501\n            DeprecationWarning,\n            stacklevel=caller_stacklevel + 1,\n        )\n    if placement_group_capture_child_tasks:\n        warnings.warn(\n            \"placement_group_capture_child_tasks parameter is deprecated. Use \"\n            \"scheduling_strategy=PlacementGroupSchedulingStrategy(...) \"\n            \"instead, see the usage at \"\n            f\"https://docs.ray.io/en/{get_ray_doc_version()}/ray-core/package-ref.html#ray-remote.\",  # noqa: E501\n            DeprecationWarning,\n            stacklevel=caller_stacklevel + 1,\n        )\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "python/id/0x11ffbd0d0+1": {
      "ref": "python/id/0x11ffbd0d0+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x3245a93a868b4879",
      "module": "ray.util.placement_group",
      "name": "_configure_placement_group_based_on_context",
      "signature": {
        "parameters": [
          {
            "name": "placement_group_capture_child_tasks",
            "kind": 1,
            "annotation": "builtins.bool"
          },
          { "name": "bundle_index", "kind": 1, "annotation": "builtins.int" },
          { "name": "resources", "kind": 1, "annotation": "typing.Dict" },
          { "name": "placement_resources", "kind": 1, "annotation": "typing.Dict" },
          { "name": "task_or_actor_repr", "kind": 1, "annotation": "builtins.str" },
          {
            "name": "placement_group",
            "kind": 1,
            "annotation": "typing.Union[ray.util.placement_group.PlacementGroup, str, NoneType]"
          }
        ],
        "return_annotation": "ray.util.placement_group.PlacementGroup"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/util/placement_group.py",
      "firstlineno": 411,
      "source": "def _configure_placement_group_based_on_context(\n    placement_group_capture_child_tasks: bool,\n    bundle_index: int,\n    resources: Dict,\n    placement_resources: Dict,\n    task_or_actor_repr: str,\n    placement_group: Union[PlacementGroup, str, None] = \"default\",\n) -> PlacementGroup:\n    \"\"\"Configure the placement group based on the given context.\n\n    Based on the given context, this API returns the placement group instance\n    for task/actor scheduling.\n\n    Params:\n        placement_group_capture_child_tasks: Whether or not the\n            placement group needs to be captured from the global\n            context.\n        bundle_index: The bundle index for tasks/actor scheduling.\n        resources: The scheduling resources.\n        placement_resources: The scheduling placement resources for\n            actors.\n        task_or_actor_repr: The repr of task or actor\n            function/class descriptor.\n        placement_group: The placement group instance.\n            - \"default\": Default placement group argument. Currently,\n                the default behavior is to capture the parent task'\n                placement group if placement_group_capture_child_tasks\n                is set.\n            - None: means placement group is explicitly not configured.\n            - Placement group instance: In this case, do nothing.\n\n    Returns:\n        Placement group instance based on the given context.\n\n    Raises:\n        ValueError: If the bundle index is invalid for the placement group\n            or the requested resources shape doesn't fit to any\n            bundles.\n    \"\"\"\n    # Validate inputs.\n    assert placement_group_capture_child_tasks is not None\n    assert resources is not None\n\n    # Validate and get the PlacementGroup instance.\n    # Placement group could be None, default, or placement group.\n    # Default behavior is \"do not capture child tasks\".\n    if placement_group != \"default\":\n        if not placement_group:\n            placement_group = PlacementGroup.empty()\n    elif placement_group == \"default\":\n        if placement_group_capture_child_tasks:\n            placement_group = get_current_placement_group()\n        else:\n            placement_group = PlacementGroup.empty()\n\n    if not placement_group:\n        placement_group = PlacementGroup.empty()\n    assert isinstance(placement_group, PlacementGroup)\n\n    # Validate the index.\n    check_placement_group_index(placement_group, bundle_index)\n\n    # Validate the shape.\n    if not placement_group.is_empty:\n        _validate_resource_shape(\n            placement_group, resources, placement_resources, task_or_actor_repr\n        )\n    return placement_group\n",
      "docstring": "Configure the placement group based on the given context.\n\nBased on the given context, this API returns the placement group instance\nfor task/actor scheduling.\n\nParams:\n    placement_group_capture_child_tasks: Whether or not the\n        placement group needs to be captured from the global\n        context.\n    bundle_index: The bundle index for tasks/actor scheduling.\n    resources: The scheduling resources.\n    placement_resources: The scheduling placement resources for\n        actors.\n    task_or_actor_repr: The repr of task or actor\n        function/class descriptor.\n    placement_group: The placement group instance.\n        - \"default\": Default placement group argument. Currently,\n            the default behavior is to capture the parent task'\n            placement group if placement_group_capture_child_tasks\n            is set.\n        - None: means placement group is explicitly not configured.\n        - Placement group instance: In this case, do nothing.\n\nReturns:\n    Placement group instance based on the given context.\n\nRaises:\n    ValueError: If the bundle index is invalid for the placement group\n        or the requested resources shape doesn't fit to any\n        bundles.",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "python/id/0x11ffb01f0+1": {
      "ref": "python/id/0x11ffb01f0+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x3651fca34694fbb0",
      "module": "ray._private.utils",
      "name": "get_runtime_env_info",
      "signature": {
        "parameters": [
          { "name": "runtime_env", "kind": 1, "annotation": "RuntimeEnv" },
          { "name": "is_job_runtime_env", "kind": 3, "annotation": "builtins.bool" },
          { "name": "serialize", "kind": 3, "annotation": "builtins.bool" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/_private/utils.py",
      "firstlineno": 1537,
      "source": "def get_runtime_env_info(\n    runtime_env: \"RuntimeEnv\",\n    *,\n    is_job_runtime_env: bool = False,\n    serialize: bool = False,\n):\n    \"\"\"Create runtime env info from runtime env.\n\n    In the user interface, the argument `runtime_env` contains some fields\n    which not contained in `ProtoRuntimeEnv` but in `ProtoRuntimeEnvInfo`,\n    such as `eager_install`. This function will extract those fields from\n    `RuntimeEnv` and create a new `ProtoRuntimeEnvInfo`, and serialize it.\n    \"\"\"\n    from ray.runtime_env import RuntimeEnvConfig\n\n    proto_runtime_env_info = ProtoRuntimeEnvInfo()\n\n    if runtime_env.working_dir_uri():\n        proto_runtime_env_info.uris.working_dir_uri = runtime_env.working_dir_uri()\n    if len(runtime_env.py_modules_uris()) > 0:\n        proto_runtime_env_info.uris.py_modules_uris[:] = runtime_env.py_modules_uris()\n\n    # TODO(Catch-Bull): overload `__setitem__` for `RuntimeEnv`, change the\n    # runtime_env of all internal code from dict to RuntimeEnv.\n\n    runtime_env_config = runtime_env.get(\"config\")\n    if runtime_env_config is None:\n        runtime_env_config = RuntimeEnvConfig.default_config()\n    else:\n        runtime_env_config = RuntimeEnvConfig.parse_and_validate_runtime_env_config(\n            runtime_env_config\n        )\n\n    proto_runtime_env_info.runtime_env_config.CopyFrom(\n        runtime_env_config.build_proto_runtime_env_config()\n    )\n\n    # Normally, `RuntimeEnv` should guarantee the accuracy of field eager_install,\n    # but so far, the internal code has not completely prohibited direct\n    # modification of fields in RuntimeEnv, so we should check it for insurance.\n    eager_install = (\n        runtime_env_config.get(\"eager_install\")\n        if runtime_env_config is not None\n        else None\n    )\n    if is_job_runtime_env or eager_install is not None:\n        if eager_install is None:\n            eager_install = True\n        elif not isinstance(eager_install, bool):\n            raise TypeError(\n                f\"eager_install must be a boolean. got {type(eager_install)}\"\n            )\n        proto_runtime_env_info.runtime_env_config.eager_install = eager_install\n\n    proto_runtime_env_info.serialized_runtime_env = runtime_env.serialize()\n\n    if not serialize:\n        return proto_runtime_env_info\n\n    return json_format.MessageToJson(proto_runtime_env_info)\n",
      "docstring": "Create runtime env info from runtime env.\n\nIn the user interface, the argument `runtime_env` contains some fields\nwhich not contained in `ProtoRuntimeEnv` but in `ProtoRuntimeEnvInfo`,\nsuch as `eager_install`. This function will extract those fields from\n`RuntimeEnv` and create a new `ProtoRuntimeEnvInfo`, and serialize it.",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/frame/0x14d192500/line/306": {
      "ref": "otel/span/0x0/transient/frame/0x14d192500/line/306",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/util/tracing/tracing_helper.py",
      "lineno": 306,
      "func": "_invocation_remote_span",
      "code": "return method(self, args, kwargs, *_args, **_kwargs)"
    },
    "otel/span/0x0/transient/frame/0x33baa1580/line/185": {
      "ref": "otel/span/0x0/transient/frame/0x33baa1580/line/185",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/distributed/primitive.py",
      "lineno": 185,
      "func": "_remote",
      "code": "return super()._remote(*args, **kwargs)"
    },
    "otel/span/0x0/transient/id/0x33b968b80": {
      "ref": "otel/span/0x0/transient/id/0x33b968b80",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000),\n ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000002000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000002000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)"
    },
    "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000002000000)": {
      "ref": "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000002000000)"
    },
    "otel/span/0x0/transient/frame/0x2b85f82e0/line/85": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85",
      "kind": "frame",
      "type": "builtins.frame",
      "local_vars": {
        "args": { "ref": "otel/span/0x0/transient/id/0x33be8c590" },
        "kwargs": { "ref": "otel/span/0x0/transient/id/0x33e701240" },
        "fn": { "ref": "python/id/0x33b827c10+1" },
        "num_returns": { "ref": "python/none" },
        "self": { "ref": "secretflow/location/PYU:bob" }
      },
      "global_vars": {
        "check_num_returns": { "ref": "python/id/0x17b125a60+1" },
        "PYUObject": { "ref": "python/id/0x17b029c20+1" }
      },
      "outer_frames": [
        { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
        { "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/33" },
        { "ref": "otel/span/0x0/transient/frame/0x33a8379f0/line/42" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661bc0/line/3508" },
        { "ref": "otel/span/0x0/transient/frame/0x11c6632d0/line/3448" },
        { "ref": "otel/span/0x0/transient/frame/0x105ba37e0/line/3269" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661df0/line/129" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660400/line/3064" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660c50/line/3009" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661870/line/549" },
        { "ref": "otel/span/0x0/transient/frame/0x11c626890/line/426" },
        { "ref": "otel/span/0x0/transient/frame/0x11c64b770/line/758" },
        { "ref": "otel/span/0x0/transient/frame/0x14c621df0/line/418" },
        { "ref": "otel/span/0x0/transient/frame/0x11812c420/line/513" },
        { "ref": "otel/span/0x0/transient/frame/0x118129210/line/524" },
        { "ref": "otel/span/0x0/transient/frame/0x14d077200/line/81" },
        { "ref": "otel/span/0x0/transient/frame/0x14d076fd0/line/1859" },
        { "ref": "otel/span/0x0/transient/frame/0x118113d60/line/570" },
        { "ref": "otel/span/0x0/transient/frame/0x11812e380/line/195" },
        { "ref": "otel/span/0x0/transient/frame/0x104e89a40/line/737" },
        { "ref": "otel/span/0x0/transient/frame/0x14d022260/line/1053" },
        { "ref": "otel/span/0x0/transient/frame/0x104ddc230/line/17" },
        { "ref": "otel/span/0x0/transient/frame/0x12c618b00/line/87" },
        { "ref": "otel/span/0x0/transient/frame/0x12c614a80/line/194" }
      ],
      "module": "secretflow.device.device.pyu",
      "func": "PYU.__call__.<locals>.wrapper"
    },
    "otel/span/0x0/transient/id/0x104c88040": {
      "ref": "otel/span/0x0/transient/id/0x104c88040",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "()",
      "values": []
    },
    "otel/span/0x0/transient/id/0x33b99fe80": {
      "ref": "otel/span/0x0/transient/id/0x33b99fe80",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'party_id': 0, 'rand_key': 42}",
      "values": {
        "rand_key": { "ref": "otel/span/0x0/transient/id/0x106d0c080" },
        "party_id": { "ref": "otel/span/0x0/transient/id/0x106d0bb40" }
      }
    },
    "secretflow/location/PYU:alice": {
      "ref": "secretflow/location/PYU:alice",
      "kind": "remote_location",
      "type": "secretflow.device.device.pyu.PYU",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      }
    },
    "python/id/0x17b125a60+1": {
      "ref": "python/id/0x17b125a60+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x104f7f319bb24c63",
      "module": "secretflow.device.device._utils",
      "name": "check_num_returns",
      "signature": {
        "parameters": [{ "name": "fn", "kind": 1, "annotation": "typing.Any" }],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/_utils.py",
      "firstlineno": 4,
      "source": "def check_num_returns(fn):\n    # inspect.signature fails on some builtin method (e.g. numpy.random.rand).\n    # You can wrap a self define function which calls builtin function inside\n    # with return annotation to get multi returns for now.\n    if inspect.isbuiltin(fn):\n        sig = inspect.signature(lambda *arg, **kwargs: fn(*arg, **kwargs))\n    else:\n        sig = inspect.signature(fn)\n\n    if sig.return_annotation is None or sig.return_annotation == sig.empty:\n        num_returns = 1\n    else:\n        if (\n            hasattr(sig.return_annotation, '_name')\n            and sig.return_annotation._name == 'Tuple'\n        ):\n            num_returns = len(sig.return_annotation.__args__)\n        elif isinstance(sig.return_annotation, tuple):\n            num_returns = len(sig.return_annotation)\n        else:\n            num_returns = 1\n\n    return num_returns\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "python/id/0x17b029c20+1": {
      "ref": "python/id/0x17b029c20+1",
      "kind": "object",
      "type": "abc.ABCMeta",
      "snapshot": "<class 'secretflow.device.device.pyu.PYUObject'>"
    },
    "otel/span/0x0/transient/id/0x33ba53840": {
      "ref": "otel/span/0x0/transient/id/0x33ba53840",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[<secretflow.device.device.pyu.PYUObject object at 0x33ba383d0>,\n <secretflow.device.device.pyu.PYUObject object at 0x33ba38580>]",
      "values": [
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000002000000)"
        }
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000002000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000002000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000002000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33bf31980": {
      "ref": "otel/span/0x0/transient/id/0x33bf31980",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'party_id': 1, 'rand_key': 42}",
      "values": {
        "rand_key": { "ref": "otel/span/0x0/transient/id/0x106d0c080" },
        "party_id": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" }
      }
    },
    "otel/span/0x0/transient/id/0x33bd0ab80": {
      "ref": "otel/span/0x0/transient/id/0x33bd0ab80",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[]",
      "values": []
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/3": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/3",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 3,
      "func": "main",
      "code": "x2, y = bob(load_dataset_for_training, num_returns=2)(rand_key=42, party_id=1)"
    },
    "otel/span/0x0/transient/id/0x33bf3c7c0": {
      "ref": "otel/span/0x0/transient/id/0x33bf3c7c0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[]",
      "values": []
    },
    "otel/span/0x0/transient/id/0x33bdbca80": {
      "ref": "otel/span/0x0/transient/id/0x33bdbca80",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': []}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33bf3c7c0" } }
    },
    "otel/span/0x0/transient/id/0x33bd8b910": {
      "ref": "otel/span/0x0/transient/id/0x33bd8b910",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<function load_dataset_for_training at 0x33ad2daf0>,)",
      "values": [{ "ref": "python/id/0x33ad2daf0+1" }]
    },
    "otel/span/0x0/transient/id/0x33bf38980": {
      "ref": "otel/span/0x0/transient/id/0x33bf38980",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'party_id': 1, 'rand_key': 42}",
      "values": {
        "party_id": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "rand_key": { "ref": "otel/span/0x0/transient/id/0x106d0c080" }
      }
    },
    "otel/span/0x0/transient/id/0x33bdbc800": {
      "ref": "otel/span/0x0/transient/id/0x33bdbc800",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 2, 'resources': {'bob': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33bf38ac0" }
      }
    },
    "otel/span/0x0/transient/id/0x33bf38ac0": {
      "ref": "otel/span/0x0/transient/id/0x33bf38ac0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'bob': 1}",
      "values": { "bob": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33ba0d370+1": {
      "ref": "python/id/0x33ba0d370+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33ba0d370>"
    },
    "otel/span/0x0/transient/id/0x33be66c00": {
      "ref": "otel/span/0x0/transient/id/0x33be66c00",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000),\n ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)"
    },
    "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)": {
      "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)"
    },
    "secretflow/location/PYU:bob": {
      "ref": "secretflow/location/PYU:bob",
      "kind": "remote_location",
      "type": "secretflow.device.device.pyu.PYU",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      }
    },
    "otel/span/0x0/transient/id/0x33bf7bbc0": {
      "ref": "otel/span/0x0/transient/id/0x33bf7bbc0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[<secretflow.device.device.pyu.PYUObject object at 0x33bf28040>,\n <secretflow.device.device.pyu.PYUObject object at 0x33bf2d640>]",
      "values": [
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)"
        }
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33bf7bd40": {
      "ref": "otel/span/0x0/transient/id/0x33bf7bd40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'x2': <secretflow.device.device.pyu.PYUObject object at 0x33bf28040>,\n 'y': <secretflow.device.device.pyu.PYUObject object at 0x33bf2d640>}",
      "values": {
        "x2": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)"
        },
        "y": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)"
        }
      }
    },
    "otel/span/0x0/transient/id/0x33bf56e80": {
      "ref": "otel/span/0x0/transient/id/0x33bf56e80",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/frame/0x17b5bc630/line/76": {
      "ref": "otel/span/0x0/transient/frame/0x17b5bc630/line/76",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "lineno": 76,
      "func": "pyu_to_spu",
      "code": "shares_chunk_count = self.device(get_shares_chunk_count)("
    },
    "otel/span/0x0/transient/frame/0x17b5aca00/line/80": {
      "ref": "otel/span/0x0/transient/frame/0x17b5aca00/line/80",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/register.py",
      "lineno": 80,
      "func": "dispatch",
      "code": "return self._ops[device_type][name](*args, **kwargs)"
    },
    "otel/span/0x0/transient/frame/0x17b5bbb50/line/111": {
      "ref": "otel/span/0x0/transient/frame/0x17b5bbb50/line/111",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/register.py",
      "lineno": 111,
      "func": "dispatch",
      "code": "return _registrar.dispatch(self.device_type, name, self, *args, **kwargs)"
    },
    "otel/span/0x0/transient/frame/0x17b5c71a0/line/70": {
      "ref": "otel/span/0x0/transient/frame/0x17b5c71a0/line/70",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/base.py",
      "lineno": 70,
      "func": "to",
      "code": "return dispatch(_name_of_to(device.device_type), self, device, *args, **kwargs)"
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/5": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/5",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 5,
      "func": "main",
      "code": "x1 = x1.to(spu)"
    },
    "otel/span/0x0/transient/id/0x33bf31400": {
      "ref": "otel/span/0x0/transient/id/0x33bf31400",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[array([[2.12247297e-03, 4.07381288e-03, 1.38199342e-02, ...,\n        4.43112365e-04, 4.15373766e-03, 2.24471086e-06],\n       [4.95768688e-03, 6.24588622e-03, 3.35448989e-02, ...,\n        1.03761166e-03, 1.91490362e-02, 9.99764927e-07],\n       [2.15632346e-03, 3.25811001e-03, 1.39163141e-02, ...,\n        6.13070052e-04, 5.52891396e-03, 2.05406676e-06],\n       ...,\n       [3.35919135e-03, 3.95392572e-03, 2.12270804e-02, ...,\n        1.98377997e-04, 2.53173484e-03, 8.20874471e-07],\n       [3.28631876e-03, 4.61212976e-03, 2.14198402e-02, ...,\n        3.76586742e-04, 4.43112365e-03, 1.24917724e-06],\n       [2.86318759e-03, 4.82369535e-03, 1.81523272e-02, ...,\n        2.78091208e-04, 3.45086977e-03, 1.19417019e-06]])]",
      "values": [{ "ref": "python/id/0x33be679f0+1" }]
    },
    "python/id/0x33be679f0+1": {
      "ref": "python/id/0x33be679f0+1",
      "kind": "object",
      "type": "numpy.ndarray",
      "snapshot": "array([[2.12247297e-03, 4.07381288e-03, 1.38199342e-02, ...,\n        4.43112365e-04, 4.15373766e-03, 2.24471086e-06],\n       [4.95768688e-03, 6.24588622e-03, 3.35448989e-02, ...,\n        1.03761166e-03, 1.91490362e-02, 9.99764927e-07],\n       [2.15632346e-03, 3.25811001e-03, 1.39163141e-02, ...,\n        6.13070052e-04, 5.52891396e-03, 2.05406676e-06],\n       ...,\n       [3.35919135e-03, 3.95392572e-03, 2.12270804e-02, ...,\n        1.98377997e-04, 2.53173484e-03, 8.20874471e-07],\n       [3.28631876e-03, 4.61212976e-03, 2.14198402e-02, ...,\n        3.76586742e-04, 4.43112365e-03, 1.24917724e-06],\n       [2.86318759e-03, 4.82369535e-03, 1.81523272e-02, ...,\n        2.78091208e-04, 3.45086977e-03, 1.19417019e-06]])"
    },
    "otel/span/0x0/transient/id/0x33bf56b40": {
      "ref": "otel/span/0x0/transient/id/0x33bf56b40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [array([[2.12247297e-03, 4.07381288e-03, 1.38199342e-02, ...,\n        4.43112365e-04, 4.15373766e-03, 2.24471086e-06],\n       [4.95768688e-03, 6.24588622e-03, 3.35448989e-02, ...,\n        1.03761166e-03, 1.91490362e-02, 9.99764927e-07],\n       [2.15632346e-03, 3.25811001e-03, 1.39163141e-02, ...,\n        6.13070052e-04, 5.52891396e-03, 2.05406676e-06],\n       ...,\n       [3.35919135e-03, 3.95392572e-03, 2.12270804e-02, ...,\n        1.98377997e-04, 2.53173484e-03, 8.20874471e-07],\n       [3.28631876e-03, 4.61212976e-03, 2.14198402e-02, ...,\n        3.76586742e-04, 4.43112365e-03, 1.24917724e-06],\n       [2.86318759e-03, 4.82369535e-03, 1.81523272e-02, ...,\n        2.78091208e-04, 3.45086977e-03, 1.19417019e-06]])]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33bf31400" } }
    },
    "otel/span/0x0/transient/id/0x33bd85270": {
      "ref": "otel/span/0x0/transient/id/0x33bd85270",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<function pyu_to_spu.<locals>.run_spu_io at 0x33bda9dc0>,\n array([[2.12247297e-03, 4.07381288e-03, 1.38199342e-02, ...,\n        4.43112365e-04, 4.15373766e-03, 2.24471086e-06],\n       [4.95768688e-03, 6.24588622e-03, 3.35448989e-02, ...,\n        1.03761166e-03, 1.91490362e-02, 9.99764927e-07],\n       [2.15632346e-03, 3.25811001e-03, 1.39163141e-02, ...,\n        6.13070052e-04, 5.52891396e-03, 2.05406676e-06],\n       ...,\n       [3.35919135e-03, 3.95392572e-03, 2.12270804e-02, ...,\n        1.98377997e-04, 2.53173484e-03, 8.20874471e-07],\n       [3.28631876e-03, 4.61212976e-03, 2.14198402e-02, ...,\n        3.76586742e-04, 4.43112365e-03, 1.24917724e-06],\n       [2.86318759e-03, 4.82369535e-03, 1.81523272e-02, ...,\n        2.78091208e-04, 3.45086977e-03, 1.19417019e-06]]),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        { "ref": "python/id/0x33bda9dc0+1" },
        { "ref": "python/id/0x33bf61db0+1" },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "python/id/0x33bda9550+1": {
      "ref": "python/id/0x33bda9550+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x617962f1556cf8d0",
      "module": "secretflow.device.kernels.pyu",
      "name": "pyu_to_spu.<locals>.get_shares_chunk_count",
      "signature": {
        "parameters": [
          { "name": "data", "kind": 1, "annotation": "typing.Any" },
          { "name": "runtime_config", "kind": 1, "annotation": "typing.Any" },
          { "name": "world_size", "kind": 1, "annotation": "typing.Any" },
          { "name": "vtype", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "builtins.int"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "firstlineno": 67,
      "source": "def get_shares_chunk_count(data, runtime_config, world_size, vtype) -> int:\n    io = SPUIO(runtime_config, world_size)\n    return io.get_shares_chunk_count(data, vtype)\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "python/id/0x17ee82ac0+1": {
      "ref": "python/id/0x17ee82ac0+1",
      "kind": "object",
      "type": "libspu.spu_pb2.RuntimeConfig",
      "snapshot": "protocol: SEMI2K\nfield: FM128\n"
    },
    "otel/span/0x0/transient/id/0x12f1b35f0": {
      "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "1"
    },
    "otel/span/0x0/transient/id/0x33bfb0a40": {
      "ref": "otel/span/0x0/transient/id/0x33bfb0a40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33bf56a40": {
      "ref": "otel/span/0x0/transient/id/0x33bf56a40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 1, 'resources': {'alice': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33bfc21c0" }
      }
    },
    "otel/span/0x0/transient/id/0x33bfc21c0": {
      "ref": "otel/span/0x0/transient/id/0x33bfc21c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'alice': 1}",
      "values": { "alice": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33bf40d30+1": {
      "ref": "python/id/0x33bf40d30+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33bf40d30>"
    },
    "ray/objectref/ObjectRef(e0dc174c83599034ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(e0dc174c83599034ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(e0dc174c83599034ffffffffffffffffffffffff0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33bf2b540": {
      "ref": "otel/span/0x0/transient/id/0x33bf2b540",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)"
        },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "otel/span/0x0/transient/id/0x33be9b640": {
      "ref": "otel/span/0x0/transient/id/0x33be9b640",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "secretflow/object/python/ray/objectref/ObjectRef(e0dc174c83599034ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(e0dc174c83599034ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(e0dc174c83599034ffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33bfe8040": {
      "ref": "otel/span/0x0/transient/id/0x33bfe8040",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'shares_chunk_count': <secretflow.device.device.pyu.PYUObject object at 0x33bfac730>}",
      "values": {
        "shares_chunk_count": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(e0dc174c83599034ffffffffffffffffffffffff0100000001000000)"
        }
      }
    },
    "otel/span/0x0/transient/frame/0x2afe90b80/line/136": {
      "ref": "otel/span/0x0/transient/frame/0x2afe90b80/line/136",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/distributed/primitive.py",
      "lineno": 136,
      "func": "get",
      "code": "return ray.get(object_refs)"
    },
    "otel/span/0x0/transient/frame/0x17b5bc630/line/79": {
      "ref": "otel/span/0x0/transient/frame/0x17b5bc630/line/79",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "lineno": 79,
      "func": "pyu_to_spu",
      "code": "shares_chunk_count = sfd.get(shares_chunk_count.data)"
    },
    "otel/span/0x0/transient/id/0x33bfc2ac0": {
      "ref": "otel/span/0x0/transient/id/0x33bfc2ac0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33bfad700": {
      "ref": "otel/span/0x0/transient/id/0x33bfad700",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/frame/0x17b5bc630/line/81": {
      "ref": "otel/span/0x0/transient/frame/0x17b5bc630/line/81",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "lineno": 81,
      "func": "pyu_to_spu",
      "code": "meta, io_info, *shares_chunk = self.device("
    },
    "otel/span/0x0/transient/id/0x33b9a5d40": {
      "ref": "otel/span/0x0/transient/id/0x33b9a5d40",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[array([[2.12247297e-03, 4.07381288e-03, 1.38199342e-02, ...,\n        4.43112365e-04, 4.15373766e-03, 2.24471086e-06],\n       [4.95768688e-03, 6.24588622e-03, 3.35448989e-02, ...,\n        1.03761166e-03, 1.91490362e-02, 9.99764927e-07],\n       [2.15632346e-03, 3.25811001e-03, 1.39163141e-02, ...,\n        6.13070052e-04, 5.52891396e-03, 2.05406676e-06],\n       ...,\n       [3.35919135e-03, 3.95392572e-03, 2.12270804e-02, ...,\n        1.98377997e-04, 2.53173484e-03, 8.20874471e-07],\n       [3.28631876e-03, 4.61212976e-03, 2.14198402e-02, ...,\n        3.76586742e-04, 4.43112365e-03, 1.24917724e-06],\n       [2.86318759e-03, 4.82369535e-03, 1.81523272e-02, ...,\n        2.78091208e-04, 3.45086977e-03, 1.19417019e-06]])]",
      "values": [{ "ref": "python/id/0x33bf61db0+1" }]
    },
    "python/id/0x33bf61db0+1": {
      "ref": "python/id/0x33bf61db0+1",
      "kind": "object",
      "type": "numpy.ndarray",
      "snapshot": "array([[2.12247297e-03, 4.07381288e-03, 1.38199342e-02, ...,\n        4.43112365e-04, 4.15373766e-03, 2.24471086e-06],\n       [4.95768688e-03, 6.24588622e-03, 3.35448989e-02, ...,\n        1.03761166e-03, 1.91490362e-02, 9.99764927e-07],\n       [2.15632346e-03, 3.25811001e-03, 1.39163141e-02, ...,\n        6.13070052e-04, 5.52891396e-03, 2.05406676e-06],\n       ...,\n       [3.35919135e-03, 3.95392572e-03, 2.12270804e-02, ...,\n        1.98377997e-04, 2.53173484e-03, 8.20874471e-07],\n       [3.28631876e-03, 4.61212976e-03, 2.14198402e-02, ...,\n        3.76586742e-04, 4.43112365e-03, 1.24917724e-06],\n       [2.86318759e-03, 4.82369535e-03, 1.81523272e-02, ...,\n        2.78091208e-04, 3.45086977e-03, 1.19417019e-06]])"
    },
    "otel/span/0x0/transient/id/0x33bfadc00": {
      "ref": "otel/span/0x0/transient/id/0x33bfadc00",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [array([[2.12247297e-03, 4.07381288e-03, 1.38199342e-02, ...,\n        4.43112365e-04, 4.15373766e-03, 2.24471086e-06],\n       [4.95768688e-03, 6.24588622e-03, 3.35448989e-02, ...,\n        1.03761166e-03, 1.91490362e-02, 9.99764927e-07],\n       [2.15632346e-03, 3.25811001e-03, 1.39163141e-02, ...,\n        6.13070052e-04, 5.52891396e-03, 2.05406676e-06],\n       ...,\n       [3.35919135e-03, 3.95392572e-03, 2.12270804e-02, ...,\n        1.98377997e-04, 2.53173484e-03, 8.20874471e-07],\n       [3.28631876e-03, 4.61212976e-03, 2.14198402e-02, ...,\n        3.76586742e-04, 4.43112365e-03, 1.24917724e-06],\n       [2.86318759e-03, 4.82369535e-03, 1.81523272e-02, ...,\n        2.78091208e-04, 3.45086977e-03, 1.19417019e-06]])]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33b9a5d40" } }
    },
    "python/id/0x33bda9dc0+1": {
      "ref": "python/id/0x33bda9dc0+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x8c1f7ca5876234",
      "module": "secretflow.device.kernels.pyu",
      "name": "pyu_to_spu.<locals>.run_spu_io",
      "signature": {
        "parameters": [
          { "name": "data", "kind": 1, "annotation": "typing.Any" },
          { "name": "runtime_config", "kind": 1, "annotation": "typing.Any" },
          { "name": "world_size", "kind": 1, "annotation": "typing.Any" },
          { "name": "vtype", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "firstlineno": 71,
      "source": "def run_spu_io(data, runtime_config, world_size, vtype):\n    io = SPUIO(runtime_config, world_size)\n    ret = io.make_shares(data, vtype)\n    return ret\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33b9ac4c0": {
      "ref": "otel/span/0x0/transient/id/0x33b9ac4c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33bfadc40": {
      "ref": "otel/span/0x0/transient/id/0x33bfadc40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 4, 'resources': {'alice': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bbc0" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33bdb06c0" }
      }
    },
    "otel/span/0x0/transient/id/0x106d0bbc0": {
      "ref": "otel/span/0x0/transient/id/0x106d0bbc0",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "4"
    },
    "otel/span/0x0/transient/id/0x33bdb06c0": {
      "ref": "otel/span/0x0/transient/id/0x33bdb06c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'alice': 1}",
      "values": { "alice": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33bfb98e0+1": {
      "ref": "python/id/0x33bfb98e0+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33bfb98e0>"
    },
    "otel/span/0x0/transient/id/0x33bdad440": {
      "ref": "otel/span/0x0/transient/id/0x33bdad440",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000),\n ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000),\n ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000),\n ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)"
    },
    "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000)": {
      "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000)"
    },
    "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000)": {
      "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000)"
    },
    "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)": {
      "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)"
    },
    "otel/span/0x0/transient/id/0x33bd85d10": {
      "ref": "otel/span/0x0/transient/id/0x33bd85d10",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)"
        },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "otel/span/0x0/transient/id/0x33c011e00": {
      "ref": "otel/span/0x0/transient/id/0x33c011e00",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[<secretflow.device.device.pyu.PYUObject object at 0x33bff5eb0>,\n <secretflow.device.device.pyu.PYUObject object at 0x33bfb90d0>,\n <secretflow.device.device.pyu.PYUObject object at 0x33bf3b670>,\n <secretflow.device.device.pyu.PYUObject object at 0x33bf3bdf0>]",
      "values": [
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)"
      ]
    },
    "python/id/0x12f0c9a60+1": {
      "ref": "python/id/0x12f0c9a60+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x1787269632a7a8a2",
      "module": "ray.actor",
      "name": "ActorMethod._remote",
      "signature": {
        "parameters": [
          { "name": "self", "kind": 1, "annotation": "typing.Any" },
          { "name": "args", "kind": 1, "annotation": "typing.Any" },
          { "name": "kwargs", "kind": 1, "annotation": "typing.Any" },
          { "name": "name", "kind": 1, "annotation": "typing.Any" },
          { "name": "num_returns", "kind": 1, "annotation": "typing.Any" },
          { "name": "concurrency_group", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/actor.py",
      "firstlineno": 166,
      "source": "@_tracing_actor_method_invocation\ndef _remote(\n    self, args=None, kwargs=None, name=\"\", num_returns=None, concurrency_group=None\n):\n    if num_returns is None:\n        num_returns = self._num_returns\n\n    def invocation(args, kwargs):\n        actor = self._actor_hard_ref or self._actor_ref()\n        if actor is None:\n            raise RuntimeError(\"Lost reference to actor\")\n        return actor._actor_method_call(\n            self._method_name,\n            args=args,\n            kwargs=kwargs,\n            name=name,\n            num_returns=num_returns,\n            concurrency_group_name=concurrency_group,\n        )\n\n    # Apply the decorator if there is one.\n    if self._decorator is not None:\n        invocation = self._decorator(invocation)\n\n    return invocation(args, kwargs)\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/frame/0x105be99e0/line/166": {
      "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166",
      "kind": "frame",
      "type": "builtins.frame",
      "local_vars": {
        "args": { "ref": "otel/span/0x0/transient/id/0x33e7c7d00" },
        "kwargs": { "ref": "otel/span/0x0/transient/id/0x33f059740" },
        "concurrency_group": { "ref": "python/none" },
        "name": { "ref": "otel/span/0x0/transient/id/0x104cba2f0" },
        "num_returns": { "ref": "python/none" },
        "self": { "ref": "python/id/0x33a81a5b0+1" }
      },
      "global_vars": {},
      "outer_frames": [
        { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
        { "ref": "otel/span/0x0/transient/frame/0x17b5c93a0/line/423" },
        { "ref": "otel/span/0x0/transient/frame/0x33a92b980/line/144" },
        { "ref": "otel/span/0x0/transient/frame/0x2afea5d60/line/190" },
        { "ref": "otel/span/0x0/transient/frame/0x33a8379f0/line/42" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661bc0/line/3508" },
        { "ref": "otel/span/0x0/transient/frame/0x11c6632d0/line/3448" },
        { "ref": "otel/span/0x0/transient/frame/0x105ba37e0/line/3269" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661df0/line/129" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660400/line/3064" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660c50/line/3009" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661870/line/549" },
        { "ref": "otel/span/0x0/transient/frame/0x11c626890/line/426" },
        { "ref": "otel/span/0x0/transient/frame/0x11c64b770/line/758" },
        { "ref": "otel/span/0x0/transient/frame/0x14c621df0/line/418" },
        { "ref": "otel/span/0x0/transient/frame/0x11812c420/line/513" },
        { "ref": "otel/span/0x0/transient/frame/0x118129210/line/524" },
        { "ref": "otel/span/0x0/transient/frame/0x14d077200/line/81" },
        { "ref": "otel/span/0x0/transient/frame/0x14d076fd0/line/1859" },
        { "ref": "otel/span/0x0/transient/frame/0x118113d60/line/570" },
        { "ref": "otel/span/0x0/transient/frame/0x11812e380/line/195" },
        { "ref": "otel/span/0x0/transient/frame/0x104e89a40/line/737" },
        { "ref": "otel/span/0x0/transient/frame/0x14d022260/line/1053" },
        { "ref": "otel/span/0x0/transient/frame/0x104ddc230/line/17" },
        { "ref": "otel/span/0x0/transient/frame/0x12c618b00/line/87" },
        { "ref": "otel/span/0x0/transient/frame/0x12c614a80/line/194" }
      ],
      "module": "ray.actor",
      "func": "ActorMethod._remote"
    },
    "otel/span/0x0/transient/id/0x33ba1f340": {
      "ref": "otel/span/0x0/transient/id/0x33ba1f340",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000),\n ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000))",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33bf41040": {
      "ref": "otel/span/0x0/transient/id/0x33bf41040",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x104cba2f0": {
      "ref": "otel/span/0x0/transient/id/0x104cba2f0",
      "kind": "object",
      "type": "builtins.str",
      "snapshot": "''"
    },
    "python/id/0x33a802ac0+1": {
      "ref": "python/id/0x33a802ac0+1",
      "kind": "object",
      "type": "ray.actor.ActorMethod",
      "snapshot": "<ray.actor.ActorMethod object at 0x33a802ac0>"
    },
    "otel/span/0x0/transient/frame/0x17b5c93a0/line/423": {
      "ref": "otel/span/0x0/transient/frame/0x17b5c93a0/line/423",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/util/tracing/tracing_helper.py",
      "lineno": 423,
      "func": "_start_span",
      "code": "return method(self, args, kwargs, *_args, **_kwargs)"
    },
    "otel/span/0x0/transient/frame/0x33a92b980/line/144": {
      "ref": "otel/span/0x0/transient/frame/0x33a92b980/line/144",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/actor.py",
      "lineno": 144,
      "func": "remote",
      "code": "return self._remote(args, kwargs)"
    },
    "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1833": {
      "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1833",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "lineno": 1833,
      "func": "infeed_shares",
      "code": "actor.infeed_share.remote(io_info, *shares_chunk[start_pos:end_pos])"
    },
    "otel/span/0x0/transient/frame/0x17b5bc630/line/88": {
      "ref": "otel/span/0x0/transient/frame/0x17b5bc630/line/88",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "lineno": 88,
      "func": "pyu_to_spu",
      "code": "spu.infeed_shares(io_info.data, [s.data for s in shares_chunk]),"
    },
    "ray/objectref/ObjectRef(f91b78d7db9a6593af23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(f91b78d7db9a6593af23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(f91b78d7db9a6593af23b462bfe8c365427a357b0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33c3aab40": {
      "ref": "otel/span/0x0/transient/id/0x33c3aab40",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000),\n ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000))",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33c4b8e00": {
      "ref": "otel/span/0x0/transient/id/0x33c4b8e00",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "python/id/0x33a81aa30+1": {
      "ref": "python/id/0x33a81aa30+1",
      "kind": "object",
      "type": "ray.actor.ActorMethod",
      "snapshot": "<ray.actor.ActorMethod object at 0x33a81aa30>"
    },
    "ray/objectref/ObjectRef(82891771158d68c1e11e0e6b35627ffff00336110100000001000000)": {
      "ref": "ray/objectref/ObjectRef(82891771158d68c1e11e0e6b35627ffff00336110100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(82891771158d68c1e11e0e6b35627ffff00336110100000001000000)"
    },
    "python/id/0x17b130ee0+1": {
      "ref": "python/id/0x17b130ee0+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x5f801ceed2220b05",
      "module": "secretflow.device.device.spu",
      "name": "SPU.infeed_shares",
      "signature": {
        "parameters": [
          { "name": "self", "kind": 1, "annotation": "typing.Any" },
          {
            "name": "io_info",
            "kind": 1,
            "annotation": "typing.Union[ray._raylet.ObjectRef, fed.fed_object.FedObject]"
          },
          {
            "name": "shares_chunk",
            "kind": 1,
            "annotation": "typing.List[typing.Union[ray._raylet.ObjectRef, fed.fed_object.FedObject]]"
          }
        ],
        "return_annotation": "typing.List[typing.Union[ray._raylet.ObjectRef, fed.fed_object.FedObject]]"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "firstlineno": 1818,
      "source": "def infeed_shares(\n    self,\n    io_info: Union[ray.ObjectRef, fed.FedObject],\n    shares_chunk: List[Union[ray.ObjectRef, fed.FedObject]],\n) -> List[Union[ray.ObjectRef, fed.FedObject]]:\n    assert (\n        len(shares_chunk) % len(self.actors) == 0\n    ), f\"{len(shares_chunk)} , {len(self.actors)}\"\n    chunks_pre_actor = int(len(shares_chunk) / len(self.actors))\n\n    ret = []\n    for i, actor in enumerate(self.actors.values()):\n        start_pos = i * chunks_pre_actor\n        end_pos = (i + 1) * chunks_pre_actor\n        ret.append(\n            actor.infeed_share.remote(io_info, *shares_chunk[start_pos:end_pos])\n        )\n\n    return ret\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818": {
      "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818",
      "kind": "frame",
      "type": "builtins.frame",
      "local_vars": {
        "self": {
          "ref": "secretflow/location/SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0"
        },
        "io_info": { "ref": "python/id/0x33e3816d0+1" },
        "shares_chunk": { "ref": "otel/span/0x0/transient/id/0x33e328b40" }
      },
      "global_vars": {},
      "outer_frames": [
        { "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818" },
        { "ref": "otel/span/0x0/transient/frame/0x2afed9400/line/1715" },
        { "ref": "otel/span/0x0/transient/frame/0x33ba9f040/line/210" },
        { "ref": "otel/span/0x0/transient/frame/0x33ba88230/line/210" },
        { "ref": "otel/span/0x0/transient/frame/0x2afedea10/line/1717" },
        { "ref": "otel/span/0x0/transient/frame/0x2afeda6a0/line/1750" },
        { "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/20" },
        { "ref": "otel/span/0x0/transient/frame/0x33a8379f0/line/42" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661bc0/line/3508" },
        { "ref": "otel/span/0x0/transient/frame/0x11c6632d0/line/3448" },
        { "ref": "otel/span/0x0/transient/frame/0x105ba37e0/line/3269" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661df0/line/129" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660400/line/3064" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660c50/line/3009" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661870/line/549" },
        { "ref": "otel/span/0x0/transient/frame/0x11c626890/line/426" },
        { "ref": "otel/span/0x0/transient/frame/0x11c64b770/line/758" },
        { "ref": "otel/span/0x0/transient/frame/0x14c621df0/line/418" },
        { "ref": "otel/span/0x0/transient/frame/0x11812c420/line/513" },
        { "ref": "otel/span/0x0/transient/frame/0x118129210/line/524" },
        { "ref": "otel/span/0x0/transient/frame/0x14d077200/line/81" },
        { "ref": "otel/span/0x0/transient/frame/0x14d076fd0/line/1859" },
        { "ref": "otel/span/0x0/transient/frame/0x118113d60/line/570" },
        { "ref": "otel/span/0x0/transient/frame/0x11812e380/line/195" },
        { "ref": "otel/span/0x0/transient/frame/0x104e89a40/line/737" },
        { "ref": "otel/span/0x0/transient/frame/0x14d022260/line/1053" },
        { "ref": "otel/span/0x0/transient/frame/0x104ddc230/line/17" },
        { "ref": "otel/span/0x0/transient/frame/0x12c618b00/line/87" },
        { "ref": "otel/span/0x0/transient/frame/0x12c614a80/line/194" }
      ],
      "module": "secretflow.device.device.spu",
      "func": "SPU.infeed_shares"
    },
    "secretflow/location/SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0": {
      "ref": "secretflow/location/SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0",
      "kind": "remote_location",
      "type": "secretflow.device.device.spu.SPU",
      "location": {
        "kind": "location",
        "type": "SPU",
        "parties": ["alice", "bob"],
        "parameters": { "protocol": "SEMI2K", "field": "FM128", "fxp_fraction_bits": 0 }
      }
    },
    "otel/span/0x0/transient/id/0x33bfab600": {
      "ref": "otel/span/0x0/transient/id/0x33bfab600",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000),\n ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33bfab100": {
      "ref": "otel/span/0x0/transient/id/0x33bfab100",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(f91b78d7db9a6593af23b462bfe8c365427a357b0100000001000000),\n ObjectRef(82891771158d68c1e11e0e6b35627ffff00336110100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(f91b78d7db9a6593af23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(82891771158d68c1e11e0e6b35627ffff00336110100000001000000)"
        }
      ]
    },
    "python/id/0x17b1528b0+1": {
      "ref": "python/id/0x17b1528b0+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x4039ba98717959b9",
      "module": "secretflow.device.kernels.pyu",
      "name": "pyu_to_spu",
      "signature": {
        "parameters": [
          {
            "name": "self",
            "kind": 1,
            "annotation": "secretflow.device.device.pyu.PYUObject"
          },
          {
            "name": "spu",
            "kind": 1,
            "annotation": "secretflow.device.device.spu.SPU"
          },
          { "name": "spu_vis", "kind": 1, "annotation": "builtins.str" }
        ],
        "return_annotation": "secretflow.device.device.spu.SPUObject"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "firstlineno": 48,
      "source": "@register_to(DeviceType.PYU, DeviceType.SPU)\ndef pyu_to_spu(self: PYUObject, spu: SPU, spu_vis: str = 'secret') -> SPUObject:\n    \"\"\"Transfer pyuobject to the spu.\n\n    Args:\n        self: the pyuobject to transfer.\n        spu: to this SPU device.\n        spu_vis: optional; SPU object visibility. Value can be:\n            - secret: Secret sharing with protocol spdz-2k, aby3, etc.\n            - public: Public sharing, which means data will be replicated to each node.\n\n    Returns:\n        the transferred SPUObject.\n    \"\"\"\n    assert isinstance(spu, SPU), f'Expect an SPU but got {type(spu)}'\n    assert spu_vis in ('secret', 'public'), f'vis must be public or secret'\n\n    vtype = Visibility.VIS_PUBLIC if spu_vis == 'public' else Visibility.VIS_SECRET\n\n    def get_shares_chunk_count(data, runtime_config, world_size, vtype) -> int:\n        io = SPUIO(runtime_config, world_size)\n        return io.get_shares_chunk_count(data, vtype)\n\n    def run_spu_io(data, runtime_config, world_size, vtype):\n        io = SPUIO(runtime_config, world_size)\n        ret = io.make_shares(data, vtype)\n        return ret\n\n    shares_chunk_count = self.device(get_shares_chunk_count)(\n        self.data, spu.conf, spu.world_size, vtype\n    )\n    shares_chunk_count = sfd.get(shares_chunk_count.data)\n\n    meta, io_info, *shares_chunk = self.device(\n        run_spu_io, num_returns=(2 + shares_chunk_count * spu.world_size)\n    )(self.data, spu.conf, spu.world_size, vtype)\n\n    return SPUObject(\n        spu,\n        meta.data,\n        spu.infeed_shares(io_info.data, [s.data for s in shares_chunk]),\n    )\n",
      "docstring": "Transfer pyuobject to the spu.\n\nArgs:\n    self: the pyuobject to transfer.\n    spu: to this SPU device.\n    spu_vis: optional; SPU object visibility. Value can be:\n        - secret: Secret sharing with protocol spdz-2k, aby3, etc.\n        - public: Public sharing, which means data will be replicated to each node.\n\nReturns:\n    the transferred SPUObject.",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/frame/0x17b5bc630/line/48": {
      "ref": "otel/span/0x0/transient/frame/0x17b5bc630/line/48",
      "kind": "frame",
      "type": "builtins.frame",
      "local_vars": {
        "self": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)"
        },
        "spu": {
          "ref": "secretflow/location/SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0"
        },
        "spu_vis": { "ref": "otel/span/0x0/transient/id/0x10795a0f0" }
      },
      "global_vars": {
        "SPU": { "ref": "python/id/0x17b02ce20+1" },
        "Visibility": { "ref": "python/id/0x12f1a3310+1" },
        "SPUObject": { "ref": "python/id/0x17b02b6b0+1" }
      },
      "outer_frames": [
        { "ref": "otel/span/0x0/transient/frame/0x17b5bc630/line/48" },
        { "ref": "otel/span/0x0/transient/frame/0x17b5aca00/line/80" },
        { "ref": "otel/span/0x0/transient/frame/0x17b5bbb50/line/111" },
        { "ref": "otel/span/0x0/transient/frame/0x17b5c71a0/line/70" },
        { "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/16" },
        { "ref": "otel/span/0x0/transient/frame/0x33a8379f0/line/42" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661bc0/line/3508" },
        { "ref": "otel/span/0x0/transient/frame/0x11c6632d0/line/3448" },
        { "ref": "otel/span/0x0/transient/frame/0x105ba37e0/line/3269" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661df0/line/129" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660400/line/3064" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660c50/line/3009" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661870/line/549" },
        { "ref": "otel/span/0x0/transient/frame/0x11c626890/line/426" },
        { "ref": "otel/span/0x0/transient/frame/0x11c64b770/line/758" },
        { "ref": "otel/span/0x0/transient/frame/0x14c621df0/line/418" },
        { "ref": "otel/span/0x0/transient/frame/0x11812c420/line/513" },
        { "ref": "otel/span/0x0/transient/frame/0x118129210/line/524" },
        { "ref": "otel/span/0x0/transient/frame/0x14d077200/line/81" },
        { "ref": "otel/span/0x0/transient/frame/0x14d076fd0/line/1859" },
        { "ref": "otel/span/0x0/transient/frame/0x118113d60/line/570" },
        { "ref": "otel/span/0x0/transient/frame/0x11812e380/line/195" },
        { "ref": "otel/span/0x0/transient/frame/0x104e89a40/line/737" },
        { "ref": "otel/span/0x0/transient/frame/0x14d022260/line/1053" },
        { "ref": "otel/span/0x0/transient/frame/0x104ddc230/line/17" },
        { "ref": "otel/span/0x0/transient/frame/0x12c618b00/line/87" },
        { "ref": "otel/span/0x0/transient/frame/0x12c614a80/line/194" }
      ],
      "module": "secretflow.device.kernels.pyu",
      "func": "pyu_to_spu"
    },
    "otel/span/0x0/transient/id/0x10795a0f0": {
      "ref": "otel/span/0x0/transient/id/0x10795a0f0",
      "kind": "object",
      "type": "builtins.str",
      "snapshot": "'secret'"
    },
    "python/id/0x17b02ce20+1": {
      "ref": "python/id/0x17b02ce20+1",
      "kind": "object",
      "type": "abc.ABCMeta",
      "snapshot": "<class 'secretflow.device.device.spu.SPU'>"
    },
    "python/id/0x12f1a3310+1": {
      "ref": "python/id/0x12f1a3310+1",
      "kind": "object",
      "type": "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
      "snapshot": "<google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper object at 0x12f1a3310>"
    },
    "python/id/0x17b02b6b0+1": {
      "ref": "python/id/0x17b02b6b0+1",
      "kind": "object",
      "type": "abc.ABCMeta",
      "snapshot": "<class 'secretflow.device.device.spu.SPUObject'>"
    },
    "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.spu.SPUObject",
      "location": {
        "kind": "location",
        "type": "SPU",
        "parties": ["alice", "bob"],
        "parameters": { "protocol": "SEMI2K", "field": "FM128", "fxp_fraction_bits": 0 }
      },
      "refs": [
        "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)",
        "ray/objectref/ObjectRef(f91b78d7db9a6593af23b462bfe8c365427a357b0100000001000000)",
        "ray/objectref/ObjectRef(82891771158d68c1e11e0e6b35627ffff00336110100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33c3a7ec0": {
      "ref": "otel/span/0x0/transient/id/0x33c3a7ec0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'x1': <secretflow.device.device.spu.SPUObject object at 0x33c2f1220>}",
      "values": {
        "x1": {
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)"
        }
      }
    },
    "otel/span/0x0/transient/id/0x33c3ae580": {
      "ref": "otel/span/0x0/transient/id/0x33c3ae580",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/6": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/6",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 6,
      "func": "main",
      "code": "x2 = x2.to(spu)"
    },
    "otel/span/0x0/transient/id/0x33c387900": {
      "ref": "otel/span/0x0/transient/id/0x33c387900",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[array([[2.02303714e-05, 7.14151387e-05, 7.80912083e-06, ...,\n        4.11377527e-05, 9.93888105e-05, 2.76210625e-05],\n       [1.11871180e-05, 9.10202163e-06, 3.68359191e-06, ...,\n        6.82416549e-05, 9.63328632e-05, 3.01833568e-05],\n       [9.25716972e-06, 1.01363423e-05, 3.66713681e-06, ...,\n        1.19581570e-05, 7.71509168e-05, 1.99576869e-05],\n       ...,\n       [8.72120357e-07, 1.13446168e-06, 8.48142924e-07, ...,\n        7.83497884e-06, 5.77809121e-05, 1.43864598e-05],\n       [4.21015515e-06, 5.13634227e-06, 2.24894217e-06, ...,\n        4.29478138e-05, 7.47296662e-05, 2.48001881e-05],\n       [1.43347438e-06, 2.51292901e-06, 1.59779031e-06, ...,\n        1.74682652e-05, 6.33286319e-05, 1.61683122e-05]])]",
      "values": [{ "ref": "python/id/0x33c3a9ab0+1" }]
    },
    "python/id/0x33c3a9ab0+1": {
      "ref": "python/id/0x33c3a9ab0+1",
      "kind": "object",
      "type": "numpy.ndarray",
      "snapshot": "array([[2.02303714e-05, 7.14151387e-05, 7.80912083e-06, ...,\n        4.11377527e-05, 9.93888105e-05, 2.76210625e-05],\n       [1.11871180e-05, 9.10202163e-06, 3.68359191e-06, ...,\n        6.82416549e-05, 9.63328632e-05, 3.01833568e-05],\n       [9.25716972e-06, 1.01363423e-05, 3.66713681e-06, ...,\n        1.19581570e-05, 7.71509168e-05, 1.99576869e-05],\n       ...,\n       [8.72120357e-07, 1.13446168e-06, 8.48142924e-07, ...,\n        7.83497884e-06, 5.77809121e-05, 1.43864598e-05],\n       [4.21015515e-06, 5.13634227e-06, 2.24894217e-06, ...,\n        4.29478138e-05, 7.47296662e-05, 2.48001881e-05],\n       [1.43347438e-06, 2.51292901e-06, 1.59779031e-06, ...,\n        1.74682652e-05, 6.33286319e-05, 1.61683122e-05]])"
    },
    "otel/span/0x0/transient/id/0x33c3d9e40": {
      "ref": "otel/span/0x0/transient/id/0x33c3d9e40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [array([[2.02303714e-05, 7.14151387e-05, 7.80912083e-06, ...,\n        4.11377527e-05, 9.93888105e-05, 2.76210625e-05],\n       [1.11871180e-05, 9.10202163e-06, 3.68359191e-06, ...,\n        6.82416549e-05, 9.63328632e-05, 3.01833568e-05],\n       [9.25716972e-06, 1.01363423e-05, 3.66713681e-06, ...,\n        1.19581570e-05, 7.71509168e-05, 1.99576869e-05],\n       ...,\n       [8.72120357e-07, 1.13446168e-06, 8.48142924e-07, ...,\n        7.83497884e-06, 5.77809121e-05, 1.43864598e-05],\n       [4.21015515e-06, 5.13634227e-06, 2.24894217e-06, ...,\n        4.29478138e-05, 7.47296662e-05, 2.48001881e-05],\n       [1.43347438e-06, 2.51292901e-06, 1.59779031e-06, ...,\n        1.74682652e-05, 6.33286319e-05, 1.61683122e-05]])]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33c387900" } }
    },
    "otel/span/0x0/transient/id/0x33c394cc0": {
      "ref": "otel/span/0x0/transient/id/0x33c394cc0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<function pyu_to_spu.<locals>.get_shares_chunk_count at 0x33c3b1f70>,\n array([[2.02303714e-05, 7.14151387e-05, 7.80912083e-06, ...,\n        4.11377527e-05, 9.93888105e-05, 2.76210625e-05],\n       [1.11871180e-05, 9.10202163e-06, 3.68359191e-06, ...,\n        6.82416549e-05, 9.63328632e-05, 3.01833568e-05],\n       [9.25716972e-06, 1.01363423e-05, 3.66713681e-06, ...,\n        1.19581570e-05, 7.71509168e-05, 1.99576869e-05],\n       ...,\n       [8.72120357e-07, 1.13446168e-06, 8.48142924e-07, ...,\n        7.83497884e-06, 5.77809121e-05, 1.43864598e-05],\n       [4.21015515e-06, 5.13634227e-06, 2.24894217e-06, ...,\n        4.29478138e-05, 7.47296662e-05, 2.48001881e-05],\n       [1.43347438e-06, 2.51292901e-06, 1.59779031e-06, ...,\n        1.74682652e-05, 6.33286319e-05, 1.61683122e-05]]),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        { "ref": "python/id/0x33c3b1f70+1" },
        { "ref": "python/id/0x33c3a9ab0+1" },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "python/id/0x33c3b1f70+1": {
      "ref": "python/id/0x33c3b1f70+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x617962f1556cf8d0",
      "module": "secretflow.device.kernels.pyu",
      "name": "pyu_to_spu.<locals>.get_shares_chunk_count",
      "signature": {
        "parameters": [
          { "name": "data", "kind": 1, "annotation": "typing.Any" },
          { "name": "runtime_config", "kind": 1, "annotation": "typing.Any" },
          { "name": "world_size", "kind": 1, "annotation": "typing.Any" },
          { "name": "vtype", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "builtins.int"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "firstlineno": 67,
      "source": "def get_shares_chunk_count(data, runtime_config, world_size, vtype) -> int:\n    io = SPUIO(runtime_config, world_size)\n    return io.get_shares_chunk_count(data, vtype)\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33c3f8280": {
      "ref": "otel/span/0x0/transient/id/0x33c3f8280",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33c3d9980": {
      "ref": "otel/span/0x0/transient/id/0x33c3d9980",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 1, 'resources': {'bob': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33c3f8340" }
      }
    },
    "otel/span/0x0/transient/id/0x33c3f8340": {
      "ref": "otel/span/0x0/transient/id/0x33c3f8340",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'bob': 1}",
      "values": { "bob": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33c384970+1": {
      "ref": "python/id/0x33c384970+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33c384970>"
    },
    "ray/objectref/ObjectRef(8849b62d89cb30f9ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(8849b62d89cb30f9ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(8849b62d89cb30f9ffffffffffffffffffffffff0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33bd85bd0": {
      "ref": "otel/span/0x0/transient/id/0x33bd85bd0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)"
        },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "otel/span/0x0/transient/id/0x33c3a7b40": {
      "ref": "otel/span/0x0/transient/id/0x33c3a7b40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "secretflow/object/python/ray/objectref/ObjectRef(8849b62d89cb30f9ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(8849b62d89cb30f9ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(8849b62d89cb30f9ffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33c4a2f80": {
      "ref": "otel/span/0x0/transient/id/0x33c4a2f80",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'shares_chunk_count': <secretflow.device.device.pyu.PYUObject object at 0x33c28e5e0>}",
      "values": {
        "shares_chunk_count": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(8849b62d89cb30f9ffffffffffffffffffffffff0100000001000000)"
        }
      }
    },
    "otel/span/0x0/transient/id/0x33c572600": {
      "ref": "otel/span/0x0/transient/id/0x33c572600",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33c3f3fc0": {
      "ref": "otel/span/0x0/transient/id/0x33c3f3fc0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33c565f40": {
      "ref": "otel/span/0x0/transient/id/0x33c565f40",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[array([[2.02303714e-05, 7.14151387e-05, 7.80912083e-06, ...,\n        4.11377527e-05, 9.93888105e-05, 2.76210625e-05],\n       [1.11871180e-05, 9.10202163e-06, 3.68359191e-06, ...,\n        6.82416549e-05, 9.63328632e-05, 3.01833568e-05],\n       [9.25716972e-06, 1.01363423e-05, 3.66713681e-06, ...,\n        1.19581570e-05, 7.71509168e-05, 1.99576869e-05],\n       ...,\n       [8.72120357e-07, 1.13446168e-06, 8.48142924e-07, ...,\n        7.83497884e-06, 5.77809121e-05, 1.43864598e-05],\n       [4.21015515e-06, 5.13634227e-06, 2.24894217e-06, ...,\n        4.29478138e-05, 7.47296662e-05, 2.48001881e-05],\n       [1.43347438e-06, 2.51292901e-06, 1.59779031e-06, ...,\n        1.74682652e-05, 6.33286319e-05, 1.61683122e-05]])]",
      "values": [{ "ref": "python/id/0x33c3c4930+1" }]
    },
    "python/id/0x33c3c4930+1": {
      "ref": "python/id/0x33c3c4930+1",
      "kind": "object",
      "type": "numpy.ndarray",
      "snapshot": "array([[2.02303714e-05, 7.14151387e-05, 7.80912083e-06, ...,\n        4.11377527e-05, 9.93888105e-05, 2.76210625e-05],\n       [1.11871180e-05, 9.10202163e-06, 3.68359191e-06, ...,\n        6.82416549e-05, 9.63328632e-05, 3.01833568e-05],\n       [9.25716972e-06, 1.01363423e-05, 3.66713681e-06, ...,\n        1.19581570e-05, 7.71509168e-05, 1.99576869e-05],\n       ...,\n       [8.72120357e-07, 1.13446168e-06, 8.48142924e-07, ...,\n        7.83497884e-06, 5.77809121e-05, 1.43864598e-05],\n       [4.21015515e-06, 5.13634227e-06, 2.24894217e-06, ...,\n        4.29478138e-05, 7.47296662e-05, 2.48001881e-05],\n       [1.43347438e-06, 2.51292901e-06, 1.59779031e-06, ...,\n        1.74682652e-05, 6.33286319e-05, 1.61683122e-05]])"
    },
    "otel/span/0x0/transient/id/0x33c569600": {
      "ref": "otel/span/0x0/transient/id/0x33c569600",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [array([[2.02303714e-05, 7.14151387e-05, 7.80912083e-06, ...,\n        4.11377527e-05, 9.93888105e-05, 2.76210625e-05],\n       [1.11871180e-05, 9.10202163e-06, 3.68359191e-06, ...,\n        6.82416549e-05, 9.63328632e-05, 3.01833568e-05],\n       [9.25716972e-06, 1.01363423e-05, 3.66713681e-06, ...,\n        1.19581570e-05, 7.71509168e-05, 1.99576869e-05],\n       ...,\n       [8.72120357e-07, 1.13446168e-06, 8.48142924e-07, ...,\n        7.83497884e-06, 5.77809121e-05, 1.43864598e-05],\n       [4.21015515e-06, 5.13634227e-06, 2.24894217e-06, ...,\n        4.29478138e-05, 7.47296662e-05, 2.48001881e-05],\n       [1.43347438e-06, 2.51292901e-06, 1.59779031e-06, ...,\n        1.74682652e-05, 6.33286319e-05, 1.61683122e-05]])]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33c565f40" } }
    },
    "otel/span/0x0/transient/id/0x33bf654f0": {
      "ref": "otel/span/0x0/transient/id/0x33bf654f0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<secretflow.device.device.spu.SPUObject object at 0x33e205fd0>,\n <secretflow.device.device.spu.SPUObject object at 0x33e2926d0>,\n <secretflow.device.device.spu.SPUObject object at 0x33c2f1220>,\n <secretflow.device.device.spu.SPUObject object at 0x33bfcba90>,\n <secretflow.device.device.spu.SPUObject object at 0x33c598f40>)",
      "values": [
        {
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)"
        }
      ]
    },
    "python/id/0x33c3b1ee0+1": {
      "ref": "python/id/0x33c3b1ee0+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x8c1f7ca5876234",
      "module": "secretflow.device.kernels.pyu",
      "name": "pyu_to_spu.<locals>.run_spu_io",
      "signature": {
        "parameters": [
          { "name": "data", "kind": 1, "annotation": "typing.Any" },
          { "name": "runtime_config", "kind": 1, "annotation": "typing.Any" },
          { "name": "world_size", "kind": 1, "annotation": "typing.Any" },
          { "name": "vtype", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "firstlineno": 71,
      "source": "def run_spu_io(data, runtime_config, world_size, vtype):\n    io = SPUIO(runtime_config, world_size)\n    ret = io.make_shares(data, vtype)\n    return ret\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33c3ea1c0": {
      "ref": "otel/span/0x0/transient/id/0x33c3ea1c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33c5695c0": {
      "ref": "otel/span/0x0/transient/id/0x33c5695c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 4, 'resources': {'bob': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bbc0" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33c3d9940" }
      }
    },
    "otel/span/0x0/transient/id/0x33c3d9940": {
      "ref": "otel/span/0x0/transient/id/0x33c3d9940",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'bob': 1}",
      "values": { "bob": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33c398820+1": {
      "ref": "python/id/0x33c398820+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33c398820>"
    },
    "otel/span/0x0/transient/id/0x33c38c800": {
      "ref": "otel/span/0x0/transient/id/0x33c38c800",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000),\n ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000002000000),\n ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000003000000),\n ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)"
    },
    "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000002000000)": {
      "ref": "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000002000000)"
    },
    "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000003000000)": {
      "ref": "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000003000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000003000000)"
    },
    "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)": {
      "ref": "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)"
    },
    "otel/span/0x0/transient/id/0x33bd85770": {
      "ref": "otel/span/0x0/transient/id/0x33bd85770",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)"
        },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "otel/span/0x0/transient/id/0x33c58df40": {
      "ref": "otel/span/0x0/transient/id/0x33c58df40",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[<secretflow.device.device.pyu.PYUObject object at 0x33c393c70>,\n <secretflow.device.device.pyu.PYUObject object at 0x33c3937c0>,\n <secretflow.device.device.pyu.PYUObject object at 0x33c58ffa0>,\n <secretflow.device.device.pyu.PYUObject object at 0x33c3b2190>]",
      "values": [
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000002000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000002000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000002000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000003000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000003000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000003000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33c3b0c80": {
      "ref": "otel/span/0x0/transient/id/0x33c3b0c80",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000),\n ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000))",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33c553840": {
      "ref": "otel/span/0x0/transient/id/0x33c553840",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(359ec6ce30d3ca2daf23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(359ec6ce30d3ca2daf23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(359ec6ce30d3ca2daf23b462bfe8c365427a357b0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33c3aae80": {
      "ref": "otel/span/0x0/transient/id/0x33c3aae80",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000002000000),\n ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000))",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33c5c3100": {
      "ref": "otel/span/0x0/transient/id/0x33c5c3100",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(1e8ff6d236132784e11e0e6b35627ffff00336110100000001000000)": {
      "ref": "ray/objectref/ObjectRef(1e8ff6d236132784e11e0e6b35627ffff00336110100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(1e8ff6d236132784e11e0e6b35627ffff00336110100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33c553e40": {
      "ref": "otel/span/0x0/transient/id/0x33c553e40",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000003000000),\n ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33c553100": {
      "ref": "otel/span/0x0/transient/id/0x33c553100",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(359ec6ce30d3ca2daf23b462bfe8c365427a357b0100000001000000),\n ObjectRef(1e8ff6d236132784e11e0e6b35627ffff00336110100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(359ec6ce30d3ca2daf23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(1e8ff6d236132784e11e0e6b35627ffff00336110100000001000000)"
        }
      ]
    },
    "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.spu.SPUObject",
      "location": {
        "kind": "location",
        "type": "SPU",
        "parties": ["alice", "bob"],
        "parameters": { "protocol": "SEMI2K", "field": "FM128", "fxp_fraction_bits": 0 }
      },
      "refs": [
        "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)",
        "ray/objectref/ObjectRef(359ec6ce30d3ca2daf23b462bfe8c365427a357b0100000001000000)",
        "ray/objectref/ObjectRef(1e8ff6d236132784e11e0e6b35627ffff00336110100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33c382180": {
      "ref": "otel/span/0x0/transient/id/0x33c382180",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'x2': <secretflow.device.device.spu.SPUObject object at 0x33bfcba90>}",
      "values": {
        "x2": {
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)"
        }
      }
    },
    "otel/span/0x0/transient/id/0x33c3aefc0": {
      "ref": "otel/span/0x0/transient/id/0x33c3aefc0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)"
        }
      ]
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/7": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/7",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 7,
      "func": "main",
      "code": "y = y.to(spu)"
    },
    "otel/span/0x0/transient/id/0x33c3a7f00": {
      "ref": "otel/span/0x0/transient/id/0x33c3a7f00",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[array([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n       1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n       0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n       0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n       0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0,\n       0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n       0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,\n       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1])]",
      "values": [{ "ref": "python/id/0x33c3c4870+1" }]
    },
    "python/id/0x33c3c4870+1": {
      "ref": "python/id/0x33c3c4870+1",
      "kind": "object",
      "type": "numpy.ndarray",
      "snapshot": "array([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n       1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n       0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n       0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n       0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0,\n       0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n       0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,\n       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1])"
    },
    "otel/span/0x0/transient/id/0x33c3aeec0": {
      "ref": "otel/span/0x0/transient/id/0x33c3aeec0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [array([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n       1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n       0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n       0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n       0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0,\n       0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n       0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,\n       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1])]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33c3a7f00" } }
    },
    "otel/span/0x0/transient/id/0x33c3a64f0": {
      "ref": "otel/span/0x0/transient/id/0x33c3a64f0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<function pyu_to_spu.<locals>.get_shares_chunk_count at 0x33c59ac10>,\n array([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n       1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n       0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n       0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n       0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0,\n       0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n       0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,\n       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1]),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        { "ref": "python/id/0x33c59ac10+1" },
        { "ref": "python/id/0x33c3c4870+1" },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "python/id/0x33c59ac10+1": {
      "ref": "python/id/0x33c59ac10+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x617962f1556cf8d0",
      "module": "secretflow.device.kernels.pyu",
      "name": "pyu_to_spu.<locals>.get_shares_chunk_count",
      "signature": {
        "parameters": [
          { "name": "data", "kind": 1, "annotation": "typing.Any" },
          { "name": "runtime_config", "kind": 1, "annotation": "typing.Any" },
          { "name": "world_size", "kind": 1, "annotation": "typing.Any" },
          { "name": "vtype", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "builtins.int"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "firstlineno": 67,
      "source": "def get_shares_chunk_count(data, runtime_config, world_size, vtype) -> int:\n    io = SPUIO(runtime_config, world_size)\n    return io.get_shares_chunk_count(data, vtype)\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33c3ea080": {
      "ref": "otel/span/0x0/transient/id/0x33c3ea080",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33c3aee40": {
      "ref": "otel/span/0x0/transient/id/0x33c3aee40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 1, 'resources': {'bob': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33c549ec0" }
      }
    },
    "otel/span/0x0/transient/id/0x33c549ec0": {
      "ref": "otel/span/0x0/transient/id/0x33c549ec0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'bob': 1}",
      "values": { "bob": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33c3848e0+1": {
      "ref": "python/id/0x33c3848e0+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33c3848e0>"
    },
    "ray/objectref/ObjectRef(85748392bcd969ccffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(85748392bcd969ccffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(85748392bcd969ccffffffffffffffffffffffff0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33c3a6cc0": {
      "ref": "otel/span/0x0/transient/id/0x33c3a6cc0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)"
        },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "otel/span/0x0/transient/id/0x33c4a5fc0": {
      "ref": "otel/span/0x0/transient/id/0x33c4a5fc0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "secretflow/object/python/ray/objectref/ObjectRef(85748392bcd969ccffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(85748392bcd969ccffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(85748392bcd969ccffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33c3d9180": {
      "ref": "otel/span/0x0/transient/id/0x33c3d9180",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33c616d40": {
      "ref": "otel/span/0x0/transient/id/0x33c616d40",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33c4b0100": {
      "ref": "otel/span/0x0/transient/id/0x33c4b0100",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[array([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n       1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n       0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n       0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n       0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0,\n       0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n       0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,\n       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1])]",
      "values": [{ "ref": "python/id/0x33c3fa8d0+1" }]
    },
    "python/id/0x33c3fa8d0+1": {
      "ref": "python/id/0x33c3fa8d0+1",
      "kind": "object",
      "type": "numpy.ndarray",
      "snapshot": "array([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n       1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n       0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n       0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n       0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0,\n       0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n       0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,\n       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1])"
    },
    "otel/span/0x0/transient/id/0x33c616d80": {
      "ref": "otel/span/0x0/transient/id/0x33c616d80",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [array([1, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1,\n       1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1,\n       0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0,\n       1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1,\n       0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1,\n       1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1,\n       1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0,\n       1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1,\n       0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1,\n       1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0,\n       1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0,\n       0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1,\n       1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0,\n       1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0,\n       0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0,\n       0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1,\n       0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1,\n       1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1])]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33c4b0100" } }
    },
    "python/id/0x33c59adc0+1": {
      "ref": "python/id/0x33c59adc0+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x8c1f7ca5876234",
      "module": "secretflow.device.kernels.pyu",
      "name": "pyu_to_spu.<locals>.run_spu_io",
      "signature": {
        "parameters": [
          { "name": "data", "kind": 1, "annotation": "typing.Any" },
          { "name": "runtime_config", "kind": 1, "annotation": "typing.Any" },
          { "name": "world_size", "kind": 1, "annotation": "typing.Any" },
          { "name": "vtype", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "firstlineno": 71,
      "source": "def run_spu_io(data, runtime_config, world_size, vtype):\n    io = SPUIO(runtime_config, world_size)\n    ret = io.make_shares(data, vtype)\n    return ret\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33c586880": {
      "ref": "otel/span/0x0/transient/id/0x33c586880",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33c616840": {
      "ref": "otel/span/0x0/transient/id/0x33c616840",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 4, 'resources': {'bob': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bbc0" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33c6180c0" }
      }
    },
    "otel/span/0x0/transient/id/0x33c6180c0": {
      "ref": "otel/span/0x0/transient/id/0x33c6180c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'bob': 1}",
      "values": { "bob": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33c571d60+1": {
      "ref": "python/id/0x33c571d60+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33c571d60>"
    },
    "otel/span/0x0/transient/id/0x33c5fbe40": {
      "ref": "otel/span/0x0/transient/id/0x33c5fbe40",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000),\n ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000),\n ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000),\n ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)"
    },
    "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000)": {
      "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000)"
    },
    "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000)": {
      "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000)"
    },
    "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)": {
      "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)"
    },
    "otel/span/0x0/transient/id/0x33c3a6b30": {
      "ref": "otel/span/0x0/transient/id/0x33c3a6b30",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)"
        },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "otel/span/0x0/transient/id/0x33c386780": {
      "ref": "otel/span/0x0/transient/id/0x33c386780",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[<secretflow.device.device.pyu.PYUObject object at 0x33c5df640>,\n <secretflow.device.device.pyu.PYUObject object at 0x33c5df940>,\n <secretflow.device.device.pyu.PYUObject object at 0x33c5df250>,\n <secretflow.device.device.pyu.PYUObject object at 0x33c571580>]",
      "values": [
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33c3a7240": {
      "ref": "otel/span/0x0/transient/id/0x33c3a7240",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000),\n ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000))",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33c570040": {
      "ref": "otel/span/0x0/transient/id/0x33c570040",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(2751d69548dba956af23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(2751d69548dba956af23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(2751d69548dba956af23b462bfe8c365427a357b0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33c5e4700": {
      "ref": "otel/span/0x0/transient/id/0x33c5e4700",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(71b133a11e1c461ce11e0e6b35627ffff00336110100000001000000)": {
      "ref": "ray/objectref/ObjectRef(71b133a11e1c461ce11e0e6b35627ffff00336110100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(71b133a11e1c461ce11e0e6b35627ffff00336110100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33c549ac0": {
      "ref": "otel/span/0x0/transient/id/0x33c549ac0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000),\n ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33c549780": {
      "ref": "otel/span/0x0/transient/id/0x33c549780",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(2751d69548dba956af23b462bfe8c365427a357b0100000001000000),\n ObjectRef(71b133a11e1c461ce11e0e6b35627ffff00336110100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(2751d69548dba956af23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(71b133a11e1c461ce11e0e6b35627ffff00336110100000001000000)"
        }
      ]
    },
    "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.spu.SPUObject",
      "location": {
        "kind": "location",
        "type": "SPU",
        "parties": ["alice", "bob"],
        "parameters": { "protocol": "SEMI2K", "field": "FM128", "fxp_fraction_bits": 0 }
      },
      "refs": [
        "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)",
        "ray/objectref/ObjectRef(2751d69548dba956af23b462bfe8c365427a357b0100000001000000)",
        "ray/objectref/ObjectRef(71b133a11e1c461ce11e0e6b35627ffff00336110100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33c542a80": {
      "ref": "otel/span/0x0/transient/id/0x33c542a80",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'y': <secretflow.device.device.spu.SPUObject object at 0x33c598f40>}",
      "values": {
        "y": {
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)"
        }
      }
    },
    "otel/span/0x0/transient/id/0x33de611c0": {
      "ref": "otel/span/0x0/transient/id/0x33de611c0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[]",
      "values": []
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/12": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/12",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 12,
      "func": "main",
      "code": "weights = alice(lambda x: x)(weights)"
    },
    "otel/span/0x0/transient/id/0x33c3aef40": {
      "ref": "otel/span/0x0/transient/id/0x33c3aef40",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[]",
      "values": []
    },
    "otel/span/0x0/transient/id/0x33de5ee80": {
      "ref": "otel/span/0x0/transient/id/0x33de5ee80",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': []}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33c3aef40" } }
    },
    "otel/span/0x0/transient/id/0x33c3aa8c0": {
      "ref": "otel/span/0x0/transient/id/0x33c3aa8c0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<function main.<locals>.<lambda> at 0x33c63eb80>, 0.0)",
      "values": [
        { "ref": "python/id/0x33c63eb80+1" },
        { "ref": "otel/span/0x0/transient/id/0x33ace8670" }
      ]
    },
    "python/id/0x33c655550+1": {
      "ref": "python/id/0x33c655550+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x2728dcdde5159699",
      "module": "__main__",
      "name": "main.<locals>.<lambda>",
      "signature": {
        "parameters": [{ "name": "x", "kind": 1, "annotation": "typing.Any" }],
        "return_annotation": "typing.Any"
      },
      "filename": "Cell In[6]",
      "firstlineno": 12,
      "source": "weights = alice(lambda x: x)(weights)\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "python/id/0x2afef1a40+1": {
      "ref": "python/id/0x2afef1a40+1",
      "kind": "object",
      "type": "jaxlib.xla_extension.ArrayImpl",
      "snapshot": "Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)"
    },
    "otel/span/0x0/transient/id/0x33c4a9300": {
      "ref": "otel/span/0x0/transient/id/0x33c4a9300",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33de5ed40": {
      "ref": "otel/span/0x0/transient/id/0x33de5ed40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 1, 'resources': {'alice': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33de77bc0" }
      }
    },
    "otel/span/0x0/transient/id/0x33de77bc0": {
      "ref": "otel/span/0x0/transient/id/0x33de77bc0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'alice': 1}",
      "values": { "alice": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33c571400+1": {
      "ref": "python/id/0x33c571400+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33c571400>"
    },
    "ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33c58faf0": {
      "ref": "otel/span/0x0/transient/id/0x33c58faf0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32),)",
      "values": [{ "ref": "python/id/0x2afef1a40+1" }]
    },
    "otel/span/0x0/transient/id/0x33c38c6c0": {
      "ref": "otel/span/0x0/transient/id/0x33c38c6c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "secretflow/object/python/ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33de77040": {
      "ref": "otel/span/0x0/transient/id/0x33de77040",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'weights': <secretflow.device.device.pyu.PYUObject object at 0x33c63dca0>}",
      "values": {
        "weights": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)"
        }
      }
    },
    "otel/span/0x0/transient/id/0x33dec0640": {
      "ref": "otel/span/0x0/transient/id/0x33dec0640",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/13": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/13",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 13,
      "func": "main",
      "code": "weights = weights.to(spu)"
    },
    "otel/span/0x0/transient/id/0x33de5ec80": {
      "ref": "otel/span/0x0/transient/id/0x33de5ec80",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)]",
      "values": [{ "ref": "python/id/0x2afed6420+1" }]
    },
    "python/id/0x2afed6420+1": {
      "ref": "python/id/0x2afed6420+1",
      "kind": "object",
      "type": "jaxlib.xla_extension.ArrayImpl",
      "snapshot": "Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)"
    },
    "otel/span/0x0/transient/id/0x33dec0300": {
      "ref": "otel/span/0x0/transient/id/0x33dec0300",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33de5ec80" } }
    },
    "python/id/0x33de6b310+1": {
      "ref": "python/id/0x33de6b310+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x617962f1556cf8d0",
      "module": "secretflow.device.kernels.pyu",
      "name": "pyu_to_spu.<locals>.get_shares_chunk_count",
      "signature": {
        "parameters": [
          { "name": "data", "kind": 1, "annotation": "typing.Any" },
          { "name": "runtime_config", "kind": 1, "annotation": "typing.Any" },
          { "name": "world_size", "kind": 1, "annotation": "typing.Any" },
          { "name": "vtype", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "builtins.int"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "firstlineno": 67,
      "source": "def get_shares_chunk_count(data, runtime_config, world_size, vtype) -> int:\n    io = SPUIO(runtime_config, world_size)\n    return io.get_shares_chunk_count(data, vtype)\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33e0a6180": {
      "ref": "otel/span/0x0/transient/id/0x33e0a6180",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33dec01c0": {
      "ref": "otel/span/0x0/transient/id/0x33dec01c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 1, 'resources': {'alice': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33dec06c0" }
      }
    },
    "otel/span/0x0/transient/id/0x33dec06c0": {
      "ref": "otel/span/0x0/transient/id/0x33dec06c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'alice': 1}",
      "values": { "alice": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33de81430+1": {
      "ref": "python/id/0x33de81430+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33de81430>"
    },
    "ray/objectref/ObjectRef(c54e76759b2a0c10ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(c54e76759b2a0c10ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(c54e76759b2a0c10ffffffffffffffffffffffff0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33de7d4a0": {
      "ref": "otel/span/0x0/transient/id/0x33de7d4a0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)"
        },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "otel/span/0x0/transient/id/0x33de79d40": {
      "ref": "otel/span/0x0/transient/id/0x33de79d40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "secretflow/object/python/ray/objectref/ObjectRef(c54e76759b2a0c10ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(c54e76759b2a0c10ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(c54e76759b2a0c10ffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33e217340": {
      "ref": "otel/span/0x0/transient/id/0x33e217340",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33e0b3a40": {
      "ref": "otel/span/0x0/transient/id/0x33e0b3a40",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e08c9c0": {
      "ref": "otel/span/0x0/transient/id/0x33e08c9c0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)]",
      "values": [{ "ref": "python/id/0x33a939050+1" }]
    },
    "python/id/0x33a939050+1": {
      "ref": "python/id/0x33a939050+1",
      "kind": "object",
      "type": "jaxlib.xla_extension.ArrayImpl",
      "snapshot": "Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)"
    },
    "otel/span/0x0/transient/id/0x33e0b3700": {
      "ref": "otel/span/0x0/transient/id/0x33e0b3700",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33e08c9c0" } }
    },
    "otel/span/0x0/transient/id/0x33bd8e040": {
      "ref": "otel/span/0x0/transient/id/0x33bd8e040",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<function pyu_to_spu.<locals>.run_spu_io at 0x33de6b1f0>,\n Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        { "ref": "python/id/0x33de6b1f0+1" },
        { "ref": "python/id/0x33a939050+1" },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "python/id/0x33de6b1f0+1": {
      "ref": "python/id/0x33de6b1f0+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x8c1f7ca5876234",
      "module": "secretflow.device.kernels.pyu",
      "name": "pyu_to_spu.<locals>.run_spu_io",
      "signature": {
        "parameters": [
          { "name": "data", "kind": 1, "annotation": "typing.Any" },
          { "name": "runtime_config", "kind": 1, "annotation": "typing.Any" },
          { "name": "world_size", "kind": 1, "annotation": "typing.Any" },
          { "name": "vtype", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "firstlineno": 71,
      "source": "def run_spu_io(data, runtime_config, world_size, vtype):\n    io = SPUIO(runtime_config, world_size)\n    ret = io.make_shares(data, vtype)\n    return ret\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33e2312c0": {
      "ref": "otel/span/0x0/transient/id/0x33e2312c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33e0b3280": {
      "ref": "otel/span/0x0/transient/id/0x33e0b3280",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 4, 'resources': {'alice': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bbc0" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33e219700" }
      }
    },
    "otel/span/0x0/transient/id/0x33e219700": {
      "ref": "otel/span/0x0/transient/id/0x33e219700",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'alice': 1}",
      "values": { "alice": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33c598a90+1": {
      "ref": "python/id/0x33c598a90+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33c598a90>"
    },
    "otel/span/0x0/transient/id/0x33e21ecc0": {
      "ref": "otel/span/0x0/transient/id/0x33e21ecc0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000),\n ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000),\n ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000),\n ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)"
    },
    "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000)": {
      "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000)"
    },
    "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000)": {
      "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000)"
    },
    "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)": {
      "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)"
    },
    "otel/span/0x0/transient/id/0x33ad3ea90": {
      "ref": "otel/span/0x0/transient/id/0x33ad3ea90",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)"
        },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "otel/span/0x0/transient/id/0x33e24ee00": {
      "ref": "otel/span/0x0/transient/id/0x33e24ee00",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[<secretflow.device.device.pyu.PYUObject object at 0x33e20c340>,\n <secretflow.device.device.pyu.PYUObject object at 0x33e20caf0>,\n <secretflow.device.device.pyu.PYUObject object at 0x33e20c640>,\n <secretflow.device.device.pyu.PYUObject object at 0x33e20cac0>]",
      "values": [
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33c3a73c0": {
      "ref": "otel/span/0x0/transient/id/0x33c3a73c0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000),\n ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000))",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e246140": {
      "ref": "otel/span/0x0/transient/id/0x33e246140",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(1e360ffa862f8fe3af23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(1e360ffa862f8fe3af23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(1e360ffa862f8fe3af23b462bfe8c365427a357b0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33c3aa380": {
      "ref": "otel/span/0x0/transient/id/0x33c3aa380",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000),\n ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000))",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e0b3680": {
      "ref": "otel/span/0x0/transient/id/0x33e0b3680",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(18b2ad3c688fb947e11e0e6b35627ffff00336110100000001000000)": {
      "ref": "ray/objectref/ObjectRef(18b2ad3c688fb947e11e0e6b35627ffff00336110100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(18b2ad3c688fb947e11e0e6b35627ffff00336110100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e231640": {
      "ref": "otel/span/0x0/transient/id/0x33e231640",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000),\n ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e231280": {
      "ref": "otel/span/0x0/transient/id/0x33e231280",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(1e360ffa862f8fe3af23b462bfe8c365427a357b0100000001000000),\n ObjectRef(18b2ad3c688fb947e11e0e6b35627ffff00336110100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(1e360ffa862f8fe3af23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(18b2ad3c688fb947e11e0e6b35627ffff00336110100000001000000)"
        }
      ]
    },
    "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.spu.SPUObject",
      "location": {
        "kind": "location",
        "type": "SPU",
        "parties": ["alice", "bob"],
        "parameters": { "protocol": "SEMI2K", "field": "FM128", "fxp_fraction_bits": 0 }
      },
      "refs": [
        "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)",
        "ray/objectref/ObjectRef(1e360ffa862f8fe3af23b462bfe8c365427a357b0100000001000000)",
        "ray/objectref/ObjectRef(18b2ad3c688fb947e11e0e6b35627ffff00336110100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33e20b680": {
      "ref": "otel/span/0x0/transient/id/0x33e20b680",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'weights': <secretflow.device.device.spu.SPUObject object at 0x33e205fd0>}",
      "values": {
        "weights": {
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)"
        }
      }
    },
    "otel/span/0x0/transient/id/0x33e0b3040": {
      "ref": "otel/span/0x0/transient/id/0x33e0b3040",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[]",
      "values": []
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/15": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/15",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 15,
      "func": "main",
      "code": "bias = alice(lambda x: x)(bias)"
    },
    "otel/span/0x0/transient/id/0x33e2313c0": {
      "ref": "otel/span/0x0/transient/id/0x33e2313c0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[]",
      "values": []
    },
    "otel/span/0x0/transient/id/0x33e0b3140": {
      "ref": "otel/span/0x0/transient/id/0x33e0b3140",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': []}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33e2313c0" } }
    },
    "python/id/0x33c63eb80+1": {
      "ref": "python/id/0x33c63eb80+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x2728dcdde5159699",
      "module": "__main__",
      "name": "main.<locals>.<lambda>",
      "signature": {
        "parameters": [{ "name": "x", "kind": 1, "annotation": "typing.Any" }],
        "return_annotation": "typing.Any"
      },
      "filename": "Cell In[6]",
      "firstlineno": 15,
      "source": "bias = alice(lambda x: x)(bias)\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33ace8670": {
      "ref": "otel/span/0x0/transient/id/0x33ace8670",
      "kind": "object",
      "type": "builtins.float",
      "snapshot": "0.0"
    },
    "otel/span/0x0/transient/id/0x33e217e40": {
      "ref": "otel/span/0x0/transient/id/0x33e217e40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33e0b3cc0": {
      "ref": "otel/span/0x0/transient/id/0x33e0b3cc0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 1, 'resources': {'alice': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33e219b00" }
      }
    },
    "otel/span/0x0/transient/id/0x33e219b00": {
      "ref": "otel/span/0x0/transient/id/0x33e219b00",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'alice': 1}",
      "values": { "alice": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33e0c3340+1": {
      "ref": "python/id/0x33e0c3340+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33e0c3340>"
    },
    "ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e253d00": {
      "ref": "otel/span/0x0/transient/id/0x33e253d00",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(0.0,)",
      "values": [{ "ref": "otel/span/0x0/transient/id/0x33ace8670" }]
    },
    "otel/span/0x0/transient/id/0x33e246500": {
      "ref": "otel/span/0x0/transient/id/0x33e246500",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "secretflow/object/python/ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33c5dc2c0": {
      "ref": "otel/span/0x0/transient/id/0x33c5dc2c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'bias': <secretflow.device.device.pyu.PYUObject object at 0x33e0af1c0>}",
      "values": {
        "bias": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)"
        }
      }
    },
    "otel/span/0x0/transient/id/0x33e20de80": {
      "ref": "otel/span/0x0/transient/id/0x33e20de80",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/16": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/16",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 16,
      "func": "main",
      "code": "bias = bias.to(spu)"
    },
    "otel/span/0x0/transient/id/0x33e08c800": {
      "ref": "otel/span/0x0/transient/id/0x33e08c800",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[0.0]",
      "values": [{ "ref": "otel/span/0x0/transient/id/0x33c5b0330" }]
    },
    "otel/span/0x0/transient/id/0x33c5b0330": {
      "ref": "otel/span/0x0/transient/id/0x33c5b0330",
      "kind": "object",
      "type": "builtins.float",
      "snapshot": "0.0"
    },
    "otel/span/0x0/transient/id/0x33e20d1c0": {
      "ref": "otel/span/0x0/transient/id/0x33e20d1c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [0.0]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33e08c800" } }
    },
    "otel/span/0x0/transient/id/0x33c3a64a0": {
      "ref": "otel/span/0x0/transient/id/0x33c3a64a0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<function pyu_to_spu.<locals>.get_shares_chunk_count at 0x33de6b790>,\n 0.0,\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        { "ref": "python/id/0x33de6b790+1" },
        { "ref": "otel/span/0x0/transient/id/0x33c5b0330" },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "python/id/0x33de6b790+1": {
      "ref": "python/id/0x33de6b790+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x617962f1556cf8d0",
      "module": "secretflow.device.kernels.pyu",
      "name": "pyu_to_spu.<locals>.get_shares_chunk_count",
      "signature": {
        "parameters": [
          { "name": "data", "kind": 1, "annotation": "typing.Any" },
          { "name": "runtime_config", "kind": 1, "annotation": "typing.Any" },
          { "name": "world_size", "kind": 1, "annotation": "typing.Any" },
          { "name": "vtype", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "builtins.int"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "firstlineno": 67,
      "source": "def get_shares_chunk_count(data, runtime_config, world_size, vtype) -> int:\n    io = SPUIO(runtime_config, world_size)\n    return io.get_shares_chunk_count(data, vtype)\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33e08cd00": {
      "ref": "otel/span/0x0/transient/id/0x33e08cd00",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33e20d2c0": {
      "ref": "otel/span/0x0/transient/id/0x33e20d2c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 1, 'resources': {'alice': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33e251b80" }
      }
    },
    "otel/span/0x0/transient/id/0x33e251b80": {
      "ref": "otel/span/0x0/transient/id/0x33e251b80",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'alice': 1}",
      "values": { "alice": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33e215bb0+1": {
      "ref": "python/id/0x33e215bb0+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33e215bb0>"
    },
    "ray/objectref/ObjectRef(c76a79b2875a7251ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(c76a79b2875a7251ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(c76a79b2875a7251ffffffffffffffffffffffff0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33de7d360": {
      "ref": "otel/span/0x0/transient/id/0x33de7d360",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)"
        },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "otel/span/0x0/transient/id/0x33e23af80": {
      "ref": "otel/span/0x0/transient/id/0x33e23af80",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "secretflow/object/python/ray/objectref/ObjectRef(c76a79b2875a7251ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(c76a79b2875a7251ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(c76a79b2875a7251ffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33e21e300": {
      "ref": "otel/span/0x0/transient/id/0x33e21e300",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'shares_chunk_count': <secretflow.device.device.pyu.PYUObject object at 0x33de66eb0>}",
      "values": {
        "shares_chunk_count": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(c76a79b2875a7251ffffffffffffffffffffffff0100000001000000)"
        }
      }
    },
    "otel/span/0x0/transient/id/0x33e282e00": {
      "ref": "otel/span/0x0/transient/id/0x33e282e00",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33e247dc0": {
      "ref": "otel/span/0x0/transient/id/0x33e247dc0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33c3b0940": {
      "ref": "otel/span/0x0/transient/id/0x33c3b0940",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[0.0]",
      "values": [{ "ref": "otel/span/0x0/transient/id/0x33c2ad7d0" }]
    },
    "otel/span/0x0/transient/id/0x33c2ad7d0": {
      "ref": "otel/span/0x0/transient/id/0x33c2ad7d0",
      "kind": "object",
      "type": "builtins.float",
      "snapshot": "0.0"
    },
    "otel/span/0x0/transient/id/0x33e247500": {
      "ref": "otel/span/0x0/transient/id/0x33e247500",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [0.0]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33c3b0940" } }
    },
    "python/id/0x33c674c10+1": {
      "ref": "python/id/0x33c674c10+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x8c1f7ca5876234",
      "module": "secretflow.device.kernels.pyu",
      "name": "pyu_to_spu.<locals>.run_spu_io",
      "signature": {
        "parameters": [
          { "name": "data", "kind": 1, "annotation": "typing.Any" },
          { "name": "runtime_config", "kind": 1, "annotation": "typing.Any" },
          { "name": "world_size", "kind": 1, "annotation": "typing.Any" },
          { "name": "vtype", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/pyu.py",
      "firstlineno": 71,
      "source": "def run_spu_io(data, runtime_config, world_size, vtype):\n    io = SPUIO(runtime_config, world_size)\n    ret = io.make_shares(data, vtype)\n    return ret\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33e26f1c0": {
      "ref": "otel/span/0x0/transient/id/0x33e26f1c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33e247240": {
      "ref": "otel/span/0x0/transient/id/0x33e247240",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 4, 'resources': {'alice': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bbc0" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33e251140" }
      }
    },
    "otel/span/0x0/transient/id/0x33e251140": {
      "ref": "otel/span/0x0/transient/id/0x33e251140",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'alice': 1}",
      "values": { "alice": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33e28cc40+1": {
      "ref": "python/id/0x33e28cc40+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33e28cc40>"
    },
    "otel/span/0x0/transient/id/0x33e26fd00": {
      "ref": "otel/span/0x0/transient/id/0x33e26fd00",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000),\n ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000),\n ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000),\n ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)"
    },
    "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000)": {
      "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000)"
    },
    "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000)": {
      "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000)"
    },
    "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)": {
      "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)"
    },
    "otel/span/0x0/transient/id/0x33de7d810": {
      "ref": "otel/span/0x0/transient/id/0x33de7d810",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000),\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n 1)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)"
        },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "otel/span/0x0/transient/id/0x12f1b35f0" }
      ]
    },
    "otel/span/0x0/transient/id/0x33e2aee00": {
      "ref": "otel/span/0x0/transient/id/0x33e2aee00",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[<secretflow.device.device.pyu.PYUObject object at 0x33c5986d0>,\n <secretflow.device.device.pyu.PYUObject object at 0x33e203490>,\n <secretflow.device.device.pyu.PYUObject object at 0x33e203e80>,\n <secretflow.device.device.pyu.PYUObject object at 0x33e203670>]",
      "values": [
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["alice"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33e0a6a40": {
      "ref": "otel/span/0x0/transient/id/0x33e0a6a40",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000),\n ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000))",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e28b5c0": {
      "ref": "otel/span/0x0/transient/id/0x33e28b5c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(3d3e27c54ed1f5cfaf23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(3d3e27c54ed1f5cfaf23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(3d3e27c54ed1f5cfaf23b462bfe8c365427a357b0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e22f540": {
      "ref": "otel/span/0x0/transient/id/0x33e22f540",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000),\n ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000))",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e2d6ac0": {
      "ref": "otel/span/0x0/transient/id/0x33e2d6ac0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(cae5e964086715a4e11e0e6b35627ffff00336110100000001000000)": {
      "ref": "ray/objectref/ObjectRef(cae5e964086715a4e11e0e6b35627ffff00336110100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(cae5e964086715a4e11e0e6b35627ffff00336110100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e28bc80": {
      "ref": "otel/span/0x0/transient/id/0x33e28bc80",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000),\n ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e28bb80": {
      "ref": "otel/span/0x0/transient/id/0x33e28bb80",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(3d3e27c54ed1f5cfaf23b462bfe8c365427a357b0100000001000000),\n ObjectRef(cae5e964086715a4e11e0e6b35627ffff00336110100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(3d3e27c54ed1f5cfaf23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(cae5e964086715a4e11e0e6b35627ffff00336110100000001000000)"
        }
      ]
    },
    "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.spu.SPUObject",
      "location": {
        "kind": "location",
        "type": "SPU",
        "parties": ["alice", "bob"],
        "parameters": { "protocol": "SEMI2K", "field": "FM128", "fxp_fraction_bits": 0 }
      },
      "refs": [
        "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)",
        "ray/objectref/ObjectRef(3d3e27c54ed1f5cfaf23b462bfe8c365427a357b0100000001000000)",
        "ray/objectref/ObjectRef(cae5e964086715a4e11e0e6b35627ffff00336110100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33c5fb600": {
      "ref": "otel/span/0x0/transient/id/0x33c5fb600",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'epochs': 10, 'learning_rate': 0.01}",
      "values": {
        "epochs": { "ref": "otel/span/0x0/transient/id/0x106d0bc80" },
        "learning_rate": { "ref": "otel/span/0x0/transient/id/0x33b6e6770" }
      }
    },
    "python/id/0x17b152d30+1": {
      "ref": "python/id/0x17b152d30+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x2ee170c42fe4442d",
      "module": "secretflow.device.kernels.spu",
      "name": "spu_to_spu",
      "signature": {
        "parameters": [
          {
            "name": "self",
            "kind": 1,
            "annotation": "secretflow.device.device.spu.SPUObject"
          },
          { "name": "spu", "kind": 1, "annotation": "secretflow.device.device.spu.SPU" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/spu.py",
      "firstlineno": 53,
      "source": "@register_to(DeviceType.SPU, DeviceType.SPU)\ndef spu_to_spu(self: SPUObject, spu: SPU):\n    assert isinstance(spu, SPU), f'Expect an SPU but got {type(spu)}.'\n    # same spu\n    if self.device == spu:\n        return self\n\n    # send to another spu.\n    assert (\n        spu.conf.protocol == self.device.conf.protocol\n        and spu.conf.field == self.device.conf.field\n        and spu.conf.fxp_fraction_bits == self.device.conf.fxp_fraction_bits\n        and spu.world_size == self.device.world_size\n    )\n\n    io_info, shares_chunk = self.device.outfeed_shares(self.shares_name)\n    shares_name = spu.infeed_shares(io_info, shares_chunk)\n\n    # TODO: do we need reshare shares.\n    return SPUObject(spu, self.meta, shares_name)\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/frame/0x14d1a1fa0/line/53": {
      "ref": "otel/span/0x0/transient/frame/0x14d1a1fa0/line/53",
      "kind": "frame",
      "type": "builtins.frame",
      "local_vars": {
        "self": {
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)"
        },
        "spu": {
          "ref": "secretflow/location/SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0"
        }
      },
      "global_vars": {
        "SPU": { "ref": "python/id/0x17b02ce20+1" },
        "SPUObject": { "ref": "python/id/0x17b02b6b0+1" }
      },
      "outer_frames": [
        { "ref": "otel/span/0x0/transient/frame/0x14d1a1fa0/line/53" },
        { "ref": "otel/span/0x0/transient/frame/0x17b5aca00/line/80" },
        { "ref": "otel/span/0x0/transient/frame/0x17b5bbb50/line/111" },
        { "ref": "otel/span/0x0/transient/frame/0x17b5c71a0/line/70" },
        { "ref": "otel/span/0x0/transient/frame/0x2afed9400/line/1707" },
        { "ref": "otel/span/0x0/transient/frame/0x33ba9f040/line/210" },
        { "ref": "otel/span/0x0/transient/frame/0x33ba88230/line/210" },
        { "ref": "otel/span/0x0/transient/frame/0x2afedea10/line/1717" },
        { "ref": "otel/span/0x0/transient/frame/0x2afeda6a0/line/1750" },
        { "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/20" },
        { "ref": "otel/span/0x0/transient/frame/0x33a8379f0/line/42" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661bc0/line/3508" },
        { "ref": "otel/span/0x0/transient/frame/0x11c6632d0/line/3448" },
        { "ref": "otel/span/0x0/transient/frame/0x105ba37e0/line/3269" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661df0/line/129" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660400/line/3064" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660c50/line/3009" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661870/line/549" },
        { "ref": "otel/span/0x0/transient/frame/0x11c626890/line/426" },
        { "ref": "otel/span/0x0/transient/frame/0x11c64b770/line/758" },
        { "ref": "otel/span/0x0/transient/frame/0x14c621df0/line/418" },
        { "ref": "otel/span/0x0/transient/frame/0x11812c420/line/513" },
        { "ref": "otel/span/0x0/transient/frame/0x118129210/line/524" },
        { "ref": "otel/span/0x0/transient/frame/0x14d077200/line/81" },
        { "ref": "otel/span/0x0/transient/frame/0x14d076fd0/line/1859" },
        { "ref": "otel/span/0x0/transient/frame/0x118113d60/line/570" },
        { "ref": "otel/span/0x0/transient/frame/0x11812e380/line/195" },
        { "ref": "otel/span/0x0/transient/frame/0x104e89a40/line/737" },
        { "ref": "otel/span/0x0/transient/frame/0x14d022260/line/1053" },
        { "ref": "otel/span/0x0/transient/frame/0x104ddc230/line/17" },
        { "ref": "otel/span/0x0/transient/frame/0x12c618b00/line/87" },
        { "ref": "otel/span/0x0/transient/frame/0x12c614a80/line/194" }
      ],
      "module": "secretflow.device.kernels.spu",
      "func": "spu_to_spu"
    },
    "otel/span/0x0/transient/frame/0x2afed9400/line/1707": {
      "ref": "otel/span/0x0/transient/frame/0x2afed9400/line/1707",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "lineno": 1707,
      "func": "place",
      "code": "return obj.to(self)"
    },
    "otel/span/0x0/transient/frame/0x33ba9f040/line/210": {
      "ref": "otel/span/0x0/transient/frame/0x33ba9f040/line/210",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/jax/_src/tree_util.py",
      "lineno": 210,
      "func": "<genexpr>",
      "code": "return treedef.unflatten(f(*xs) for xs in zip(*all_leaves))"
    },
    "otel/span/0x0/transient/frame/0x33ba88230/line/210": {
      "ref": "otel/span/0x0/transient/frame/0x33ba88230/line/210",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/jax/_src/tree_util.py",
      "lineno": 210,
      "func": "tree_map",
      "code": "return treedef.unflatten(f(*xs) for xs in zip(*all_leaves))"
    },
    "otel/span/0x0/transient/frame/0x2afedea10/line/1717": {
      "ref": "otel/span/0x0/transient/frame/0x2afedea10/line/1717",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "lineno": 1717,
      "func": "_place_arguments",
      "code": "return jax.tree_util.tree_map(place, (args, kwargs))"
    },
    "otel/span/0x0/transient/frame/0x2afeda6a0/line/1750": {
      "ref": "otel/span/0x0/transient/frame/0x2afeda6a0/line/1750",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "lineno": 1750,
      "func": "wrapper",
      "code": "args, kwargs = self._place_arguments(*args, **kwargs)"
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/20": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/20",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 20,
      "func": "main",
      "code": "weights, bias = spu("
    },
    "otel/span/0x0/transient/id/0x33c3a77c0": {
      "ref": "otel/span/0x0/transient/id/0x33c3a77c0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(SPUIOInfo(start_chunk_index=0, end_chunk_index=1, meta=b'\\x08\\x0b\\x18\\x02*\\x0cPub2k<FM128>'),\n b'\\x08\\x10\\x1a\\x10p=\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00')",
      "values": [
        { "ref": "python/id/0x33e3816d0+1" },
        { "ref": "otel/span/0x0/transient/id/0x33e386f70" }
      ]
    },
    "python/id/0x33e3816d0+1": {
      "ref": "python/id/0x33e3816d0+1",
      "kind": "dict",
      "type": "secretflow.device.device.spu.SPUIOInfo",
      "snapshot": "SPUIOInfo(start_chunk_index=0, end_chunk_index=1, meta=b'\\x08\\x0b\\x18\\x02*\\x0cPub2k<FM128>')",
      "values": {
        "start_chunk_index": { "ref": "otel/span/0x0/transient/id/0x106d0bb40" },
        "end_chunk_index": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "meta": { "ref": "otel/span/0x0/transient/id/0x33e2d65b0" }
      }
    },
    "otel/span/0x0/transient/id/0x33e2d65b0": {
      "ref": "otel/span/0x0/transient/id/0x33e2d65b0",
      "kind": "object",
      "type": "builtins.bytes",
      "snapshot": "b'\\x08\\x0b\\x18\\x02*\\x0cPub2k<FM128>'"
    },
    "otel/span/0x0/transient/id/0x33e386f70": {
      "ref": "otel/span/0x0/transient/id/0x33e386f70",
      "kind": "object",
      "type": "builtins.bytes",
      "snapshot": "b'\\x08\\x10\\x1a\\x10p=\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"
    },
    "otel/span/0x0/transient/id/0x33e219380": {
      "ref": "otel/span/0x0/transient/id/0x33e219380",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/frame/0x2afed9400/line/1715": {
      "ref": "otel/span/0x0/transient/frame/0x2afed9400/line/1715",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "lineno": 1715,
      "func": "place",
      "code": "return SPUObject(self, meta, self.infeed_shares(io_info, refs))"
    },
    "ray/objectref/ObjectRef(bcb4fef46b376cafaf23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(bcb4fef46b376cafaf23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(bcb4fef46b376cafaf23b462bfe8c365427a357b0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33c5fbd80": {
      "ref": "otel/span/0x0/transient/id/0x33c5fbd80",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(SPUIOInfo(start_chunk_index=0, end_chunk_index=1, meta=b'\\x08\\x0b\\x18\\x02*\\x0cPub2k<FM128>'),\n b'\\x08\\x10\\x1a\\x10p=\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00')",
      "values": [
        { "ref": "python/id/0x33e3816d0+1" },
        { "ref": "otel/span/0x0/transient/id/0x33e3a2c70" }
      ]
    },
    "otel/span/0x0/transient/id/0x33e3a2c70": {
      "ref": "otel/span/0x0/transient/id/0x33e3a2c70",
      "kind": "object",
      "type": "builtins.bytes",
      "snapshot": "b'\\x08\\x10\\x1a\\x10p=\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"
    },
    "otel/span/0x0/transient/id/0x33e39c040": {
      "ref": "otel/span/0x0/transient/id/0x33e39c040",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(88543757a8df6d2fe11e0e6b35627ffff00336110100000001000000)": {
      "ref": "ray/objectref/ObjectRef(88543757a8df6d2fe11e0e6b35627ffff00336110100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(88543757a8df6d2fe11e0e6b35627ffff00336110100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e328b40": {
      "ref": "otel/span/0x0/transient/id/0x33e328b40",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[b'\\x08\\x10\\x1a\\x10p=\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00',\n b'\\x08\\x10\\x1a\\x10p=\\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00']",
      "values": [
        { "ref": "otel/span/0x0/transient/id/0x33e386f70" },
        { "ref": "otel/span/0x0/transient/id/0x33e3a2c70" }
      ]
    },
    "otel/span/0x0/transient/id/0x33e231080": {
      "ref": "otel/span/0x0/transient/id/0x33e231080",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(bcb4fef46b376cafaf23b462bfe8c365427a357b0100000001000000),\n ObjectRef(88543757a8df6d2fe11e0e6b35627ffff00336110100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(bcb4fef46b376cafaf23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(88543757a8df6d2fe11e0e6b35627ffff00336110100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e3a8240": {
      "ref": "otel/span/0x0/transient/id/0x33e3a8240",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000),\n ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000),\n ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000),\n ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000),\n ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/frame/0x2afeda6a0/line/1762": {
      "ref": "otel/span/0x0/transient/frame/0x2afeda6a0/line/1762",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "lineno": 1762,
      "func": "wrapper",
      "code": "sfd.remote(_spu_compile)"
    },
    "otel/span/0x0/transient/id/0x33e536340": {
      "ref": "otel/span/0x0/transient/id/0x33e536340",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[SPUValueMeta(shape=(30,), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0),\n SPUValueMeta(shape=(), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0),\n SPUValueMeta(shape=(455, 15), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0),\n SPUValueMeta(shape=(455, 15), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0),\n SPUValueMeta(shape=(455,), dtype=dtype('int32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0)]",
      "values": [
        { "ref": "python/id/0x33e525ac0+1" },
        { "ref": "python/id/0x33e525700+1" },
        { "ref": "python/id/0x33e525760+1" },
        { "ref": "python/id/0x33e5255b0+1" },
        { "ref": "python/id/0x33e5250a0+1" }
      ]
    },
    "python/id/0x33e525ac0+1": {
      "ref": "python/id/0x33e525ac0+1",
      "kind": "dict",
      "type": "secretflow.device.device.spu.SPUValueMeta",
      "snapshot": "SPUValueMeta(shape=(30,), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0)",
      "values": {
        "shape": { "ref": "otel/span/0x0/transient/id/0x33e2534f0" },
        "dtype": { "ref": "otel/span/0x0/transient/id/0x33e336810" },
        "vtype": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "protocol": { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        "field": { "ref": "otel/span/0x0/transient/id/0x106d0bba0" },
        "fxp_fraction_bits": { "ref": "otel/span/0x0/transient/id/0x106d0bb40" }
      }
    },
    "otel/span/0x0/transient/id/0x33e2534f0": {
      "ref": "otel/span/0x0/transient/id/0x33e2534f0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(30,)",
      "values": [{ "ref": "otel/span/0x0/transient/id/0x106d0bf00" }]
    },
    "otel/span/0x0/transient/id/0x106d0bf00": {
      "ref": "otel/span/0x0/transient/id/0x106d0bf00",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "30"
    },
    "otel/span/0x0/transient/id/0x33e336810": {
      "ref": "otel/span/0x0/transient/id/0x33e336810",
      "kind": "object",
      "type": "numpy.dtype[float32]",
      "snapshot": "dtype('float32')"
    },
    "otel/span/0x0/transient/id/0x106d0bba0": {
      "ref": "otel/span/0x0/transient/id/0x106d0bba0",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "3"
    },
    "python/id/0x33e525700+1": {
      "ref": "python/id/0x33e525700+1",
      "kind": "dict",
      "type": "secretflow.device.device.spu.SPUValueMeta",
      "snapshot": "SPUValueMeta(shape=(), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0)",
      "values": {
        "shape": { "ref": "otel/span/0x0/transient/id/0x104c88040" },
        "dtype": { "ref": "otel/span/0x0/transient/id/0x33e3367b0" },
        "vtype": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "protocol": { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        "field": { "ref": "otel/span/0x0/transient/id/0x106d0bba0" },
        "fxp_fraction_bits": { "ref": "otel/span/0x0/transient/id/0x106d0bb40" }
      }
    },
    "otel/span/0x0/transient/id/0x33e3367b0": {
      "ref": "otel/span/0x0/transient/id/0x33e3367b0",
      "kind": "object",
      "type": "numpy.dtype[float32]",
      "snapshot": "dtype('float32')"
    },
    "python/id/0x33e525760+1": {
      "ref": "python/id/0x33e525760+1",
      "kind": "dict",
      "type": "secretflow.device.device.spu.SPUValueMeta",
      "snapshot": "SPUValueMeta(shape=(455, 15), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0)",
      "values": {
        "shape": { "ref": "otel/span/0x0/transient/id/0x33c38da80" },
        "dtype": { "ref": "otel/span/0x0/transient/id/0x33e336750" },
        "vtype": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "protocol": { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        "field": { "ref": "otel/span/0x0/transient/id/0x106d0bba0" },
        "fxp_fraction_bits": { "ref": "otel/span/0x0/transient/id/0x106d0bb40" }
      }
    },
    "otel/span/0x0/transient/id/0x33c38da80": {
      "ref": "otel/span/0x0/transient/id/0x33c38da80",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(455, 15)",
      "values": [
        { "ref": "otel/span/0x0/transient/id/0x33e317930" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bd20" }
      ]
    },
    "otel/span/0x0/transient/id/0x33e317930": {
      "ref": "otel/span/0x0/transient/id/0x33e317930",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "455"
    },
    "otel/span/0x0/transient/id/0x106d0bd20": {
      "ref": "otel/span/0x0/transient/id/0x106d0bd20",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "15"
    },
    "otel/span/0x0/transient/id/0x33e336750": {
      "ref": "otel/span/0x0/transient/id/0x33e336750",
      "kind": "object",
      "type": "numpy.dtype[float32]",
      "snapshot": "dtype('float32')"
    },
    "python/id/0x33e5255b0+1": {
      "ref": "python/id/0x33e5255b0+1",
      "kind": "dict",
      "type": "secretflow.device.device.spu.SPUValueMeta",
      "snapshot": "SPUValueMeta(shape=(455, 15), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0)",
      "values": {
        "shape": { "ref": "otel/span/0x0/transient/id/0x33c5fbcc0" },
        "dtype": { "ref": "otel/span/0x0/transient/id/0x33e336b70" },
        "vtype": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "protocol": { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        "field": { "ref": "otel/span/0x0/transient/id/0x106d0bba0" },
        "fxp_fraction_bits": { "ref": "otel/span/0x0/transient/id/0x106d0bb40" }
      }
    },
    "otel/span/0x0/transient/id/0x33c5fbcc0": {
      "ref": "otel/span/0x0/transient/id/0x33c5fbcc0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(455, 15)",
      "values": [
        { "ref": "otel/span/0x0/transient/id/0x33e317e10" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bd20" }
      ]
    },
    "otel/span/0x0/transient/id/0x33e317e10": {
      "ref": "otel/span/0x0/transient/id/0x33e317e10",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "455"
    },
    "otel/span/0x0/transient/id/0x33e336b70": {
      "ref": "otel/span/0x0/transient/id/0x33e336b70",
      "kind": "object",
      "type": "numpy.dtype[float32]",
      "snapshot": "dtype('float32')"
    },
    "python/id/0x33e5250a0+1": {
      "ref": "python/id/0x33e5250a0+1",
      "kind": "dict",
      "type": "secretflow.device.device.spu.SPUValueMeta",
      "snapshot": "SPUValueMeta(shape=(455,), dtype=dtype('int32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0)",
      "values": {
        "shape": { "ref": "otel/span/0x0/transient/id/0x33e28ce80" },
        "dtype": { "ref": "otel/span/0x0/transient/id/0x33e336bd0" },
        "vtype": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "protocol": { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        "field": { "ref": "otel/span/0x0/transient/id/0x106d0bba0" },
        "fxp_fraction_bits": { "ref": "otel/span/0x0/transient/id/0x106d0bb40" }
      }
    },
    "otel/span/0x0/transient/id/0x33e28ce80": {
      "ref": "otel/span/0x0/transient/id/0x33e28ce80",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(455,)",
      "values": [{ "ref": "otel/span/0x0/transient/id/0x33e317db0" }]
    },
    "otel/span/0x0/transient/id/0x33e317db0": {
      "ref": "otel/span/0x0/transient/id/0x33e317db0",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "455"
    },
    "otel/span/0x0/transient/id/0x33e336bd0": {
      "ref": "otel/span/0x0/transient/id/0x33e336bd0",
      "kind": "object",
      "type": "numpy.dtype[int32]",
      "snapshot": "dtype('int32')"
    },
    "otel/span/0x0/transient/id/0x33e53a240": {
      "ref": "otel/span/0x0/transient/id/0x33e53a240",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [SPUValueMeta(shape=(30,), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0),\n                 SPUValueMeta(shape=(), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0),\n                 SPUValueMeta(shape=(455, 15), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0),\n                 SPUValueMeta(shape=(455, 15), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0),\n                 SPUValueMeta(shape=(455,), dtype=dtype('int32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0)]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33e536340" } }
    },
    "otel/span/0x0/transient/id/0x33e52c340": {
      "ref": "otel/span/0x0/transient/id/0x33e52c340",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(functools.partial(<function logistic_regression at 0x33b827ca0>, epochs=10),\n SPUValueMeta(shape=(30,), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0),\n SPUValueMeta(shape=(), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0),\n SPUValueMeta(shape=(455, 15), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0),\n SPUValueMeta(shape=(455, 15), dtype=dtype('float32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0),\n SPUValueMeta(shape=(455,), dtype=dtype('int32'), vtype=1, protocol=2, field=3, fxp_fraction_bits=0))",
      "values": [
        { "ref": "python/id/0x33ba7e1d0+1" },
        { "ref": "python/id/0x33e525ac0+1" },
        { "ref": "python/id/0x33e525700+1" },
        { "ref": "python/id/0x33e525760+1" },
        { "ref": "python/id/0x33e5255b0+1" },
        { "ref": "python/id/0x33e5250a0+1" }
      ]
    },
    "python/id/0x33ba7e1d0+1": {
      "ref": "python/id/0x33ba7e1d0+1",
      "kind": "object",
      "type": "functools.partial",
      "snapshot": "functools.partial(<function logistic_regression at 0x33b827ca0>, epochs=10)"
    },
    "otel/span/0x0/transient/id/0x33e556640": {
      "ref": "otel/span/0x0/transient/id/0x33e556640",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'learning_rate': SPUValueMeta(shape=(), dtype=dtype('float32'), vtype=2, protocol=2, field=3, fxp_fraction_bits=0)}",
      "values": { "learning_rate": { "ref": "python/id/0x33e3813a0+1" } }
    },
    "python/id/0x33e3813a0+1": {
      "ref": "python/id/0x33e3813a0+1",
      "kind": "dict",
      "type": "secretflow.device.device.spu.SPUValueMeta",
      "snapshot": "SPUValueMeta(shape=(), dtype=dtype('float32'), vtype=2, protocol=2, field=3, fxp_fraction_bits=0)",
      "values": {
        "shape": { "ref": "otel/span/0x0/transient/id/0x104c88040" },
        "dtype": { "ref": "otel/span/0x0/transient/id/0x1195737c8" },
        "vtype": { "ref": "otel/span/0x0/transient/id/0x12f1b3610" },
        "protocol": { "ref": "otel/span/0x0/transient/id/0x12f1b38f0" },
        "field": { "ref": "otel/span/0x0/transient/id/0x12f1b38b0" },
        "fxp_fraction_bits": { "ref": "otel/span/0x0/transient/id/0x106d0bb40" }
      }
    },
    "otel/span/0x0/transient/id/0x1195737c8": {
      "ref": "otel/span/0x0/transient/id/0x1195737c8",
      "kind": "object",
      "type": "numpy.dtype[float32]",
      "snapshot": "dtype('float32')"
    },
    "otel/span/0x0/transient/id/0x12f1b3610": {
      "ref": "otel/span/0x0/transient/id/0x12f1b3610",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "2"
    },
    "otel/span/0x0/transient/id/0x12f1b38f0": {
      "ref": "otel/span/0x0/transient/id/0x12f1b38f0",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "2"
    },
    "otel/span/0x0/transient/id/0x12f1b38b0": {
      "ref": "otel/span/0x0/transient/id/0x12f1b38b0",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "3"
    },
    "otel/span/0x0/transient/id/0x33e5366c0": {
      "ref": "otel/span/0x0/transient/id/0x33e5366c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 2, 'resources': {'alice': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33e319e80" }
      }
    },
    "otel/span/0x0/transient/id/0x33e319e80": {
      "ref": "otel/span/0x0/transient/id/0x33e319e80",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'alice': 1}",
      "values": { "alice": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33e39d310+1": {
      "ref": "python/id/0x33e39d310+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33e39d310>"
    },
    "otel/span/0x0/transient/id/0x33e3a26c0": {
      "ref": "otel/span/0x0/transient/id/0x33e3a26c0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000001000000),\n ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000002000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000002000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000001000000)"
    },
    "ray/objectref/ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000002000000)": {
      "ref": "ray/objectref/ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000002000000)"
    },
    "otel/span/0x0/transient/id/0x33c397a50": {
      "ref": "otel/span/0x0/transient/id/0x33c397a50",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<SPUCompilerNumReturnsPolicy.FROM_USER: 'from_user'>,\n ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000002000000),\n ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000001000000),\n ObjectRef(1e360ffa862f8fe3af23b462bfe8c365427a357b0100000001000000),\n ObjectRef(3d3e27c54ed1f5cfaf23b462bfe8c365427a357b0100000001000000),\n ObjectRef(f91b78d7db9a6593af23b462bfe8c365427a357b0100000001000000),\n ObjectRef(359ec6ce30d3ca2daf23b462bfe8c365427a357b0100000001000000),\n ObjectRef(2751d69548dba956af23b462bfe8c365427a357b0100000001000000),\n ObjectRef(bcb4fef46b376cafaf23b462bfe8c365427a357b0100000001000000))",
      "values": [
        { "ref": "python/id/0x17b129d60+1" },
        {
          "ref": "ray/objectref/ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(1e360ffa862f8fe3af23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(3d3e27c54ed1f5cfaf23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(f91b78d7db9a6593af23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(359ec6ce30d3ca2daf23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(2751d69548dba956af23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(bcb4fef46b376cafaf23b462bfe8c365427a357b0100000001000000)"
        }
      ]
    },
    "python/id/0x17b129d60+1": {
      "ref": "python/id/0x17b129d60+1",
      "kind": "object",
      "type": "secretflow.device.device.spu.SPUCompilerNumReturnsPolicy",
      "snapshot": "<SPUCompilerNumReturnsPolicy.FROM_USER: 'from_user'>"
    },
    "otel/span/0x0/transient/id/0x33e5b3f40": {
      "ref": "otel/span/0x0/transient/id/0x33e5b3f40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "python/id/0x33a802e80+1": {
      "ref": "python/id/0x33a802e80+1",
      "kind": "object",
      "type": "ray.actor.ActorMethod",
      "snapshot": "<ray.actor.ActorMethod object at 0x33a802e80>"
    },
    "otel/span/0x0/transient/frame/0x2afee4f20/line/162": {
      "ref": "otel/span/0x0/transient/frame/0x2afee4f20/line/162",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/ray/actor.py",
      "lineno": 162,
      "func": "remote",
      "code": "return func_cls._remote(args=args, kwargs=kwargs, **options)"
    },
    "otel/span/0x0/transient/frame/0x2afeda6a0/line/1789": {
      "ref": "otel/span/0x0/transient/frame/0x2afeda6a0/line/1789",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "lineno": 1789,
      "func": "wrapper",
      "code": "actor_out = actor.run.options(num_returns=2 * num_returns).remote("
    },
    "otel/span/0x0/transient/id/0x33e56aa80": {
      "ref": "otel/span/0x0/transient/id/0x33e56aa80",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000),\n ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000),\n ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000003000000),\n ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000004000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000003000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000004000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)"
    },
    "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)": {
      "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)"
    },
    "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000003000000)": {
      "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000003000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000003000000)"
    },
    "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000004000000)": {
      "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000004000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000004000000)"
    },
    "otel/span/0x0/transient/id/0x33e5cf640": {
      "ref": "otel/span/0x0/transient/id/0x33e5cf640",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actor_out': [ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000001000000),\n               ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000002000000),\n               ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000003000000),\n               ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000004000000)]}",
      "values": { "actor_out": { "ref": "otel/span/0x0/transient/id/0x33e592880" } }
    },
    "otel/span/0x0/transient/id/0x33e568120": {
      "ref": "otel/span/0x0/transient/id/0x33e568120",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<SPUCompilerNumReturnsPolicy.FROM_USER: 'from_user'>,\n ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000002000000),\n ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000001000000),\n ObjectRef(18b2ad3c688fb947e11e0e6b35627ffff00336110100000001000000),\n ObjectRef(cae5e964086715a4e11e0e6b35627ffff00336110100000001000000),\n ObjectRef(82891771158d68c1e11e0e6b35627ffff00336110100000001000000),\n ObjectRef(1e8ff6d236132784e11e0e6b35627ffff00336110100000001000000),\n ObjectRef(71b133a11e1c461ce11e0e6b35627ffff00336110100000001000000),\n ObjectRef(88543757a8df6d2fe11e0e6b35627ffff00336110100000001000000))",
      "values": [
        { "ref": "python/id/0x17b129d60+1" },
        {
          "ref": "ray/objectref/ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(347cc60e0bb3da74ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(18b2ad3c688fb947e11e0e6b35627ffff00336110100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(cae5e964086715a4e11e0e6b35627ffff00336110100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(82891771158d68c1e11e0e6b35627ffff00336110100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(1e8ff6d236132784e11e0e6b35627ffff00336110100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(71b133a11e1c461ce11e0e6b35627ffff00336110100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(88543757a8df6d2fe11e0e6b35627ffff00336110100000001000000)"
        }
      ]
    },
    "python/id/0x33a81e0d0+1": {
      "ref": "python/id/0x33a81e0d0+1",
      "kind": "object",
      "type": "ray.actor.ActorMethod",
      "snapshot": "<ray.actor.ActorMethod object at 0x33a81e0d0>"
    },
    "otel/span/0x0/transient/id/0x33e592880": {
      "ref": "otel/span/0x0/transient/id/0x33e592880",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000001000000),\n ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000002000000),\n ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000003000000),\n ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000004000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000003000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000004000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000001000000)": {
      "ref": "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000001000000)"
    },
    "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000002000000)": {
      "ref": "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000002000000)"
    },
    "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000003000000)": {
      "ref": "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000003000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000003000000)"
    },
    "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000004000000)": {
      "ref": "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000004000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000004000000)"
    },
    "otel/span/0x0/transient/frame/0x2afeda6a0/line/1745": {
      "ref": "otel/span/0x0/transient/frame/0x2afeda6a0/line/1745",
      "kind": "frame",
      "type": "builtins.frame",
      "local_vars": {
        "args": { "ref": "otel/span/0x0/transient/id/0x33bf654f0" },
        "kwargs": { "ref": "otel/span/0x0/transient/id/0x33c5fb600" },
        "func": { "ref": "python/id/0x33b827ca0+1" },
        "num_returns_policy": { "ref": "python/id/0x17b129d60+1" },
        "self": {
          "ref": "secretflow/location/SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0"
        },
        "static_argnames": { "ref": "otel/span/0x0/transient/id/0x33e21e7c0" },
        "user_specified_num_returns": {
          "ref": "otel/span/0x0/transient/id/0x106d0bb80"
        }
      },
      "global_vars": {
        "_argnames_partial_except": { "ref": "python/id/0x17b12a550+1" },
        "_spu_compile": { "ref": "python/id/0x17b130940+1" },
        "SPUCompilerNumReturnsPolicy": { "ref": "python/id/0x17b02be10+1" },
        "SPUObject": { "ref": "python/id/0x17b02b6b0+1" }
      },
      "outer_frames": [
        { "ref": "otel/span/0x0/transient/frame/0x2afeda6a0/line/1745" },
        { "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/20" },
        { "ref": "otel/span/0x0/transient/frame/0x33a8379f0/line/42" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661bc0/line/3508" },
        { "ref": "otel/span/0x0/transient/frame/0x11c6632d0/line/3448" },
        { "ref": "otel/span/0x0/transient/frame/0x105ba37e0/line/3269" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661df0/line/129" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660400/line/3064" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660c50/line/3009" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661870/line/549" },
        { "ref": "otel/span/0x0/transient/frame/0x11c626890/line/426" },
        { "ref": "otel/span/0x0/transient/frame/0x11c64b770/line/758" },
        { "ref": "otel/span/0x0/transient/frame/0x14c621df0/line/418" },
        { "ref": "otel/span/0x0/transient/frame/0x11812c420/line/513" },
        { "ref": "otel/span/0x0/transient/frame/0x118129210/line/524" },
        { "ref": "otel/span/0x0/transient/frame/0x14d077200/line/81" },
        { "ref": "otel/span/0x0/transient/frame/0x14d076fd0/line/1859" },
        { "ref": "otel/span/0x0/transient/frame/0x118113d60/line/570" },
        { "ref": "otel/span/0x0/transient/frame/0x11812e380/line/195" },
        { "ref": "otel/span/0x0/transient/frame/0x104e89a40/line/737" },
        { "ref": "otel/span/0x0/transient/frame/0x14d022260/line/1053" },
        { "ref": "otel/span/0x0/transient/frame/0x104ddc230/line/17" },
        { "ref": "otel/span/0x0/transient/frame/0x12c618b00/line/87" },
        { "ref": "otel/span/0x0/transient/frame/0x12c614a80/line/194" }
      ],
      "module": "secretflow.device.device.spu",
      "func": "SPU.__call__.<locals>.wrapper"
    },
    "otel/span/0x0/transient/id/0x106d0bc80": {
      "ref": "otel/span/0x0/transient/id/0x106d0bc80",
      "kind": "object",
      "type": "builtins.int",
      "snapshot": "10"
    },
    "otel/span/0x0/transient/id/0x33b6e6770": {
      "ref": "otel/span/0x0/transient/id/0x33b6e6770",
      "kind": "object",
      "type": "builtins.float",
      "snapshot": "0.01"
    },
    "python/id/0x33b827ca0+1": {
      "ref": "python/id/0x33b827ca0+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x71646a4247f6b676",
      "module": "__main__",
      "name": "logistic_regression",
      "signature": {
        "parameters": [
          { "name": "weights", "kind": 1, "annotation": "typing.Any" },
          { "name": "bias", "kind": 1, "annotation": "typing.Any" },
          { "name": "x1", "kind": 1, "annotation": "typing.Any" },
          { "name": "x2", "kind": 1, "annotation": "typing.Any" },
          { "name": "y", "kind": 1, "annotation": "typing.Any" },
          { "name": "epochs", "kind": 1, "annotation": "typing.Any" },
          { "name": "learning_rate", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "Cell In[5]",
      "firstlineno": 30,
      "source": "def logistic_regression(weights, bias, x1, x2, y, epochs, learning_rate):\n    x = concatenate_samples(x1, x2)\n    for _ in range(10):\n        gradients = jax.grad(loss, (0, 1))(weights, bias, x, y)\n        weights -= learning_rate * gradients[0]\n        bias -= learning_rate * gradients[1]\n    return weights, bias\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33e21e7c0": {
      "ref": "otel/span/0x0/transient/id/0x33e21e7c0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "['epochs']",
      "values": [{ "ref": "otel/span/0x0/transient/id/0x33ad2c730" }]
    },
    "otel/span/0x0/transient/id/0x33ad2c730": {
      "ref": "otel/span/0x0/transient/id/0x33ad2c730",
      "kind": "object",
      "type": "builtins.str",
      "snapshot": "'epochs'"
    },
    "python/id/0x17b12a550+1": {
      "ref": "python/id/0x17b12a550+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x21a2463c0728d5ac",
      "module": "secretflow.device.device.spu",
      "name": "_argnames_partial_except",
      "signature": {
        "parameters": [
          { "name": "fn", "kind": 1, "annotation": "typing.Any" },
          { "name": "static_argnames", "kind": 1, "annotation": "typing.Any" },
          { "name": "kwargs", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "firstlineno": 1516,
      "source": "def _argnames_partial_except(fn, static_argnames, kwargs):\n    if static_argnames is None:\n        return fn, kwargs\n\n    assert isinstance(\n        static_argnames, (str, Iterable)\n    ), f'type of static_argnames is {type(static_argnames)} while str or Iterable is required here.'\n    if isinstance(static_argnames, str):\n        static_argnames = (static_argnames,)\n\n    static_kwargs = {k: kwargs.pop(k) for k in static_argnames if k in kwargs}\n    return functools.partial(fn, **static_kwargs), kwargs\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "python/id/0x17b130940+1": {
      "ref": "python/id/0x17b130940+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x433313183d4e56ca",
      "module": "secretflow.device.device.spu",
      "name": "_spu_compile",
      "signature": {
        "parameters": [
          { "name": "fn", "kind": 1, "annotation": "typing.Any" },
          { "name": "meta_args", "kind": 2, "annotation": "typing.Any" },
          { "name": "meta_kwargs", "kind": 4, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "firstlineno": 1538,
      "source": "def _spu_compile(fn, *meta_args, **meta_kwargs):\n    meta_args, meta_kwargs = jax.tree_util.tree_map(\n        lambda x: ray.get(x) if isinstance(x, ray.ObjectRef) else x,\n        (meta_args, meta_kwargs),\n    )\n\n    # prepare inputs and metatdata.\n    input_name = []\n    input_vis = []\n\n    def _get_input_metatdata(obj: SPUObject):\n        input_name.append(_generate_input_uuid())\n        input_vis.append(obj.vtype)\n\n    jax.tree_util.tree_map(_get_input_metatdata, (meta_args, meta_kwargs))\n\n    try:\n        executable, output_tree = spu_fe.compile(\n            spu_fe.Kind.JAX,\n            fn,\n            meta_args,\n            meta_kwargs,\n            input_name,\n            input_vis,\n            lambda output_flat: [\n                _generate_output_uuid() for _ in range(len(output_flat))\n            ],\n        )\n    except Exception:\n        raise ray.exceptions.WorkerCrashedError()\n\n    return executable, output_tree\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "python/id/0x17b02be10+1": {
      "ref": "python/id/0x17b02be10+1",
      "kind": "object",
      "type": "enum.EnumMeta",
      "snapshot": "<enum 'SPUCompilerNumReturnsPolicy'>"
    },
    "otel/span/0x0/transient/id/0x33e544c80": {
      "ref": "otel/span/0x0/transient/id/0x33e544c80",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[<secretflow.device.device.spu.SPUObject object at 0x33e205760>,\n <secretflow.device.device.spu.SPUObject object at 0x33e346940>]",
      "values": [
        {
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)"
        }
      ]
    },
    "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)": {
      "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.spu.SPUObject",
      "location": {
        "kind": "location",
        "type": "SPU",
        "parties": ["alice", "bob"],
        "parameters": { "protocol": "SEMI2K", "field": "FM128", "fxp_fraction_bits": 0 }
      },
      "refs": [
        "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)",
        "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000003000000)",
        "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000003000000)"
      ]
    },
    "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)": {
      "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.spu.SPUObject",
      "location": {
        "kind": "location",
        "type": "SPU",
        "parties": ["alice", "bob"],
        "parameters": { "protocol": "SEMI2K", "field": "FM128", "fxp_fraction_bits": 0 }
      },
      "refs": [
        "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)",
        "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000004000000)",
        "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000004000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33e508790": {
      "ref": "otel/span/0x0/transient/id/0x33e508790",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(bcb4fef46b376cafaf23b462bfe8c365427a357b0100000001000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(bcb4fef46b376cafaf23b462bfe8c365427a357b0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e592e40": {
      "ref": "otel/span/0x0/transient/id/0x33e592e40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "python/id/0x33a802550+1": {
      "ref": "python/id/0x33a802550+1",
      "kind": "object",
      "type": "ray.actor.ActorMethod",
      "snapshot": "<ray.actor.ActorMethod object at 0x33a802550>"
    },
    "otel/span/0x0/transient/frame/0x2afea5d60/line/190": {
      "ref": "otel/span/0x0/transient/frame/0x2afea5d60/line/190",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "lineno": 190,
      "func": "__del__",
      "code": "actor.del_share.remote(self.shares_name[i])"
    },
    "ray/objectref/ObjectRef(79cc316456d39201af23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(79cc316456d39201af23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(79cc316456d39201af23b462bfe8c365427a357b0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e2a6ee0": {
      "ref": "otel/span/0x0/transient/id/0x33e2a6ee0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(88543757a8df6d2fe11e0e6b35627ffff00336110100000001000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(88543757a8df6d2fe11e0e6b35627ffff00336110100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e251180": {
      "ref": "otel/span/0x0/transient/id/0x33e251180",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "python/id/0x33a81a5b0+1": {
      "ref": "python/id/0x33a81a5b0+1",
      "kind": "object",
      "type": "ray.actor.ActorMethod",
      "snapshot": "<ray.actor.ActorMethod object at 0x33a81a5b0>"
    },
    "ray/objectref/ObjectRef(c1464dc5b2308f10e11e0e6b35627ffff00336110100000001000000)": {
      "ref": "ray/objectref/ObjectRef(c1464dc5b2308f10e11e0e6b35627ffff00336110100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(c1464dc5b2308f10e11e0e6b35627ffff00336110100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e530340": {
      "ref": "otel/span/0x0/transient/id/0x33e530340",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000003000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000003000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e5e02c0": {
      "ref": "otel/span/0x0/transient/id/0x33e5e02c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "python/id/0x33a802b80+1": {
      "ref": "python/id/0x33a802b80+1",
      "kind": "object",
      "type": "ray.actor.ActorMethod",
      "snapshot": "<ray.actor.ActorMethod object at 0x33a802b80>"
    },
    "otel/span/0x0/transient/frame/0x11fd43fc0/line/1847": {
      "ref": "otel/span/0x0/transient/frame/0x11fd43fc0/line/1847",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "lineno": 1847,
      "func": "outfeed_shares",
      "code": "(next(iter(self.actors.values()))).outfeed_shares_chunk_count.remote("
    },
    "otel/span/0x0/transient/frame/0x2afec1e60/line/48": {
      "ref": "otel/span/0x0/transient/frame/0x2afec1e60/line/48",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/spu.py",
      "lineno": 48,
      "func": "spu_to_pyu",
      "code": "*self.device.outfeed_shares(self.shares_name),"
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/29": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/29",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 29,
      "func": "main",
      "code": "weights = weights.to(bob)"
    },
    "ray/objectref/ObjectRef(a6d6d59239756144af23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(a6d6d59239756144af23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(a6d6d59239756144af23b462bfe8c365427a357b0100000001000000)"
    },
    "otel/span/0x0/transient/frame/0x11fd43fc0/line/1846": {
      "ref": "otel/span/0x0/transient/frame/0x11fd43fc0/line/1846",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "lineno": 1846,
      "func": "outfeed_shares",
      "code": "shares_chunk_count = sfd.get("
    },
    "otel/span/0x0/transient/id/0x33c5f4180": {
      "ref": "otel/span/0x0/transient/id/0x33c5f4180",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'shares_chunk_count': 1}",
      "values": {
        "shares_chunk_count": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" }
      }
    },
    "otel/span/0x0/transient/id/0x33e226d00": {
      "ref": "otel/span/0x0/transient/id/0x33e226d00",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000003000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000003000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e5db280": {
      "ref": "otel/span/0x0/transient/id/0x33e5db280",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "python/id/0x33a802b20+1": {
      "ref": "python/id/0x33a802b20+1",
      "kind": "object",
      "type": "ray.actor.ActorMethod",
      "snapshot": "<ray.actor.ActorMethod object at 0x33a802b20>"
    },
    "otel/span/0x0/transient/frame/0x11fd43fc0/line/1854": {
      "ref": "otel/span/0x0/transient/frame/0x11fd43fc0/line/1854",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "lineno": 1854,
      "func": "outfeed_shares",
      "code": "remote_ret = actor.outfeed_share.options("
    },
    "otel/span/0x0/transient/id/0x33e592800": {
      "ref": "otel/span/0x0/transient/id/0x33e592800",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000001000000),\n ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000001000000)"
    },
    "ray/objectref/ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000002000000)": {
      "ref": "ray/objectref/ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000002000000)"
    },
    "otel/span/0x0/transient/id/0x33e5dba40": {
      "ref": "otel/span/0x0/transient/id/0x33e5dba40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'remote_ret': [ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000001000000),\n                ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000002000000)]}",
      "values": { "remote_ret": { "ref": "otel/span/0x0/transient/id/0x33e592800" } }
    },
    "otel/span/0x0/transient/id/0x33e5ec9d0": {
      "ref": "otel/span/0x0/transient/id/0x33e5ec9d0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000003000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000003000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e6204c0": {
      "ref": "otel/span/0x0/transient/id/0x33e6204c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'remote_ret': [ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000001000000),\n                ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000002000000)]}",
      "values": { "remote_ret": { "ref": "otel/span/0x0/transient/id/0x33e386a80" } }
    },
    "python/id/0x33a81ad90+1": {
      "ref": "python/id/0x33a81ad90+1",
      "kind": "object",
      "type": "ray.actor.ActorMethod",
      "snapshot": "<ray.actor.ActorMethod object at 0x33a81ad90>"
    },
    "otel/span/0x0/transient/id/0x33e386a80": {
      "ref": "otel/span/0x0/transient/id/0x33e386a80",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000001000000),\n ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000002000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000002000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000001000000)": {
      "ref": "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000001000000)"
    },
    "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000002000000)": {
      "ref": "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000002000000)"
    },
    "python/id/0x17b130f70+1": {
      "ref": "python/id/0x17b130f70+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x553dce86923b29bd",
      "module": "secretflow.device.device.spu",
      "name": "SPU.outfeed_shares",
      "signature": {
        "parameters": [
          { "name": "self", "kind": 1, "annotation": "typing.Any" },
          {
            "name": "shares_name",
            "kind": 1,
            "annotation": "typing.List[typing.Union[ray._raylet.ObjectRef, fed.fed_object.FedObject]]"
          }
        ],
        "return_annotation": "typing.Tuple[typing.Union[ray._raylet.ObjectRef, fed.fed_object.FedObject], typing.List[typing.Union[ray._raylet.ObjectRef, fed.fed_object.FedObject]]]"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/device/spu.py",
      "firstlineno": 1838,
      "source": "def outfeed_shares(\n    self, shares_name: List[Union[ray.ObjectRef, fed.FedObject]]\n) -> Tuple[\n    Union[ray.ObjectRef, fed.FedObject],\n    List[Union[ray.ObjectRef, fed.FedObject]],\n]:\n    assert len(shares_name) == len(self.actors)\n\n    shares_chunk_count = sfd.get(\n        (next(iter(self.actors.values()))).outfeed_shares_chunk_count.remote(\n            shares_name[0]\n        )\n    )\n\n    ret = []\n    for i, actor in enumerate(self.actors.values()):\n        remote_ret = actor.outfeed_share.options(\n            num_returns=1 + shares_chunk_count\n        ).remote(shares_name[i])\n\n        if shares_chunk_count == 0:\n            io_info = remote_ret\n        else:\n            io_info, *shares_chunk = remote_ret\n            ret.extend(shares_chunk)\n\n    return io_info, ret\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/frame/0x11fd43fc0/line/1838": {
      "ref": "otel/span/0x0/transient/frame/0x11fd43fc0/line/1838",
      "kind": "frame",
      "type": "builtins.frame",
      "local_vars": {
        "self": {
          "ref": "secretflow/location/SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0"
        },
        "shares_name": { "ref": "otel/span/0x0/transient/id/0x33e557140" }
      },
      "global_vars": {},
      "outer_frames": [
        { "ref": "otel/span/0x0/transient/frame/0x11fd43fc0/line/1838" },
        { "ref": "otel/span/0x0/transient/frame/0x2afec1e60/line/48" },
        { "ref": "otel/span/0x0/transient/frame/0x17b5aca00/line/80" },
        { "ref": "otel/span/0x0/transient/frame/0x17b5bbb50/line/111" },
        { "ref": "otel/span/0x0/transient/frame/0x17b5c71a0/line/70" },
        { "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/30" },
        { "ref": "otel/span/0x0/transient/frame/0x33a8379f0/line/42" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661bc0/line/3508" },
        { "ref": "otel/span/0x0/transient/frame/0x11c6632d0/line/3448" },
        { "ref": "otel/span/0x0/transient/frame/0x105ba37e0/line/3269" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661df0/line/129" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660400/line/3064" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660c50/line/3009" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661870/line/549" },
        { "ref": "otel/span/0x0/transient/frame/0x11c626890/line/426" },
        { "ref": "otel/span/0x0/transient/frame/0x11c64b770/line/758" },
        { "ref": "otel/span/0x0/transient/frame/0x14c621df0/line/418" },
        { "ref": "otel/span/0x0/transient/frame/0x11812c420/line/513" },
        { "ref": "otel/span/0x0/transient/frame/0x118129210/line/524" },
        { "ref": "otel/span/0x0/transient/frame/0x14d077200/line/81" },
        { "ref": "otel/span/0x0/transient/frame/0x14d076fd0/line/1859" },
        { "ref": "otel/span/0x0/transient/frame/0x118113d60/line/570" },
        { "ref": "otel/span/0x0/transient/frame/0x11812e380/line/195" },
        { "ref": "otel/span/0x0/transient/frame/0x104e89a40/line/737" },
        { "ref": "otel/span/0x0/transient/frame/0x14d022260/line/1053" },
        { "ref": "otel/span/0x0/transient/frame/0x104ddc230/line/17" },
        { "ref": "otel/span/0x0/transient/frame/0x12c618b00/line/87" },
        { "ref": "otel/span/0x0/transient/frame/0x12c614a80/line/194" }
      ],
      "module": "secretflow.device.device.spu",
      "func": "SPU.outfeed_shares"
    },
    "otel/span/0x0/transient/id/0x33e56fe00": {
      "ref": "otel/span/0x0/transient/id/0x33e56fe00",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000003000000),\n ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000003000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000003000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000003000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e5ee540": {
      "ref": "otel/span/0x0/transient/id/0x33e5ee540",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000001000000),\n [ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000002000000),\n  ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000002000000)])",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000001000000)"
        },
        { "ref": "otel/span/0x0/transient/id/0x33e605ec0" }
      ]
    },
    "otel/span/0x0/transient/id/0x33e605ec0": {
      "ref": "otel/span/0x0/transient/id/0x33e605ec0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000002000000),\n ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000002000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000002000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e56f700": {
      "ref": "otel/span/0x0/transient/id/0x33e56f700",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000001000000),\n ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000002000000),\n ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000002000000),\n ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/frame/0x2afec1e60/line/45": {
      "ref": "otel/span/0x0/transient/frame/0x2afec1e60/line/45",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/spu.py",
      "lineno": 45,
      "func": "spu_to_pyu",
      "code": "return pyu(reveal)("
    },
    "otel/span/0x0/transient/id/0x33e383b00": {
      "ref": "otel/span/0x0/transient/id/0x33e383b00",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[SPUIOInfo(start_chunk_index=0, end_chunk_index=1, meta=b'\\x08\\x0b\\x18\\x01\"\\x03\\n\\x01\\x1e*\\x12semi2k.AShr<FM128>'),\n b'\\x08\\xe0\\x03\\x1a\\xe0\\x03-\\x0e\\x8f\\xaf\\xe3P-\\xa1<\\xd7\\x9d;\\xce\\xf6'\n b\"\\x97\\xdb\\xbd\\n\\xf0\\xf4\\xf7\\xf2\\x82\\xd3#\\xae\\x00p\\xd0*'\\xedf\\x15H\\xf6e}\"\n b\"\\xcc\\xae2x2\\xb1\\xa7\\xca\\x128\\xb9-\\xfc\\xa0'\\xe7yTLL\\xe7dt\\xbf\\xd8\\xe6\\x1dY\"\n b'\\xf0\\r\\xb7\\xa9\\xc7\\xf5\\xde\\x9d\\xef~\\n\\xeb\\x17\\x97\\xe1+\\xb9\\x96\\x1a:\\x825-`'\n b\"\\xf6\\xe8\\x1b\\xa3\\xa5\\xca\\xdf\\x07\\xc9\\x1d\\xf5\\xee\\x14\\x02\\x1c\\x88W'k\\x03\"\n b'\\x1ev\\x87\\x17\\x9c\\x0bp\\xa4\\xce\\x04\\xec+\\x9c\\xbd~\\xb6o2\\xc5\\xd7\\xc0\\x99\\xf4_'\n b'\\xd8m\\xe8D7rM\\xa1\\xc0>\\x83\\xbej\\x1c\\xe5\\xdaI\\x89\\x80\\xe8\\x8f2\\xcc='\n b'\\xed\\x1f\\xbeK\\x0b\\x02\\x9a\\xa8\\x0f\\xd8\\xcbp\\xd0cZz\\xf5\\xe2$\\xfd\\r}\\x96\\xf8'\n b'\\xeb\\x88$(\\xd5x\\xb6{\\xce-\\x8c}\\x15*\\x18\\xb9f\\xe4\\xd0j\\x8b$1\\xd4\\x07\\xf5\\x8eS'\n b'\\xe4(\\\\+\\xb0L\\x82\\xc6Y\\xd4\\xa7\\xa1l\\x89\\xe7\\xd0S\\x81\\xc7\\xbfD\\xd0\\x90\\xe7'\n b'\\x9dN9}\\xaeB\\xe13\\r\\x84\\r\\xac\\xf4:\\xd7$\\xca\\xf4\\xcbD\\xcdO\\x9d\\xd1>\\xb6cw'\n b'(\\xd1t\\xa6\\xcai\\x03:\\xd4PA&u\"Y\\xd3\\x1dG\"\\xf3\"\\xa4EEp]2\\xd2I\\x9b\\xb5<'\n b'7{\\x7f\\xe5U\\xd8 l0\\xaf\\xc9_\\xf6Na\\xfa\\x1fy\\xdb(\\x8cg\\x9c\\xf5\\xd8a\\x92x'\n b'\\x87\\x10\\xa1\\xb7\\xcd\\x97M<\\rKp\\xc7\\xbe]aDUO\\x84\\xa0?\\x04\\xb6\\xcc\\xee,\\x99='\n b'GR\\xc6\\xdb\\xff\\x91\\n\\xe3\\xac_\\xb3<^\\xcc\\x04Q\\x05\\x95n \\x80b\\x80>'\n b'\\xca\\xd7\\xac\\x98\\xa8\\x86\\xe4\\xfc\\x0f\\xf7\\xbf\\xda\\x08~[\\xc1*\\x1a!\\x85Gx\\xd6v'\n b':\\x0e\\x96\\xe3<\\xad1^\\x87\\x91\\x1eqS\\xcag,@\\x0e\\x16\\xee\\x00I\\xb9\\x1fauO\\x8f'\n b'\"\\x03\\x06\\xeeF\\xa8pBB\\xcc\\xb2\\x91\\xe8\\xe6\\xa6\\xee\\x8f\\xf6\\x84L\\x95>\\xac\\xc9'\n b'\\xe2\\x84Z.?\\x0e1\\xa6\\xe5\\x0f\\xc2\\x1f_:\\x99\\rC\\x0f3r\\xd0h8D\\xf1\\xb8\\xee\\xf4'\n b'\\xeb\\xfe',\n b'\\x08\\xe0\\x03\\x1a\\xe0\\x03W\\xf5pP\\x1c\\xaf\\xd2^\\xc3(b\\xc41\\th$\\x05\\xff'\n b'\\x0f\\x0b\\x08\\r},\\xdcQ\\xff\\x8f/\\xd5\\xd8\\x12\\xb1\\xfd\\xb7\\t\\x9a\\x823Q\\xcd\\x87'\n b'\\xcdNX5\\xed\\xc7\\x85\\xf5\\x02_\\xd8\\x18\\x86\\xab\\xb3\\xb3\\x18\\x9b\\x8b@'\n b\"'\\x19\\xf1\\xa6\\x0f\\xf2HV8\\n!b\\x10\\x81\\xf5\\x14\\xe8h\\x1d\\xd4Fi\\xe5\\xc5\"\n b'}\\xca\\xd2\\x9f\\t\\x17\\xe4\\\\Z5\\x0b\\xf86\\xe2\\n\\x11\\xeb\\xfd\\xe3w\\xa8\\xd8\\x94\\xfc'\n b\"\\xe1\\x89m\\xe8c\\xf4\\x8f[1\\xfb\\x13\\xd4cB\\x81I\\x90\\xcdX(?f\\x0b\\xa0'\\x92\\x17\\xbb\"\n b'\\xc8\\x8d\\xb2^?\\xc1\\x8aA\\x95\\xe3\\x1a%\\xb6v\\x7f\\x17p\\xcd3\\xc2\\x12\\xe0\\x1f\\xb4'\n b\"\\xf4\\xfdeW\\xf0'4\\x8f/\\x9c\\xa5\\x85\\n\\x1d\\xd0\\x03\\xf2\\x82i\\x07\\x14w\\xdb\\xd7\"\n b'*\\x87I\\x841\\xd2n\\x81\\xea\\xd5\\xe7F\\x99\\x1b/\\x95t\\xdb\\xce+\\xf8\\n:\\x83'\n b'\\x1b\\xd7\\xa3\\xd4O\\xb3}9\\xa6+X^\\x93v\\x1a/\\xac~8@\\xbb/o\\x18b\\xb1\\xc6\\x82'\n b'Q\\xbd \\xcc\\xf2{\\xf2S\\x0b\\xc5(\\xdb5\\x0b4\\xbb2\\xb0f.\\xc1I\\x9c\\x88\\xd7.\\x8bY'\n b'5\\x96\\xfc\\xc5+\\xaf\\xbf\\xd9\\x8a\\xdd\\xa6,\\xe2\\xb8\\xdd\\x0c\\xdd[\\xba\\xba'\n b\"\\x8f\\xa2\\xd2-\\xb6dJ\\xc3\\xc8\\x84\\x80\\x1a\\xaa'\\xdf\\x93\\xcfP7\\xa0\\t\\xb1\\x9e\\x05\"\n b\"\\xe0\\x86$\\xd7s\\x98c\\n'\\x9e1\\x89x\\xef^H2h\\xb2\\xc3\\xf2\\xb4\\x8f8A\\xa24\\xc7\"\n b'\\xaa\\xb0{_\\xc0\\xfbI3\\x11\\xd3f\\xc2\\xb8\\xadG+\\x00n\\xf5\\x1cS\\xa0L\\xc3'\n b'\\xa13\\xfb\\xae\\xfaj\\xc9\\xca}\\x9d\\x7f\\xc15(SgWy\\x1b\\x03\\xf0\\x08T%\\xf7\\x81\\xa4>'\n b'\\xd5\\xe5\\xdez\\xb8\\x87)\\x89\\xc5\\xf1V\\x1c\\xc3R\\xce\\xa1xn\\xe1\\x8e\\xac5\\x98\\xd3'\n b'\\xbf\\xf1\\xb9\\x11\\xff\\xb6F\\xe0\\x9e\\x8a\\xb0p\\xdd\\xfc\\xf9\\x11\\xb9W~\\xbd\\xbd3Mn'\n b'\\x17\\x19Y\\x11p\\t{\\xb3j\\xc1z6\\x1d{\\xa5\\xd1\\xc0\\xf1\\xceY\\x1a\\xf0=\\xe0'\n b'\\xa0\\xc5s\\xf2\\xbc\\xf0\\xcc\\x8d/\\x97\\xc7\\xbb\\x0eG\\x11\\x0b\\x14\\x01',\n SPUValueMeta(shape=(30,), dtype=<class 'numpy.float32'>, vtype=1, protocol=2, field=3, fxp_fraction_bits=0)]",
      "values": [
        { "ref": "python/id/0x33e534550+1" },
        { "ref": "otel/span/0x0/transient/id/0x2afee7090" },
        { "ref": "otel/span/0x0/transient/id/0x2afec5110" },
        { "ref": "python/id/0x33e534e80+1" }
      ]
    },
    "python/id/0x33e534550+1": {
      "ref": "python/id/0x33e534550+1",
      "kind": "dict",
      "type": "secretflow.device.device.spu.SPUIOInfo",
      "snapshot": "SPUIOInfo(start_chunk_index=0, end_chunk_index=1, meta=b'\\x08\\x0b\\x18\\x01\"\\x03\\n\\x01\\x1e*\\x12semi2k.AShr<FM128>')",
      "values": {
        "start_chunk_index": { "ref": "otel/span/0x0/transient/id/0x106d0bb40" },
        "end_chunk_index": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "meta": { "ref": "otel/span/0x0/transient/id/0x33e544df0" }
      }
    },
    "otel/span/0x0/transient/id/0x33e544df0": {
      "ref": "otel/span/0x0/transient/id/0x33e544df0",
      "kind": "object",
      "type": "builtins.bytes",
      "snapshot": "b'\\x08\\x0b\\x18\\x01\"\\x03\\n\\x01\\x1e*\\x12semi2k.AShr<FM128>'"
    },
    "otel/span/0x0/transient/id/0x2afee7090": {
      "ref": "otel/span/0x0/transient/id/0x2afee7090",
      "kind": "object",
      "type": "builtins.bytes",
      "snapshot": "(b'\\x08\\xe0\\x03\\x1a\\xe0\\x03-\\x0e\\x8f\\xaf\\xe3P-\\xa1<\\xd7\\x9d;\\xce\\xf6'\n b\"\\x97\\xdb\\xbd\\n\\xf0\\xf4\\xf7\\xf2\\x82\\xd3#\\xae\\x00p\\xd0*'\\xedf\\x15H\\xf6e}\"\n b\"\\xcc\\xae2x2\\xb1\\xa7\\xca\\x128\\xb9-\\xfc\\xa0'\\xe7yTLL\\xe7dt\\xbf\\xd8\\xe6\\x1dY\"\n b'\\xf0\\r\\xb7\\xa9\\xc7\\xf5\\xde\\x9d\\xef~\\n\\xeb\\x17\\x97\\xe1+\\xb9\\x96\\x1a:\\x825-`'\n b\"\\xf6\\xe8\\x1b\\xa3\\xa5\\xca\\xdf\\x07\\xc9\\x1d\\xf5\\xee\\x14\\x02\\x1c\\x88W'k\\x03\"\n b'\\x1ev\\x87\\x17\\x9c\\x0bp\\xa4\\xce\\x04\\xec+\\x9c\\xbd~\\xb6o2\\xc5\\xd7\\xc0\\x99\\xf4_'\n b'\\xd8m\\xe8D7rM\\xa1\\xc0>\\x83\\xbej\\x1c\\xe5\\xdaI\\x89\\x80\\xe8\\x8f2\\xcc='\n b'\\xed\\x1f\\xbeK\\x0b\\x02\\x9a\\xa8\\x0f\\xd8\\xcbp\\xd0cZz\\xf5\\xe2$\\xfd\\r}\\x96\\xf8'\n b'\\xeb\\x88$(\\xd5x\\xb6{\\xce-\\x8c}\\x15*\\x18\\xb9f\\xe4\\xd0j\\x8b$1\\xd4\\x07\\xf5\\x8eS'\n b'\\xe4(\\\\+\\xb0L\\x82\\xc6Y\\xd4\\xa7\\xa1l\\x89\\xe7\\xd0S\\x81\\xc7\\xbfD\\xd0\\x90\\xe7'\n b'\\x9dN9}\\xaeB\\xe13\\r\\x84\\r\\xac\\xf4:\\xd7$\\xca\\xf4\\xcbD\\xcdO\\x9d\\xd1>\\xb6cw'\n b'(\\xd1t\\xa6\\xcai\\x03:\\xd4PA&u\"Y\\xd3\\x1dG\"\\xf3\"\\xa4EEp]2\\xd2I\\x9b\\xb5<'\n b'7{\\x7f\\xe5U\\xd8 l0\\xaf\\xc9_\\xf6Na\\xfa\\x1fy\\xdb(\\x8cg\\x9c\\xf5\\xd8a\\x92x'\n b'\\x87\\x10\\xa1\\xb7\\xcd\\x97M<\\rKp\\xc7\\xbe]aDUO\\x84\\xa0?\\x04\\xb6\\xcc\\xee,\\x99='\n b'GR\\xc6\\xdb\\xff\\x91\\n\\xe3\\xac_\\xb3<^\\xcc\\x04Q\\x05\\x95n \\x80b\\x80>'\n b'\\xca\\xd7\\xac\\x98\\xa8\\x86\\xe4\\xfc\\x0f\\xf7\\xbf\\xda\\x08~[\\xc1*\\x1a!\\x85Gx\\xd6v'\n b':\\x0e\\x96\\xe3<\\xad1^\\x87\\x91\\x1eqS\\xcag,@\\x0e\\x16\\xee\\x00I\\xb9\\x1fauO\\x8f'\n b'\"\\x03\\x06\\xeeF\\xa8pBB\\xcc\\xb2\\x91\\xe8\\xe6\\xa6\\xee\\x8f\\xf6\\x84L\\x95>\\xac\\xc9'\n b'\\xe2\\x84Z.?\\x0e1\\xa6\\xe5\\x0f\\xc2\\x1f_:\\x99\\rC\\x0f3r\\xd0h8D\\xf1\\xb8\\xee\\xf4'\n b'\\xeb\\xfe')"
    },
    "otel/span/0x0/transient/id/0x2afec5110": {
      "ref": "otel/span/0x0/transient/id/0x2afec5110",
      "kind": "object",
      "type": "builtins.bytes",
      "snapshot": "(b'\\x08\\xe0\\x03\\x1a\\xe0\\x03W\\xf5pP\\x1c\\xaf\\xd2^\\xc3(b\\xc41\\th$\\x05\\xff'\n b'\\x0f\\x0b\\x08\\r},\\xdcQ\\xff\\x8f/\\xd5\\xd8\\x12\\xb1\\xfd\\xb7\\t\\x9a\\x823Q\\xcd\\x87'\n b'\\xcdNX5\\xed\\xc7\\x85\\xf5\\x02_\\xd8\\x18\\x86\\xab\\xb3\\xb3\\x18\\x9b\\x8b@'\n b\"'\\x19\\xf1\\xa6\\x0f\\xf2HV8\\n!b\\x10\\x81\\xf5\\x14\\xe8h\\x1d\\xd4Fi\\xe5\\xc5\"\n b'}\\xca\\xd2\\x9f\\t\\x17\\xe4\\\\Z5\\x0b\\xf86\\xe2\\n\\x11\\xeb\\xfd\\xe3w\\xa8\\xd8\\x94\\xfc'\n b\"\\xe1\\x89m\\xe8c\\xf4\\x8f[1\\xfb\\x13\\xd4cB\\x81I\\x90\\xcdX(?f\\x0b\\xa0'\\x92\\x17\\xbb\"\n b'\\xc8\\x8d\\xb2^?\\xc1\\x8aA\\x95\\xe3\\x1a%\\xb6v\\x7f\\x17p\\xcd3\\xc2\\x12\\xe0\\x1f\\xb4'\n b\"\\xf4\\xfdeW\\xf0'4\\x8f/\\x9c\\xa5\\x85\\n\\x1d\\xd0\\x03\\xf2\\x82i\\x07\\x14w\\xdb\\xd7\"\n b'*\\x87I\\x841\\xd2n\\x81\\xea\\xd5\\xe7F\\x99\\x1b/\\x95t\\xdb\\xce+\\xf8\\n:\\x83'\n b'\\x1b\\xd7\\xa3\\xd4O\\xb3}9\\xa6+X^\\x93v\\x1a/\\xac~8@\\xbb/o\\x18b\\xb1\\xc6\\x82'\n b'Q\\xbd \\xcc\\xf2{\\xf2S\\x0b\\xc5(\\xdb5\\x0b4\\xbb2\\xb0f.\\xc1I\\x9c\\x88\\xd7.\\x8bY'\n b'5\\x96\\xfc\\xc5+\\xaf\\xbf\\xd9\\x8a\\xdd\\xa6,\\xe2\\xb8\\xdd\\x0c\\xdd[\\xba\\xba'\n b\"\\x8f\\xa2\\xd2-\\xb6dJ\\xc3\\xc8\\x84\\x80\\x1a\\xaa'\\xdf\\x93\\xcfP7\\xa0\\t\\xb1\\x9e\\x05\"\n b\"\\xe0\\x86$\\xd7s\\x98c\\n'\\x9e1\\x89x\\xef^H2h\\xb2\\xc3\\xf2\\xb4\\x8f8A\\xa24\\xc7\"\n b'\\xaa\\xb0{_\\xc0\\xfbI3\\x11\\xd3f\\xc2\\xb8\\xadG+\\x00n\\xf5\\x1cS\\xa0L\\xc3'\n b'\\xa13\\xfb\\xae\\xfaj\\xc9\\xca}\\x9d\\x7f\\xc15(SgWy\\x1b\\x03\\xf0\\x08T%\\xf7\\x81\\xa4>'\n b'\\xd5\\xe5\\xdez\\xb8\\x87)\\x89\\xc5\\xf1V\\x1c\\xc3R\\xce\\xa1xn\\xe1\\x8e\\xac5\\x98\\xd3'\n b'\\xbf\\xf1\\xb9\\x11\\xff\\xb6F\\xe0\\x9e\\x8a\\xb0p\\xdd\\xfc\\xf9\\x11\\xb9W~\\xbd\\xbd3Mn'\n b'\\x17\\x19Y\\x11p\\t{\\xb3j\\xc1z6\\x1d{\\xa5\\xd1\\xc0\\xf1\\xceY\\x1a\\xf0=\\xe0'\n b'\\xa0\\xc5s\\xf2\\xbc\\xf0\\xcc\\x8d/\\x97\\xc7\\xbb\\x0eG\\x11\\x0b\\x14\\x01')"
    },
    "python/id/0x33e534e80+1": {
      "ref": "python/id/0x33e534e80+1",
      "kind": "dict",
      "type": "secretflow.device.device.spu.SPUValueMeta",
      "snapshot": "SPUValueMeta(shape=(30,), dtype=<class 'numpy.float32'>, vtype=1, protocol=2, field=3, fxp_fraction_bits=0)",
      "values": {
        "shape": { "ref": "otel/span/0x0/transient/id/0x33e5ec640" },
        "dtype": { "ref": "python/id/0x11957e2a8+1" },
        "vtype": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "protocol": { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        "field": { "ref": "otel/span/0x0/transient/id/0x106d0bba0" },
        "fxp_fraction_bits": { "ref": "otel/span/0x0/transient/id/0x106d0bb40" }
      }
    },
    "otel/span/0x0/transient/id/0x33e5ec640": {
      "ref": "otel/span/0x0/transient/id/0x33e5ec640",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(30,)",
      "values": [{ "ref": "otel/span/0x0/transient/id/0x106d0bf00" }]
    },
    "python/id/0x11957e2a8+1": {
      "ref": "python/id/0x11957e2a8+1",
      "kind": "object",
      "type": "builtins.type",
      "snapshot": "<class 'numpy.float32'>"
    },
    "otel/span/0x0/transient/id/0x33e56f880": {
      "ref": "otel/span/0x0/transient/id/0x33e56f880",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [SPUIOInfo(start_chunk_index=0, end_chunk_index=1, meta=b'\\x08\\x0b\\x18\\x01\"\\x03\\n\\x01\\x1e*\\x12semi2k.AShr<FM128>'),\n                 b'\\x08\\xe0\\x03\\x1a\\xe0\\x03-\\x0e\\x8f\\xaf\\xe3P-\\xa1<\\xd7'\n                 b'\\x9d;\\xce\\xf6\\x97\\xdb\\xbd\\n\\xf0\\xf4\\xf7\\xf2\\x82\\xd3#\\xae'\n                 b\"\\x00p\\xd0*'\\xedf\\x15H\\xf6e}\\xcc\\xae2x2\\xb1\\xa7\\xca\\x128\\xb9-\"\n                 b\"\\xfc\\xa0'\\xe7yTLL\\xe7dt\\xbf\\xd8\\xe6\\x1dY\\xf0\\r\\xb7\\xa9\"\n                 b'\\xc7\\xf5\\xde\\x9d\\xef~\\n\\xeb\\x17\\x97\\xe1+\\xb9\\x96\\x1a:\\x825-`'\n                 b'\\xf6\\xe8\\x1b\\xa3\\xa5\\xca\\xdf\\x07\\xc9\\x1d\\xf5\\xee'\n                 b\"\\x14\\x02\\x1c\\x88W'k\\x03\\x1ev\\x87\\x17\\x9c\\x0bp\\xa4\"\n                 b'\\xce\\x04\\xec+\\x9c\\xbd~\\xb6o2\\xc5\\xd7\\xc0\\x99\\xf4_\\xd8m\\xe8D'\n                 b'7rM\\xa1\\xc0>\\x83\\xbej\\x1c\\xe5\\xdaI\\x89\\x80\\xe8\\x8f2\\xcc='\n                 b'\\xed\\x1f\\xbeK\\x0b\\x02\\x9a\\xa8\\x0f\\xd8\\xcbp\\xd0cZz'\n                 b'\\xf5\\xe2$\\xfd\\r}\\x96\\xf8\\xeb\\x88$(\\xd5x\\xb6{\\xce-\\x8c}'\n                 b'\\x15*\\x18\\xb9f\\xe4\\xd0j\\x8b$1\\xd4\\x07\\xf5\\x8eS\\xe4(\\\\+'\n                 b'\\xb0L\\x82\\xc6Y\\xd4\\xa7\\xa1l\\x89\\xe7\\xd0S\\x81\\xc7\\xbf'\n                 b'D\\xd0\\x90\\xe7\\x9dN9}\\xaeB\\xe13\\r\\x84\\r\\xac\\xf4:\\xd7$'\n                 b'\\xca\\xf4\\xcbD\\xcdO\\x9d\\xd1>\\xb6cw(\\xd1t\\xa6\\xcai\\x03:\\xd4PA&'\n                 b'u\"Y\\xd3\\x1dG\"\\xf3\"\\xa4EEp]2\\xd2I\\x9b\\xb5<7{\\x7f\\xe5U\\xd8 l'\n                 b'0\\xaf\\xc9_\\xf6Na\\xfa\\x1fy\\xdb(\\x8cg\\x9c\\xf5\\xd8a\\x92x'\n                 b'\\x87\\x10\\xa1\\xb7\\xcd\\x97M<\\rKp\\xc7\\xbe]aDUO\\x84\\xa0'\n                 b'?\\x04\\xb6\\xcc\\xee,\\x99=GR\\xc6\\xdb\\xff\\x91\\n\\xe3\\xac_\\xb3<'\n                 b'^\\xcc\\x04Q\\x05\\x95n \\x80b\\x80>\\xca\\xd7\\xac\\x98'\n                 b'\\xa8\\x86\\xe4\\xfc\\x0f\\xf7\\xbf\\xda\\x08~[\\xc1*\\x1a!\\x85Gx\\xd6v'\n                 b':\\x0e\\x96\\xe3<\\xad1^\\x87\\x91\\x1eqS\\xcag,@\\x0e\\x16\\xee'\n                 b'\\x00I\\xb9\\x1fauO\\x8f\"\\x03\\x06\\xeeF\\xa8pBB\\xcc\\xb2\\x91'\n                 b'\\xe8\\xe6\\xa6\\xee\\x8f\\xf6\\x84L\\x95>\\xac\\xc9\\xe2\\x84Z.'\n                 b'?\\x0e1\\xa6\\xe5\\x0f\\xc2\\x1f_:\\x99\\rC\\x0f3r\\xd0h8D'\n                 b'\\xf1\\xb8\\xee\\xf4\\xeb\\xfe',\n                 b'\\x08\\xe0\\x03\\x1a\\xe0\\x03W\\xf5pP\\x1c\\xaf\\xd2^\\xc3(b\\xc41\\t'\n                 b'h$\\x05\\xff\\x0f\\x0b\\x08\\r},\\xdcQ\\xff\\x8f/\\xd5\\xd8\\x12\\xb1\\xfd'\n                 b'\\xb7\\t\\x9a\\x823Q\\xcd\\x87\\xcdNX5\\xed\\xc7\\x85\\xf5\\x02_\\xd8\\x18'\n                 b\"\\x86\\xab\\xb3\\xb3\\x18\\x9b\\x8b@'\\x19\\xf1\\xa6\\x0f\\xf2HV8\\n!b\"\n                 b'\\x10\\x81\\xf5\\x14\\xe8h\\x1d\\xd4Fi\\xe5\\xc5}\\xca\\xd2\\x9f'\n                 b'\\t\\x17\\xe4\\\\Z5\\x0b\\xf86\\xe2\\n\\x11\\xeb\\xfd\\xe3w'\n                 b'\\xa8\\xd8\\x94\\xfc\\xe1\\x89m\\xe8c\\xf4\\x8f[1\\xfb\\x13\\xd4cB\\x81I'\n                 b\"\\x90\\xcdX(?f\\x0b\\xa0'\\x92\\x17\\xbb\\xc8\\x8d\\xb2^?\\xc1\\x8aA\"\n                 b'\\x95\\xe3\\x1a%\\xb6v\\x7f\\x17p\\xcd3\\xc2\\x12\\xe0\\x1f\\xb4'\n                 b\"\\xf4\\xfdeW\\xf0'4\\x8f/\\x9c\\xa5\\x85\\n\\x1d\\xd0\\x03\\xf2\\x82i\\x07\"\n                 b'\\x14w\\xdb\\xd7*\\x87I\\x841\\xd2n\\x81\\xea\\xd5\\xe7F\\x99\\x1b/\\x95'\n                 b't\\xdb\\xce+\\xf8\\n:\\x83\\x1b\\xd7\\xa3\\xd4O\\xb3}9\\xa6+X^'\n                 b'\\x93v\\x1a/\\xac~8@\\xbb/o\\x18b\\xb1\\xc6\\x82Q\\xbd \\xcc\\xf2{\\xf2S'\n                 b'\\x0b\\xc5(\\xdb5\\x0b4\\xbb2\\xb0f.\\xc1I\\x9c\\x88\\xd7.\\x8bY'\n                 b'5\\x96\\xfc\\xc5+\\xaf\\xbf\\xd9\\x8a\\xdd\\xa6,\\xe2\\xb8\\xdd\\x0c'\n                 b'\\xdd[\\xba\\xba\\x8f\\xa2\\xd2-\\xb6dJ\\xc3\\xc8\\x84\\x80\\x1a'\n                 b\"\\xaa'\\xdf\\x93\\xcfP7\\xa0\\t\\xb1\\x9e\\x05\\xe0\\x86$\\xd7s\\x98c\\n\"\n                 b\"'\\x9e1\\x89x\\xef^H2h\\xb2\\xc3\\xf2\\xb4\\x8f8A\\xa24\\xc7\\xaa\\xb0{_\"\n                 b'\\xc0\\xfbI3\\x11\\xd3f\\xc2\\xb8\\xadG+\\x00n\\xf5\\x1cS\\xa0L\\xc3'\n                 b'\\xa13\\xfb\\xae\\xfaj\\xc9\\xca}\\x9d\\x7f\\xc15(SgWy\\x1b\\x03'\n                 b'\\xf0\\x08T%\\xf7\\x81\\xa4>\\xd5\\xe5\\xdez\\xb8\\x87)\\x89'\n                 b'\\xc5\\xf1V\\x1c\\xc3R\\xce\\xa1xn\\xe1\\x8e\\xac5\\x98\\xd3'\n                 b'\\xbf\\xf1\\xb9\\x11\\xff\\xb6F\\xe0\\x9e\\x8a\\xb0p\\xdd\\xfc\\xf9\\x11'\n                 b'\\xb9W~\\xbd\\xbd3Mn\\x17\\x19Y\\x11p\\t{\\xb3j\\xc1z6\\x1d{\\xa5\\xd1'\n                 b'\\xc0\\xf1\\xceY\\x1a\\xf0=\\xe0\\xa0\\xc5s\\xf2\\xbc\\xf0\\xcc\\x8d'\n                 b'/\\x97\\xc7\\xbb\\x0eG\\x11\\x0b\\x14\\x01',\n                 SPUValueMeta(shape=(30,), dtype=<class 'numpy.float32'>, vtype=1, protocol=2, field=3, fxp_fraction_bits=0)]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33e383b00" } }
    },
    "otel/span/0x0/transient/id/0x33e6304c0": {
      "ref": "otel/span/0x0/transient/id/0x33e6304c0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<function spu_to_pyu.<locals>.reveal at 0x33e538430>,\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n SPUIOInfo(start_chunk_index=0, end_chunk_index=1, meta=b'\\x08\\x0b\\x18\\x01\"\\x03\\n\\x01\\x1e*\\x12semi2k.AShr<FM128>'),\n [b'\\x08\\xe0\\x03\\x1a\\xe0\\x03-\\x0e\\x8f\\xaf\\xe3P-\\xa1<\\xd7\\x9d;\\xce\\xf6'\n  b\"\\x97\\xdb\\xbd\\n\\xf0\\xf4\\xf7\\xf2\\x82\\xd3#\\xae\\x00p\\xd0*'\\xedf\\x15H\\xf6e}\"\n  b\"\\xcc\\xae2x2\\xb1\\xa7\\xca\\x128\\xb9-\\xfc\\xa0'\\xe7yTLL\\xe7dt\\xbf\\xd8\\xe6\\x1dY\"\n  b'\\xf0\\r\\xb7\\xa9\\xc7\\xf5\\xde\\x9d\\xef~\\n\\xeb\\x17\\x97\\xe1+\\xb9\\x96\\x1a:\\x825-`'\n  b\"\\xf6\\xe8\\x1b\\xa3\\xa5\\xca\\xdf\\x07\\xc9\\x1d\\xf5\\xee\\x14\\x02\\x1c\\x88W'k\\x03\"\n  b'\\x1ev\\x87\\x17\\x9c\\x0bp\\xa4\\xce\\x04\\xec+\\x9c\\xbd~\\xb6o2\\xc5\\xd7\\xc0\\x99\\xf4_'\n  b'\\xd8m\\xe8D7rM\\xa1\\xc0>\\x83\\xbej\\x1c\\xe5\\xdaI\\x89\\x80\\xe8\\x8f2\\xcc='\n  b'\\xed\\x1f\\xbeK\\x0b\\x02\\x9a\\xa8\\x0f\\xd8\\xcbp\\xd0cZz\\xf5\\xe2$\\xfd\\r}\\x96\\xf8'\n  b'\\xeb\\x88$(\\xd5x\\xb6{\\xce-\\x8c}\\x15*\\x18\\xb9f\\xe4\\xd0j\\x8b$1\\xd4'\n  b'\\x07\\xf5\\x8eS\\xe4(\\\\+\\xb0L\\x82\\xc6Y\\xd4\\xa7\\xa1l\\x89\\xe7\\xd0S\\x81\\xc7\\xbf'\n  b'D\\xd0\\x90\\xe7\\x9dN9}\\xaeB\\xe13\\r\\x84\\r\\xac\\xf4:\\xd7$\\xca\\xf4\\xcbD'\n  b'\\xcdO\\x9d\\xd1>\\xb6cw(\\xd1t\\xa6\\xcai\\x03:\\xd4PA&u\"Y\\xd3\\x1dG\"\\xf3\"\\xa4EE'\n  b'p]2\\xd2I\\x9b\\xb5<7{\\x7f\\xe5U\\xd8 l0\\xaf\\xc9_\\xf6Na\\xfa\\x1fy\\xdb('\n  b'\\x8cg\\x9c\\xf5\\xd8a\\x92x\\x87\\x10\\xa1\\xb7\\xcd\\x97M<\\rKp\\xc7\\xbe]aDUO\\x84\\xa0'\n  b'?\\x04\\xb6\\xcc\\xee,\\x99=GR\\xc6\\xdb\\xff\\x91\\n\\xe3\\xac_\\xb3<^\\xcc\\x04Q'\n  b'\\x05\\x95n \\x80b\\x80>\\xca\\xd7\\xac\\x98\\xa8\\x86\\xe4\\xfc\\x0f\\xf7\\xbf\\xda'\n  b'\\x08~[\\xc1*\\x1a!\\x85Gx\\xd6v:\\x0e\\x96\\xe3<\\xad1^\\x87\\x91\\x1eqS\\xcag,'\n  b'@\\x0e\\x16\\xee\\x00I\\xb9\\x1fauO\\x8f\"\\x03\\x06\\xeeF\\xa8pBB\\xcc\\xb2\\x91'\n  b'\\xe8\\xe6\\xa6\\xee\\x8f\\xf6\\x84L\\x95>\\xac\\xc9\\xe2\\x84Z.?\\x0e1\\xa6'\n  b'\\xe5\\x0f\\xc2\\x1f_:\\x99\\rC\\x0f3r\\xd0h8D\\xf1\\xb8\\xee\\xf4\\xeb\\xfe',\n  b'\\x08\\xe0\\x03\\x1a\\xe0\\x03W\\xf5pP\\x1c\\xaf\\xd2^\\xc3(b\\xc41\\th$\\x05\\xff'\n  b'\\x0f\\x0b\\x08\\r},\\xdcQ\\xff\\x8f/\\xd5\\xd8\\x12\\xb1\\xfd\\xb7\\t\\x9a\\x823Q\\xcd\\x87'\n  b'\\xcdNX5\\xed\\xc7\\x85\\xf5\\x02_\\xd8\\x18\\x86\\xab\\xb3\\xb3\\x18\\x9b\\x8b@'\n  b\"'\\x19\\xf1\\xa6\\x0f\\xf2HV8\\n!b\\x10\\x81\\xf5\\x14\\xe8h\\x1d\\xd4Fi\\xe5\\xc5\"\n  b'}\\xca\\xd2\\x9f\\t\\x17\\xe4\\\\Z5\\x0b\\xf86\\xe2\\n\\x11\\xeb\\xfd\\xe3w\\xa8\\xd8\\x94\\xfc'\n  b'\\xe1\\x89m\\xe8c\\xf4\\x8f[1\\xfb\\x13\\xd4cB\\x81I\\x90\\xcdX(?f\\x0b\\xa0'\n  b\"'\\x92\\x17\\xbb\\xc8\\x8d\\xb2^?\\xc1\\x8aA\\x95\\xe3\\x1a%\\xb6v\\x7f\\x17p\\xcd3\\xc2\"\n  b\"\\x12\\xe0\\x1f\\xb4\\xf4\\xfdeW\\xf0'4\\x8f/\\x9c\\xa5\\x85\\n\\x1d\\xd0\\x03\"\n  b'\\xf2\\x82i\\x07\\x14w\\xdb\\xd7*\\x87I\\x841\\xd2n\\x81\\xea\\xd5\\xe7F\\x99\\x1b/\\x95'\n  b't\\xdb\\xce+\\xf8\\n:\\x83\\x1b\\xd7\\xa3\\xd4O\\xb3}9\\xa6+X^\\x93v\\x1a/\\xac~8@'\n  b'\\xbb/o\\x18b\\xb1\\xc6\\x82Q\\xbd \\xcc\\xf2{\\xf2S\\x0b\\xc5(\\xdb5\\x0b4\\xbb2\\xb0f.'\n  b'\\xc1I\\x9c\\x88\\xd7.\\x8bY5\\x96\\xfc\\xc5+\\xaf\\xbf\\xd9\\x8a\\xdd\\xa6,'\n  b'\\xe2\\xb8\\xdd\\x0c\\xdd[\\xba\\xba\\x8f\\xa2\\xd2-\\xb6dJ\\xc3\\xc8\\x84\\x80\\x1a'\n  b\"\\xaa'\\xdf\\x93\\xcfP7\\xa0\\t\\xb1\\x9e\\x05\\xe0\\x86$\\xd7s\\x98c\\n'\\x9e1\\x89x\\xef^H\"\n  b'2h\\xb2\\xc3\\xf2\\xb4\\x8f8A\\xa24\\xc7\\xaa\\xb0{_\\xc0\\xfbI3\\x11\\xd3f\\xc2'\n  b'\\xb8\\xadG+\\x00n\\xf5\\x1cS\\xa0L\\xc3\\xa13\\xfb\\xae\\xfaj\\xc9\\xca}\\x9d\\x7f\\xc1'\n  b'5(SgWy\\x1b\\x03\\xf0\\x08T%\\xf7\\x81\\xa4>\\xd5\\xe5\\xdez\\xb8\\x87)\\x89'\n  b'\\xc5\\xf1V\\x1c\\xc3R\\xce\\xa1xn\\xe1\\x8e\\xac5\\x98\\xd3\\xbf\\xf1\\xb9\\x11'\n  b'\\xff\\xb6F\\xe0\\x9e\\x8a\\xb0p\\xdd\\xfc\\xf9\\x11\\xb9W~\\xbd\\xbd3Mn\\x17\\x19Y\\x11'\n  b'p\\t{\\xb3j\\xc1z6\\x1d{\\xa5\\xd1\\xc0\\xf1\\xceY\\x1a\\xf0=\\xe0\\xa0\\xc5s\\xf2'\n  b'\\xbc\\xf0\\xcc\\x8d/\\x97\\xc7\\xbb\\x0eG\\x11\\x0b\\x14\\x01'],\n SPUValueMeta(shape=(30,), dtype=<class 'numpy.float32'>, vtype=1, protocol=2, field=3, fxp_fraction_bits=0))",
      "values": [
        { "ref": "python/id/0x33e538430+1" },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "python/id/0x33e534550+1" },
        { "ref": "otel/span/0x0/transient/id/0x33e60ce40" },
        { "ref": "python/id/0x33e534e80+1" }
      ]
    },
    "python/id/0x33e538430+1": {
      "ref": "python/id/0x33e538430+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x560ebf8faaef3e37",
      "module": "secretflow.device.kernels.spu",
      "name": "spu_to_pyu.<locals>.reveal",
      "signature": {
        "parameters": [
          { "name": "conf", "kind": 1, "annotation": "typing.Any" },
          { "name": "world_size", "kind": 1, "annotation": "typing.Any" },
          { "name": "io_info", "kind": 1, "annotation": "typing.Any" },
          { "name": "share_chunks", "kind": 1, "annotation": "typing.Any" },
          { "name": "meta", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/spu.py",
      "firstlineno": 41,
      "source": "def reveal(conf, world_size, io_info, share_chunks, meta):\n    io = SPUIO(conf, world_size)\n    return io.reconstruct(share_chunks, io_info, meta)\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33e60ce40": {
      "ref": "otel/span/0x0/transient/id/0x33e60ce40",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[b'\\x08\\xe0\\x03\\x1a\\xe0\\x03-\\x0e\\x8f\\xaf\\xe3P-\\xa1<\\xd7\\x9d;\\xce\\xf6'\n b\"\\x97\\xdb\\xbd\\n\\xf0\\xf4\\xf7\\xf2\\x82\\xd3#\\xae\\x00p\\xd0*'\\xedf\\x15H\\xf6e}\"\n b\"\\xcc\\xae2x2\\xb1\\xa7\\xca\\x128\\xb9-\\xfc\\xa0'\\xe7yTLL\\xe7dt\\xbf\\xd8\\xe6\\x1dY\"\n b'\\xf0\\r\\xb7\\xa9\\xc7\\xf5\\xde\\x9d\\xef~\\n\\xeb\\x17\\x97\\xe1+\\xb9\\x96\\x1a:\\x825-`'\n b\"\\xf6\\xe8\\x1b\\xa3\\xa5\\xca\\xdf\\x07\\xc9\\x1d\\xf5\\xee\\x14\\x02\\x1c\\x88W'k\\x03\"\n b'\\x1ev\\x87\\x17\\x9c\\x0bp\\xa4\\xce\\x04\\xec+\\x9c\\xbd~\\xb6o2\\xc5\\xd7\\xc0\\x99\\xf4_'\n b'\\xd8m\\xe8D7rM\\xa1\\xc0>\\x83\\xbej\\x1c\\xe5\\xdaI\\x89\\x80\\xe8\\x8f2\\xcc='\n b'\\xed\\x1f\\xbeK\\x0b\\x02\\x9a\\xa8\\x0f\\xd8\\xcbp\\xd0cZz\\xf5\\xe2$\\xfd\\r}\\x96\\xf8'\n b'\\xeb\\x88$(\\xd5x\\xb6{\\xce-\\x8c}\\x15*\\x18\\xb9f\\xe4\\xd0j\\x8b$1\\xd4\\x07\\xf5\\x8eS'\n b'\\xe4(\\\\+\\xb0L\\x82\\xc6Y\\xd4\\xa7\\xa1l\\x89\\xe7\\xd0S\\x81\\xc7\\xbfD\\xd0\\x90\\xe7'\n b'\\x9dN9}\\xaeB\\xe13\\r\\x84\\r\\xac\\xf4:\\xd7$\\xca\\xf4\\xcbD\\xcdO\\x9d\\xd1>\\xb6cw'\n b'(\\xd1t\\xa6\\xcai\\x03:\\xd4PA&u\"Y\\xd3\\x1dG\"\\xf3\"\\xa4EEp]2\\xd2I\\x9b\\xb5<'\n b'7{\\x7f\\xe5U\\xd8 l0\\xaf\\xc9_\\xf6Na\\xfa\\x1fy\\xdb(\\x8cg\\x9c\\xf5\\xd8a\\x92x'\n b'\\x87\\x10\\xa1\\xb7\\xcd\\x97M<\\rKp\\xc7\\xbe]aDUO\\x84\\xa0?\\x04\\xb6\\xcc\\xee,\\x99='\n b'GR\\xc6\\xdb\\xff\\x91\\n\\xe3\\xac_\\xb3<^\\xcc\\x04Q\\x05\\x95n \\x80b\\x80>'\n b'\\xca\\xd7\\xac\\x98\\xa8\\x86\\xe4\\xfc\\x0f\\xf7\\xbf\\xda\\x08~[\\xc1*\\x1a!\\x85Gx\\xd6v'\n b':\\x0e\\x96\\xe3<\\xad1^\\x87\\x91\\x1eqS\\xcag,@\\x0e\\x16\\xee\\x00I\\xb9\\x1fauO\\x8f'\n b'\"\\x03\\x06\\xeeF\\xa8pBB\\xcc\\xb2\\x91\\xe8\\xe6\\xa6\\xee\\x8f\\xf6\\x84L\\x95>\\xac\\xc9'\n b'\\xe2\\x84Z.?\\x0e1\\xa6\\xe5\\x0f\\xc2\\x1f_:\\x99\\rC\\x0f3r\\xd0h8D\\xf1\\xb8\\xee\\xf4'\n b'\\xeb\\xfe',\n b'\\x08\\xe0\\x03\\x1a\\xe0\\x03W\\xf5pP\\x1c\\xaf\\xd2^\\xc3(b\\xc41\\th$\\x05\\xff'\n b'\\x0f\\x0b\\x08\\r},\\xdcQ\\xff\\x8f/\\xd5\\xd8\\x12\\xb1\\xfd\\xb7\\t\\x9a\\x823Q\\xcd\\x87'\n b'\\xcdNX5\\xed\\xc7\\x85\\xf5\\x02_\\xd8\\x18\\x86\\xab\\xb3\\xb3\\x18\\x9b\\x8b@'\n b\"'\\x19\\xf1\\xa6\\x0f\\xf2HV8\\n!b\\x10\\x81\\xf5\\x14\\xe8h\\x1d\\xd4Fi\\xe5\\xc5\"\n b'}\\xca\\xd2\\x9f\\t\\x17\\xe4\\\\Z5\\x0b\\xf86\\xe2\\n\\x11\\xeb\\xfd\\xe3w\\xa8\\xd8\\x94\\xfc'\n b\"\\xe1\\x89m\\xe8c\\xf4\\x8f[1\\xfb\\x13\\xd4cB\\x81I\\x90\\xcdX(?f\\x0b\\xa0'\\x92\\x17\\xbb\"\n b'\\xc8\\x8d\\xb2^?\\xc1\\x8aA\\x95\\xe3\\x1a%\\xb6v\\x7f\\x17p\\xcd3\\xc2\\x12\\xe0\\x1f\\xb4'\n b\"\\xf4\\xfdeW\\xf0'4\\x8f/\\x9c\\xa5\\x85\\n\\x1d\\xd0\\x03\\xf2\\x82i\\x07\\x14w\\xdb\\xd7\"\n b'*\\x87I\\x841\\xd2n\\x81\\xea\\xd5\\xe7F\\x99\\x1b/\\x95t\\xdb\\xce+\\xf8\\n:\\x83'\n b'\\x1b\\xd7\\xa3\\xd4O\\xb3}9\\xa6+X^\\x93v\\x1a/\\xac~8@\\xbb/o\\x18b\\xb1\\xc6\\x82'\n b'Q\\xbd \\xcc\\xf2{\\xf2S\\x0b\\xc5(\\xdb5\\x0b4\\xbb2\\xb0f.\\xc1I\\x9c\\x88\\xd7.\\x8bY'\n b'5\\x96\\xfc\\xc5+\\xaf\\xbf\\xd9\\x8a\\xdd\\xa6,\\xe2\\xb8\\xdd\\x0c\\xdd[\\xba\\xba'\n b\"\\x8f\\xa2\\xd2-\\xb6dJ\\xc3\\xc8\\x84\\x80\\x1a\\xaa'\\xdf\\x93\\xcfP7\\xa0\\t\\xb1\\x9e\\x05\"\n b\"\\xe0\\x86$\\xd7s\\x98c\\n'\\x9e1\\x89x\\xef^H2h\\xb2\\xc3\\xf2\\xb4\\x8f8A\\xa24\\xc7\"\n b'\\xaa\\xb0{_\\xc0\\xfbI3\\x11\\xd3f\\xc2\\xb8\\xadG+\\x00n\\xf5\\x1cS\\xa0L\\xc3'\n b'\\xa13\\xfb\\xae\\xfaj\\xc9\\xca}\\x9d\\x7f\\xc15(SgWy\\x1b\\x03\\xf0\\x08T%\\xf7\\x81\\xa4>'\n b'\\xd5\\xe5\\xdez\\xb8\\x87)\\x89\\xc5\\xf1V\\x1c\\xc3R\\xce\\xa1xn\\xe1\\x8e\\xac5\\x98\\xd3'\n b'\\xbf\\xf1\\xb9\\x11\\xff\\xb6F\\xe0\\x9e\\x8a\\xb0p\\xdd\\xfc\\xf9\\x11\\xb9W~\\xbd\\xbd3Mn'\n b'\\x17\\x19Y\\x11p\\t{\\xb3j\\xc1z6\\x1d{\\xa5\\xd1\\xc0\\xf1\\xceY\\x1a\\xf0=\\xe0'\n b'\\xa0\\xc5s\\xf2\\xbc\\xf0\\xcc\\x8d/\\x97\\xc7\\xbb\\x0eG\\x11\\x0b\\x14\\x01']",
      "values": [
        { "ref": "otel/span/0x0/transient/id/0x2afee7090" },
        { "ref": "otel/span/0x0/transient/id/0x2afec5110" }
      ]
    },
    "otel/span/0x0/transient/id/0x33e556c80": {
      "ref": "otel/span/0x0/transient/id/0x33e556c80",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33e56f200": {
      "ref": "otel/span/0x0/transient/id/0x33e56f200",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 1, 'resources': {'bob': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33e647140" }
      }
    },
    "otel/span/0x0/transient/id/0x33e647140": {
      "ref": "otel/span/0x0/transient/id/0x33e647140",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'bob': 1}",
      "values": { "bob": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33e5289d0+1": {
      "ref": "python/id/0x33e5289d0+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33e5289d0>"
    },
    "ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e539950": {
      "ref": "otel/span/0x0/transient/id/0x33e539950",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(protocol: SEMI2K\nfield: FM128\n,\n 2,\n ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000),\n [ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000),\n  ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000)],\n ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000))",
      "values": [
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        {
          "ref": "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000)"
        },
        { "ref": "otel/span/0x0/transient/id/0x33e66abc0" },
        {
          "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e5d6c80": {
      "ref": "otel/span/0x0/transient/id/0x33e5d6c80",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33e669f40": {
      "ref": "otel/span/0x0/transient/id/0x33e669f40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'weights': <secretflow.device.device.pyu.PYUObject object at 0x33e534550>}",
      "values": {
        "weights": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)"
        }
      }
    },
    "python/id/0x17b152ca0+1": {
      "ref": "python/id/0x17b152ca0+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x665914dc83366bc6",
      "module": "secretflow.device.kernels.spu",
      "name": "spu_to_pyu",
      "signature": {
        "parameters": [
          {
            "name": "self",
            "kind": 1,
            "annotation": "secretflow.device.device.spu.SPUObject"
          },
          {
            "name": "pyu",
            "kind": 1,
            "annotation": "secretflow.device.device.base.Device"
          },
          {
            "name": "config",
            "kind": 1,
            "annotation": "secretflow.device.device.heu.HEUMoveConfig"
          }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/spu.py",
      "firstlineno": 35,
      "source": "@register_to(DeviceType.SPU, DeviceType.PYU)\ndef spu_to_pyu(self: SPUObject, pyu: Device, config: HEUMoveConfig = None):\n    assert isinstance(pyu, PYU), f'Expect a PYU but got {type(pyu)}.'\n    if config is None:\n        config = HEUMoveConfig()\n\n    def reveal(conf, world_size, io_info, share_chunks, meta):\n        io = SPUIO(conf, world_size)\n        return io.reconstruct(share_chunks, io_info, meta)\n\n    return pyu(reveal)(\n        self.device.conf,\n        self.device.world_size,\n        *self.device.outfeed_shares(self.shares_name),\n        self.meta,\n    )\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/frame/0x2afec1e60/line/35": {
      "ref": "otel/span/0x0/transient/frame/0x2afec1e60/line/35",
      "kind": "frame",
      "type": "builtins.frame",
      "local_vars": {
        "self": {
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)"
        },
        "pyu": { "ref": "secretflow/location/PYU:bob" },
        "config": { "ref": "python/none" }
      },
      "global_vars": {
        "PYU": { "ref": "python/id/0x17b02a4e0+1" },
        "HEUMoveConfig": { "ref": "python/id/0x12f283530+1" }
      },
      "outer_frames": [
        { "ref": "otel/span/0x0/transient/frame/0x2afec1e60/line/35" },
        { "ref": "otel/span/0x0/transient/frame/0x17b5aca00/line/80" },
        { "ref": "otel/span/0x0/transient/frame/0x17b5bbb50/line/111" },
        { "ref": "otel/span/0x0/transient/frame/0x17b5c71a0/line/70" },
        { "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/30" },
        { "ref": "otel/span/0x0/transient/frame/0x33a8379f0/line/42" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661bc0/line/3508" },
        { "ref": "otel/span/0x0/transient/frame/0x11c6632d0/line/3448" },
        { "ref": "otel/span/0x0/transient/frame/0x105ba37e0/line/3269" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661df0/line/129" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660400/line/3064" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660c50/line/3009" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661870/line/549" },
        { "ref": "otel/span/0x0/transient/frame/0x11c626890/line/426" },
        { "ref": "otel/span/0x0/transient/frame/0x11c64b770/line/758" },
        { "ref": "otel/span/0x0/transient/frame/0x14c621df0/line/418" },
        { "ref": "otel/span/0x0/transient/frame/0x11812c420/line/513" },
        { "ref": "otel/span/0x0/transient/frame/0x118129210/line/524" },
        { "ref": "otel/span/0x0/transient/frame/0x14d077200/line/81" },
        { "ref": "otel/span/0x0/transient/frame/0x14d076fd0/line/1859" },
        { "ref": "otel/span/0x0/transient/frame/0x118113d60/line/570" },
        { "ref": "otel/span/0x0/transient/frame/0x11812e380/line/195" },
        { "ref": "otel/span/0x0/transient/frame/0x104e89a40/line/737" },
        { "ref": "otel/span/0x0/transient/frame/0x14d022260/line/1053" },
        { "ref": "otel/span/0x0/transient/frame/0x104ddc230/line/17" },
        { "ref": "otel/span/0x0/transient/frame/0x12c618b00/line/87" },
        { "ref": "otel/span/0x0/transient/frame/0x12c614a80/line/194" }
      ],
      "module": "secretflow.device.kernels.spu",
      "func": "spu_to_pyu"
    },
    "python/id/0x17b02a4e0+1": {
      "ref": "python/id/0x17b02a4e0+1",
      "kind": "object",
      "type": "abc.ABCMeta",
      "snapshot": "<class 'secretflow.device.device.pyu.PYU'>"
    },
    "python/id/0x12f283530+1": {
      "ref": "python/id/0x12f283530+1",
      "kind": "object",
      "type": "builtins.type",
      "snapshot": "<class 'secretflow.device.device.heu.HEUMoveConfig'>"
    },
    "otel/span/0x0/transient/id/0x33e66e140": {
      "ref": "otel/span/0x0/transient/id/0x33e66e140",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'weights': <secretflow.device.device.pyu.PYUObject object at 0x33e534550>}",
      "values": {
        "weights": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)"
        }
      }
    },
    "otel/span/0x0/transient/id/0x33e20c250": {
      "ref": "otel/span/0x0/transient/id/0x33e20c250",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000004000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e6700c0": {
      "ref": "otel/span/0x0/transient/id/0x33e6700c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/30": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/30",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 30,
      "func": "main",
      "code": "bias = bias.to(bob)"
    },
    "ray/objectref/ObjectRef(594c3bb38e594811af23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(594c3bb38e594811af23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(594c3bb38e594811af23b462bfe8c365427a357b0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e60c9c0": {
      "ref": "otel/span/0x0/transient/id/0x33e60c9c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'shares_chunk_count': 1}",
      "values": {
        "shares_chunk_count": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" }
      }
    },
    "otel/span/0x0/transient/id/0x33e618e20": {
      "ref": "otel/span/0x0/transient/id/0x33e618e20",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000004000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e689100": {
      "ref": "otel/span/0x0/transient/id/0x33e689100",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'remote_ret': [ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000001000000),\n                ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000)]}",
      "values": { "remote_ret": { "ref": "otel/span/0x0/transient/id/0x33e592800" } }
    },
    "ray/objectref/ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000001000000)"
    },
    "ray/objectref/ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000)": {
      "ref": "ray/objectref/ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000)"
    },
    "otel/span/0x0/transient/id/0x33de84490": {
      "ref": "otel/span/0x0/transient/id/0x33de84490",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000004000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e6892c0": {
      "ref": "otel/span/0x0/transient/id/0x33e6892c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33e6760c0": {
      "ref": "otel/span/0x0/transient/id/0x33e6760c0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000),\n ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000)": {
      "ref": "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000)"
    },
    "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000)": {
      "ref": "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000)"
    },
    "otel/span/0x0/transient/id/0x33e689a40": {
      "ref": "otel/span/0x0/transient/id/0x33e689a40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'remote_ret': [ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000),\n                ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000)]}",
      "values": { "remote_ret": { "ref": "otel/span/0x0/transient/id/0x33e6760c0" } }
    },
    "otel/span/0x0/transient/id/0x33e557140": {
      "ref": "otel/span/0x0/transient/id/0x33e557140",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000004000000),\n ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000004000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000004000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(a631fe8d231813bfe11e0e6b35627ffff00336110100000004000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e557740": {
      "ref": "otel/span/0x0/transient/id/0x33e557740",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000),\n [ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000),\n  ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000)])",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000)"
        },
        { "ref": "otel/span/0x0/transient/id/0x33e66abc0" }
      ]
    },
    "otel/span/0x0/transient/id/0x33e66abc0": {
      "ref": "otel/span/0x0/transient/id/0x33e66abc0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000),\n ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e60ca00": {
      "ref": "otel/span/0x0/transient/id/0x33e60ca00",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000),\n ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000),\n ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000),\n ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33c671b40": {
      "ref": "otel/span/0x0/transient/id/0x33c671b40",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[SPUIOInfo(start_chunk_index=0, end_chunk_index=1, meta=b'\\x08\\x0b\\x18\\x01*\\x12semi2k.AShr<FM128>'),\n b'\\x08\\x10\\x1a\\x10z\\xf5\\xf4s\\xb7Kw\\x95\\x1f\\xd7\\x82]\\xe1\\x18\\xbe5',\n b'\\x08\\x10\\x1a\\x10p\\x11\\x18\\x8cH\\xb4\\x88j\\xe0(}\\xa2\\x1e\\xe7A\\xca',\n SPUValueMeta(shape=(), dtype=<class 'numpy.float32'>, vtype=1, protocol=2, field=3, fxp_fraction_bits=0)]",
      "values": [
        { "ref": "python/id/0x33e640640+1" },
        { "ref": "otel/span/0x0/transient/id/0x33e68f730" },
        { "ref": "otel/span/0x0/transient/id/0x33e68f530" },
        { "ref": "python/id/0x33e640400+1" }
      ]
    },
    "python/id/0x33e640640+1": {
      "ref": "python/id/0x33e640640+1",
      "kind": "dict",
      "type": "secretflow.device.device.spu.SPUIOInfo",
      "snapshot": "SPUIOInfo(start_chunk_index=0, end_chunk_index=1, meta=b'\\x08\\x0b\\x18\\x01*\\x12semi2k.AShr<FM128>')",
      "values": {
        "start_chunk_index": { "ref": "otel/span/0x0/transient/id/0x106d0bb40" },
        "end_chunk_index": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "meta": { "ref": "otel/span/0x0/transient/id/0x33e68f570" }
      }
    },
    "otel/span/0x0/transient/id/0x33e68f570": {
      "ref": "otel/span/0x0/transient/id/0x33e68f570",
      "kind": "object",
      "type": "builtins.bytes",
      "snapshot": "b'\\x08\\x0b\\x18\\x01*\\x12semi2k.AShr<FM128>'"
    },
    "otel/span/0x0/transient/id/0x33e68f730": {
      "ref": "otel/span/0x0/transient/id/0x33e68f730",
      "kind": "object",
      "type": "builtins.bytes",
      "snapshot": "b'\\x08\\x10\\x1a\\x10z\\xf5\\xf4s\\xb7Kw\\x95\\x1f\\xd7\\x82]\\xe1\\x18\\xbe5'"
    },
    "otel/span/0x0/transient/id/0x33e68f530": {
      "ref": "otel/span/0x0/transient/id/0x33e68f530",
      "kind": "object",
      "type": "builtins.bytes",
      "snapshot": "b'\\x08\\x10\\x1a\\x10p\\x11\\x18\\x8cH\\xb4\\x88j\\xe0(}\\xa2\\x1e\\xe7A\\xca'"
    },
    "python/id/0x33e640400+1": {
      "ref": "python/id/0x33e640400+1",
      "kind": "dict",
      "type": "secretflow.device.device.spu.SPUValueMeta",
      "snapshot": "SPUValueMeta(shape=(), dtype=<class 'numpy.float32'>, vtype=1, protocol=2, field=3, fxp_fraction_bits=0)",
      "values": {
        "shape": { "ref": "otel/span/0x0/transient/id/0x104c88040" },
        "dtype": { "ref": "python/id/0x11957e2a8+1" },
        "vtype": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "protocol": { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        "field": { "ref": "otel/span/0x0/transient/id/0x106d0bba0" },
        "fxp_fraction_bits": { "ref": "otel/span/0x0/transient/id/0x106d0bb40" }
      }
    },
    "otel/span/0x0/transient/id/0x33e60c980": {
      "ref": "otel/span/0x0/transient/id/0x33e60c980",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [SPUIOInfo(start_chunk_index=0, end_chunk_index=1, meta=b'\\x08\\x0b\\x18\\x01*\\x12semi2k.AShr<FM128>'),\n                 b'\\x08\\x10\\x1a\\x10z\\xf5\\xf4s\\xb7Kw\\x95\\x1f\\xd7\\x82]'\n                 b'\\xe1\\x18\\xbe5',\n                 b'\\x08\\x10\\x1a\\x10p\\x11\\x18\\x8cH\\xb4\\x88j\\xe0(}\\xa2'\n                 b'\\x1e\\xe7A\\xca',\n                 SPUValueMeta(shape=(), dtype=<class 'numpy.float32'>, vtype=1, protocol=2, field=3, fxp_fraction_bits=0)]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33c671b40" } }
    },
    "otel/span/0x0/transient/id/0x33e69c520": {
      "ref": "otel/span/0x0/transient/id/0x33e69c520",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<function spu_to_pyu.<locals>.reveal at 0x33e5e2040>,\n protocol: SEMI2K\nfield: FM128\n,\n 2,\n SPUIOInfo(start_chunk_index=0, end_chunk_index=1, meta=b'\\x08\\x0b\\x18\\x01*\\x12semi2k.AShr<FM128>'),\n [b'\\x08\\x10\\x1a\\x10z\\xf5\\xf4s\\xb7Kw\\x95\\x1f\\xd7\\x82]\\xe1\\x18\\xbe5',\n  b'\\x08\\x10\\x1a\\x10p\\x11\\x18\\x8cH\\xb4\\x88j\\xe0(}\\xa2\\x1e\\xe7A\\xca'],\n SPUValueMeta(shape=(), dtype=<class 'numpy.float32'>, vtype=1, protocol=2, field=3, fxp_fraction_bits=0))",
      "values": [
        { "ref": "python/id/0x33e5e2040+1" },
        { "ref": "python/id/0x17ee82ac0+1" },
        { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        { "ref": "python/id/0x33e640640+1" },
        { "ref": "otel/span/0x0/transient/id/0x33e6b1d80" },
        { "ref": "python/id/0x33e640400+1" }
      ]
    },
    "python/id/0x33e5e2040+1": {
      "ref": "python/id/0x33e5e2040+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x560ebf8faaef3e37",
      "module": "secretflow.device.kernels.spu",
      "name": "spu_to_pyu.<locals>.reveal",
      "signature": {
        "parameters": [
          { "name": "conf", "kind": 1, "annotation": "typing.Any" },
          { "name": "world_size", "kind": 1, "annotation": "typing.Any" },
          { "name": "io_info", "kind": 1, "annotation": "typing.Any" },
          { "name": "share_chunks", "kind": 1, "annotation": "typing.Any" },
          { "name": "meta", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/kernels/spu.py",
      "firstlineno": 41,
      "source": "def reveal(conf, world_size, io_info, share_chunks, meta):\n    io = SPUIO(conf, world_size)\n    return io.reconstruct(share_chunks, io_info, meta)\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33e6b1d80": {
      "ref": "otel/span/0x0/transient/id/0x33e6b1d80",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[b'\\x08\\x10\\x1a\\x10z\\xf5\\xf4s\\xb7Kw\\x95\\x1f\\xd7\\x82]\\xe1\\x18\\xbe5',\n b'\\x08\\x10\\x1a\\x10p\\x11\\x18\\x8cH\\xb4\\x88j\\xe0(}\\xa2\\x1e\\xe7A\\xca']",
      "values": [
        { "ref": "otel/span/0x0/transient/id/0x33e68f730" },
        { "ref": "otel/span/0x0/transient/id/0x33e68f530" }
      ]
    },
    "otel/span/0x0/transient/id/0x33e68f180": {
      "ref": "otel/span/0x0/transient/id/0x33e68f180",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33e60c200": {
      "ref": "otel/span/0x0/transient/id/0x33e60c200",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 1, 'resources': {'bob': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33e68f200" }
      }
    },
    "otel/span/0x0/transient/id/0x33e68f200": {
      "ref": "otel/span/0x0/transient/id/0x33e68f200",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'bob': 1}",
      "values": { "bob": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33e256ac0+1": {
      "ref": "python/id/0x33e256ac0+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33e256ac0>"
    },
    "ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e5a0540": {
      "ref": "otel/span/0x0/transient/id/0x33e5a0540",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33e60cc80": {
      "ref": "otel/span/0x0/transient/id/0x33e60cc80",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'bias': <secretflow.device.device.pyu.PYUObject object at 0x33e671be0>}",
      "values": {
        "bias": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)"
        }
      }
    },
    "otel/span/0x0/transient/id/0x33e714a40": {
      "ref": "otel/span/0x0/transient/id/0x33e714a40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'rand_key': 42}",
      "values": { "rand_key": { "ref": "otel/span/0x0/transient/id/0x106d0c080" } }
    },
    "otel/span/0x0/transient/id/0x33e545800": {
      "ref": "otel/span/0x0/transient/id/0x33e545800",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[]",
      "values": []
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/31": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/31",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 31,
      "func": "main",
      "code": "x_test, y_test = bob(load_dataset_for_testing, num_returns=2)(rand_key=42)"
    },
    "otel/span/0x0/transient/id/0x33e6630c0": {
      "ref": "otel/span/0x0/transient/id/0x33e6630c0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[]",
      "values": []
    },
    "otel/span/0x0/transient/id/0x33e68b6c0": {
      "ref": "otel/span/0x0/transient/id/0x33e68b6c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': []}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33e6630c0" } }
    },
    "otel/span/0x0/transient/id/0x33e215c70": {
      "ref": "otel/span/0x0/transient/id/0x33e215c70",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<function load_dataset_for_testing at 0x33b825430>,)",
      "values": [{ "ref": "python/id/0x33b825430+1" }]
    },
    "python/id/0x33b825430+1": {
      "ref": "python/id/0x33b825430+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x57a057e6f55c10c4",
      "module": "__main__",
      "name": "load_dataset_for_testing",
      "signature": {
        "parameters": [{ "name": "rand_key", "kind": 1, "annotation": "builtins.int" }],
        "return_annotation": "typing.Any"
      },
      "filename": "Cell In[4]",
      "firstlineno": 21,
      "source": "def load_dataset_for_testing(rand_key: int):\n    x, y = load_breast_cancer(return_X_y=True)\n    x = (x - np.min(x)) / (np.max(x) - np.min(x))\n    x_train, x_test, y_train, y_test = train_test_split(\n        x,\n        y,\n        test_size=0.2,\n        random_state=rand_key,\n    )\n    return x_test, y_test\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33e654a80": {
      "ref": "otel/span/0x0/transient/id/0x33e654a80",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'rand_key': 42}",
      "values": { "rand_key": { "ref": "otel/span/0x0/transient/id/0x106d0c080" } }
    },
    "otel/span/0x0/transient/id/0x33e691680": {
      "ref": "otel/span/0x0/transient/id/0x33e691680",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 2, 'resources': {'bob': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb80" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33e664800" }
      }
    },
    "otel/span/0x0/transient/id/0x33e664800": {
      "ref": "otel/span/0x0/transient/id/0x33e664800",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'bob': 1}",
      "values": { "bob": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33e525eb0+1": {
      "ref": "python/id/0x33e525eb0+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33e525eb0>"
    },
    "otel/span/0x0/transient/id/0x33e654980": {
      "ref": "otel/span/0x0/transient/id/0x33e654980",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000),\n ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)"
    },
    "ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)": {
      "ref": "ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)"
    },
    "otel/span/0x0/transient/id/0x33e71fdc0": {
      "ref": "otel/span/0x0/transient/id/0x33e71fdc0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[<secretflow.device.device.pyu.PYUObject object at 0x33e28cd90>,\n <secretflow.device.device.pyu.PYUObject object at 0x33e205bb0>]",
      "values": [
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)"
        }
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33e71f880": {
      "ref": "otel/span/0x0/transient/id/0x33e71f880",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'x_test': <secretflow.device.device.pyu.PYUObject object at 0x33e28cd90>,\n 'y_test': <secretflow.device.device.pyu.PYUObject object at 0x33e205bb0>}",
      "values": {
        "x_test": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)"
        },
        "y_test": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)"
        }
      }
    },
    "otel/span/0x0/transient/id/0x33e710540": {
      "ref": "otel/span/0x0/transient/id/0x33e710540",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000),\n ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000),\n ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000),\n ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)"
        }
      ]
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/33": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/33",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 33,
      "func": "main",
      "code": "auc = reveal(bob(validate_model)(weights, bias, x_test, y_test))"
    },
    "otel/span/0x0/transient/id/0x33e66e5c0": {
      "ref": "otel/span/0x0/transient/id/0x33e66e5c0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[array([ 1.3411045e-05,  3.7223101e-05,  7.2821975e-05, -8.4212422e-04,\n        2.0861626e-07, -2.9802322e-08, -3.2782555e-07, -1.7881393e-07,\n        4.3213367e-07,  1.9371510e-07, -5.2154064e-07,  3.6358833e-06,\n       -3.9041042e-06, -1.5723705e-04,  1.4901161e-08,  1.4901161e-08,\n        4.4703484e-08,  0.0000000e+00,  5.9604645e-08,  0.0000000e+00,\n        6.7204237e-06,  4.4181943e-05,  2.6896596e-05, -2.0324141e-03,\n        2.8312206e-07, -2.9802322e-07, -7.3015690e-07, -2.6822090e-07,\n        5.6624413e-07,  1.7881393e-07], dtype=float32),\n array(0.01272169, dtype=float32),\n array([[2.93135872e-03, 4.37235543e-03, 1.90620592e-02, ...,\n        2.38598966e-05, 7.08509638e-05, 2.05688764e-05],\n       [4.45228021e-03, 5.00940291e-03, 2.90550071e-02, ...,\n        4.20545369e-05, 5.99670898e-05, 1.54889516e-05],\n       [3.63422661e-03, 4.57921956e-03, 2.39069111e-02, ...,\n        3.55900329e-05, 6.66901740e-05, 1.88504937e-05],\n       ...,\n       [2.70803949e-03, 3.50963799e-03, 1.73648331e-02, ...,\n        2.25858016e-05, 6.26234133e-05, 1.83568406e-05],\n       [3.34273625e-03, 6.54677950e-03, 2.17559944e-02, ...,\n        1.93206394e-05, 4.44287729e-05, 1.83262811e-05],\n       [4.87306065e-03, 7.31546780e-03, 3.18993888e-02, ...,\n        3.89985896e-05, 6.74188999e-05, 1.93182887e-05]]),\n array([1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1,\n       0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n       0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0,\n       1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1,\n       0, 1, 1, 0])]",
      "values": [
        { "ref": "python/id/0x33e630690+1" },
        { "ref": "python/id/0x33e52cdb0+1" },
        { "ref": "python/id/0x33e69ce10+1" },
        { "ref": "python/id/0x33e69cc90+1" }
      ]
    },
    "python/id/0x33e630690+1": {
      "ref": "python/id/0x33e630690+1",
      "kind": "object",
      "type": "numpy.ndarray",
      "snapshot": "array([ 1.3411045e-05,  3.7223101e-05,  7.2821975e-05, -8.4212422e-04,\n        2.0861626e-07, -2.9802322e-08, -3.2782555e-07, -1.7881393e-07,\n        4.3213367e-07,  1.9371510e-07, -5.2154064e-07,  3.6358833e-06,\n       -3.9041042e-06, -1.5723705e-04,  1.4901161e-08,  1.4901161e-08,\n        4.4703484e-08,  0.0000000e+00,  5.9604645e-08,  0.0000000e+00,\n        6.7204237e-06,  4.4181943e-05,  2.6896596e-05, -2.0324141e-03,\n        2.8312206e-07, -2.9802322e-07, -7.3015690e-07, -2.6822090e-07,\n        5.6624413e-07,  1.7881393e-07], dtype=float32)"
    },
    "python/id/0x33e52cdb0+1": {
      "ref": "python/id/0x33e52cdb0+1",
      "kind": "object",
      "type": "numpy.ndarray",
      "snapshot": "array(0.01272169, dtype=float32)"
    },
    "python/id/0x33e69ce10+1": {
      "ref": "python/id/0x33e69ce10+1",
      "kind": "object",
      "type": "numpy.ndarray",
      "snapshot": "array([[2.93135872e-03, 4.37235543e-03, 1.90620592e-02, ...,\n        2.38598966e-05, 7.08509638e-05, 2.05688764e-05],\n       [4.45228021e-03, 5.00940291e-03, 2.90550071e-02, ...,\n        4.20545369e-05, 5.99670898e-05, 1.54889516e-05],\n       [3.63422661e-03, 4.57921956e-03, 2.39069111e-02, ...,\n        3.55900329e-05, 6.66901740e-05, 1.88504937e-05],\n       ...,\n       [2.70803949e-03, 3.50963799e-03, 1.73648331e-02, ...,\n        2.25858016e-05, 6.26234133e-05, 1.83568406e-05],\n       [3.34273625e-03, 6.54677950e-03, 2.17559944e-02, ...,\n        1.93206394e-05, 4.44287729e-05, 1.83262811e-05],\n       [4.87306065e-03, 7.31546780e-03, 3.18993888e-02, ...,\n        3.89985896e-05, 6.74188999e-05, 1.93182887e-05]])"
    },
    "python/id/0x33e69cc90+1": {
      "ref": "python/id/0x33e69cc90+1",
      "kind": "object",
      "type": "numpy.ndarray",
      "snapshot": "array([1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1,\n       0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n       0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0,\n       1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1,\n       0, 1, 1, 0])"
    },
    "otel/span/0x0/transient/id/0x33e5e5c40": {
      "ref": "otel/span/0x0/transient/id/0x33e5e5c40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'actual_vals': [array([ 1.3411045e-05,  3.7223101e-05,  7.2821975e-05, -8.4212422e-04,\n        2.0861626e-07, -2.9802322e-08, -3.2782555e-07, -1.7881393e-07,\n        4.3213367e-07,  1.9371510e-07, -5.2154064e-07,  3.6358833e-06,\n       -3.9041042e-06, -1.5723705e-04,  1.4901161e-08,  1.4901161e-08,\n        4.4703484e-08,  0.0000000e+00,  5.9604645e-08,  0.0000000e+00,\n        6.7204237e-06,  4.4181943e-05,  2.6896596e-05, -2.0324141e-03,\n        2.8312206e-07, -2.9802322e-07, -7.3015690e-07, -2.6822090e-07,\n        5.6624413e-07,  1.7881393e-07], dtype=float32),\n                 array(0.01272169, dtype=float32),\n                 array([[2.93135872e-03, 4.37235543e-03, 1.90620592e-02, ...,\n        2.38598966e-05, 7.08509638e-05, 2.05688764e-05],\n       [4.45228021e-03, 5.00940291e-03, 2.90550071e-02, ...,\n        4.20545369e-05, 5.99670898e-05, 1.54889516e-05],\n       [3.63422661e-03, 4.57921956e-03, 2.39069111e-02, ...,\n        3.55900329e-05, 6.66901740e-05, 1.88504937e-05],\n       ...,\n       [2.70803949e-03, 3.50963799e-03, 1.73648331e-02, ...,\n        2.25858016e-05, 6.26234133e-05, 1.83568406e-05],\n       [3.34273625e-03, 6.54677950e-03, 2.17559944e-02, ...,\n        1.93206394e-05, 4.44287729e-05, 1.83262811e-05],\n       [4.87306065e-03, 7.31546780e-03, 3.18993888e-02, ...,\n        3.89985896e-05, 6.74188999e-05, 1.93182887e-05]]),\n                 array([1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1,\n       0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n       0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0,\n       1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1,\n       0, 1, 1, 0])]}",
      "values": { "actual_vals": { "ref": "otel/span/0x0/transient/id/0x33e66e5c0" } }
    },
    "otel/span/0x0/transient/id/0x33de59860": {
      "ref": "otel/span/0x0/transient/id/0x33de59860",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<function validate_model at 0x33b827c10>,\n array([ 1.3411045e-05,  3.7223101e-05,  7.2821975e-05, -8.4212422e-04,\n        2.0861626e-07, -2.9802322e-08, -3.2782555e-07, -1.7881393e-07,\n        4.3213367e-07,  1.9371510e-07, -5.2154064e-07,  3.6358833e-06,\n       -3.9041042e-06, -1.5723705e-04,  1.4901161e-08,  1.4901161e-08,\n        4.4703484e-08,  0.0000000e+00,  5.9604645e-08,  0.0000000e+00,\n        6.7204237e-06,  4.4181943e-05,  2.6896596e-05, -2.0324141e-03,\n        2.8312206e-07, -2.9802322e-07, -7.3015690e-07, -2.6822090e-07,\n        5.6624413e-07,  1.7881393e-07], dtype=float32),\n array(0.01272169, dtype=float32),\n array([[2.93135872e-03, 4.37235543e-03, 1.90620592e-02, ...,\n        2.38598966e-05, 7.08509638e-05, 2.05688764e-05],\n       [4.45228021e-03, 5.00940291e-03, 2.90550071e-02, ...,\n        4.20545369e-05, 5.99670898e-05, 1.54889516e-05],\n       [3.63422661e-03, 4.57921956e-03, 2.39069111e-02, ...,\n        3.55900329e-05, 6.66901740e-05, 1.88504937e-05],\n       ...,\n       [2.70803949e-03, 3.50963799e-03, 1.73648331e-02, ...,\n        2.25858016e-05, 6.26234133e-05, 1.83568406e-05],\n       [3.34273625e-03, 6.54677950e-03, 2.17559944e-02, ...,\n        1.93206394e-05, 4.44287729e-05, 1.83262811e-05],\n       [4.87306065e-03, 7.31546780e-03, 3.18993888e-02, ...,\n        3.89985896e-05, 6.74188999e-05, 1.93182887e-05]]),\n array([1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1,\n       0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1,\n       1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1,\n       0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0,\n       1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1,\n       0, 1, 1, 0]))",
      "values": [
        { "ref": "python/id/0x33b827c10+1" },
        { "ref": "python/id/0x33e630690+1" },
        { "ref": "python/id/0x33e52cdb0+1" },
        { "ref": "python/id/0x33e69ce10+1" },
        { "ref": "python/id/0x33e69cc90+1" }
      ]
    },
    "python/id/0x33b827c10+1": {
      "ref": "python/id/0x33b827c10+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/-0x6976fa66337364a8",
      "module": "__main__",
      "name": "validate_model",
      "signature": {
        "parameters": [
          { "name": "weights", "kind": 1, "annotation": "typing.Any" },
          { "name": "bias", "kind": 1, "annotation": "typing.Any" },
          { "name": "X_test", "kind": 1, "annotation": "typing.Any" },
          { "name": "y_test", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "Cell In[5]",
      "firstlineno": 25,
      "source": "def validate_model(weights, bias, X_test, y_test):\n    y_pred = predict(weights, bias, X_test)\n    return roc_auc_score(y_test, y_pred)\n",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/id/0x33e72e7c0": {
      "ref": "otel/span/0x0/transient/id/0x33e72e7c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33e6afb40": {
      "ref": "otel/span/0x0/transient/id/0x33e6afb40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'num_returns': 1, 'resources': {'bob': 1}}",
      "values": {
        "num_returns": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
        "resources": { "ref": "otel/span/0x0/transient/id/0x33e710640" }
      }
    },
    "otel/span/0x0/transient/id/0x33e710640": {
      "ref": "otel/span/0x0/transient/id/0x33e710640",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'bob': 1}",
      "values": { "bob": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" } }
    },
    "python/id/0x33e705730+1": {
      "ref": "python/id/0x33e705730+1",
      "kind": "object",
      "type": "secretflow.distributed.primitive.RemoteFunctionWrapper",
      "snapshot": "<secretflow.distributed.primitive.RemoteFunctionWrapper object at 0x33e705730>"
    },
    "ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33be8c590": {
      "ref": "otel/span/0x0/transient/id/0x33be8c590",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(<secretflow.device.device.pyu.PYUObject object at 0x33e534550>,\n <secretflow.device.device.pyu.PYUObject object at 0x33e671be0>,\n <secretflow.device.device.pyu.PYUObject object at 0x33e28cd90>,\n <secretflow.device.device.pyu.PYUObject object at 0x33e205bb0>)",
      "values": [
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)"
        },
        {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e701240": {
      "ref": "otel/span/0x0/transient/id/0x33e701240",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "secretflow/object/python/ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)": {
      "ref": "secretflow/object/python/ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)",
      "kind": "remote_object",
      "type": "secretflow.device.device.pyu.PYUObject",
      "location": {
        "kind": "location",
        "type": "PYU",
        "parties": ["bob"],
        "parameters": {}
      },
      "refs": [
        "ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)"
      ]
    },
    "otel/span/0x0/transient/id/0x33e78ea40": {
      "ref": "otel/span/0x0/transient/id/0x33e78ea40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'x': <secretflow.device.device.pyu.PYUObject object at 0x33e226d00>}",
      "values": {
        "x": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)"
        }
      }
    },
    "otel/span/0x0/transient/id/0x33e743e00": {
      "ref": "otel/span/0x0/transient/id/0x33e743e00",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/frame/0x11a3307c0/line/162": {
      "ref": "otel/span/0x0/transient/frame/0x11a3307c0/line/162",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/driver.py",
      "lineno": 162,
      "func": "reveal",
      "code": "all_object = sfd.get(all_object_refs)"
    },
    "otel/span/0x0/transient/id/0x33e7109c0": {
      "ref": "otel/span/0x0/transient/id/0x33e7109c0",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[0.987880773010154]",
      "values": [{ "ref": "otel/span/0x0/transient/id/0x33e664ef0" }]
    },
    "otel/span/0x0/transient/id/0x33e664ef0": {
      "ref": "otel/span/0x0/transient/id/0x33e664ef0",
      "kind": "object",
      "type": "numpy.float64",
      "snapshot": "0.987880773010154"
    },
    "otel/span/0x0/transient/id/0x33e7939c0": {
      "ref": "otel/span/0x0/transient/id/0x33e7939c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'all_object': [0.987880773010154]}",
      "values": { "all_object": { "ref": "otel/span/0x0/transient/id/0x33e7109c0" } }
    },
    "python/id/0x17b149c10+1": {
      "ref": "python/id/0x17b149c10+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0xe91ffd862337f3f",
      "module": "secretflow.device.driver",
      "name": "reveal",
      "signature": {
        "parameters": [
          { "name": "func_or_object", "kind": 1, "annotation": "typing.Any" },
          { "name": "heu_encoder", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/developer/git/secretflow/secretnote/.venv/lib/python3.8/site-packages/secretflow/device/driver.py",
      "firstlineno": 115,
      "source": "def reveal(func_or_object, heu_encoder=None):\n    \"\"\"Get plaintext data from device.\n\n    NOTE: Use this function with extreme caution, as it may cause privacy leaks.\n    In SecretFlow, we recommend that data should flow between different devices\n    and rarely revealed to driver. Only use this function when data dependency\n    control flow occurs.\n\n    Args:\n        func_or_object: May be callable or any Python objects which contains Device objects.\n        heu_encoder: Can be heu Encoder or EncoderParams.\n            This is used to replace the default encoder from config\n    \"\"\"\n    if callable(func_or_object):\n\n        @wraps(func_or_object)\n        def wrapper(*arg, **kwargs):\n            return reveal(func_or_object(*arg, **kwargs))\n\n        return wrapper\n    all_object_refs = []\n    flatten_val, tree = jax.tree_util.tree_flatten(func_or_object)\n    all_spu_chunks_count = []\n    spu_chunks_idx = 0\n\n    for x in flatten_val:\n        if isinstance(x, PYUObject):\n            all_object_refs.append(x.data)\n        elif isinstance(x, HEUObject):\n            if x.is_plain:\n                ref = x.device.get_participant(x.location).decode.remote(x.data)\n            else:\n                ref = x.device.sk_keeper.decrypt_and_decode.remote(x.data, heu_encoder)\n            all_object_refs.append(ref)\n        elif isinstance(x, SPUObject):\n            assert isinstance(\n                x.shares_name[0], (ray.ObjectRef, fed.FedObject)\n            ), f\"shares_name in spu obj should be ObjectRef or FedObject, but got {type(x.shares_name[0])} \"\n            info, shares_chunk = x.device.outfeed_shares(x.shares_name)\n            all_spu_chunks_count.append(len(shares_chunk))\n            all_object_refs.append(info)\n            all_object_refs.extend([s for s in shares_chunk])\n        elif isinstance(x, TEEUObject):\n            all_object_refs.append(x.data)\n            logging.debug(f'Getting teeu data from TEEU {x.device.party}.')\n\n    cur_idx = 0\n    all_object = sfd.get(all_object_refs)\n\n    new_flatten_val = []\n    for x in flatten_val:\n        if isinstance(x, (PYUObject, HEUObject, TEEUObject)):\n            new_flatten_val.append(all_object[cur_idx])\n            cur_idx += 1\n\n        elif isinstance(x, SPUObject):\n            io = SPUIO(x.device.conf, x.device.world_size)\n            io_info = all_object[cur_idx]\n            cur_idx += 1\n            chunks_count = all_spu_chunks_count[spu_chunks_idx]\n            spu_chunks_idx += 1\n            shares_chunk = all_object[cur_idx : cur_idx + chunks_count]\n            cur_idx += chunks_count\n\n            new_flatten_val.append(io.reconstruct(shares_chunk, io_info))\n        else:\n            new_flatten_val.append(x)\n\n    return jax.tree_util.tree_unflatten(tree, new_flatten_val)\n",
      "docstring": "Get plaintext data from device.\n\nNOTE: Use this function with extreme caution, as it may cause privacy leaks.\nIn SecretFlow, we recommend that data should flow between different devices\nand rarely revealed to driver. Only use this function when data dependency\ncontrol flow occurs.\n\nArgs:\n    func_or_object: May be callable or any Python objects which contains Device objects.\n    heu_encoder: Can be heu Encoder or EncoderParams.\n        This is used to replace the default encoder from config",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "otel/span/0x0/transient/frame/0x11a3307c0/line/115": {
      "ref": "otel/span/0x0/transient/frame/0x11a3307c0/line/115",
      "kind": "frame",
      "type": "builtins.frame",
      "local_vars": {
        "heu_encoder": { "ref": "python/none" },
        "func_or_object": {
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)"
        }
      },
      "global_vars": {
        "wraps": { "ref": "python/id/0x104e70d30+1" },
        "PYUObject": { "ref": "python/id/0x17b029c20+1" },
        "HEUObject": { "ref": "python/id/0x17b02ea20+1" },
        "SPUObject": { "ref": "python/id/0x17b02b6b0+1" },
        "TEEUObject": { "ref": "python/id/0x17b02ffe0+1" },
        "SPUIO": { "ref": "python/id/0x17b02ba60+1" }
      },
      "outer_frames": [
        { "ref": "otel/span/0x0/transient/frame/0x11a3307c0/line/115" },
        { "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/35" },
        { "ref": "otel/span/0x0/transient/frame/0x33a8379f0/line/42" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661bc0/line/3508" },
        { "ref": "otel/span/0x0/transient/frame/0x11c6632d0/line/3448" },
        { "ref": "otel/span/0x0/transient/frame/0x105ba37e0/line/3269" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661df0/line/129" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660400/line/3064" },
        { "ref": "otel/span/0x0/transient/frame/0x11c660c50/line/3009" },
        { "ref": "otel/span/0x0/transient/frame/0x11c661870/line/549" },
        { "ref": "otel/span/0x0/transient/frame/0x11c626890/line/426" },
        { "ref": "otel/span/0x0/transient/frame/0x11c64b770/line/758" },
        { "ref": "otel/span/0x0/transient/frame/0x14c621df0/line/418" },
        { "ref": "otel/span/0x0/transient/frame/0x11812c420/line/513" },
        { "ref": "otel/span/0x0/transient/frame/0x118129210/line/524" },
        { "ref": "otel/span/0x0/transient/frame/0x14d077200/line/81" },
        { "ref": "otel/span/0x0/transient/frame/0x14d076fd0/line/1859" },
        { "ref": "otel/span/0x0/transient/frame/0x118113d60/line/570" },
        { "ref": "otel/span/0x0/transient/frame/0x11812e380/line/195" },
        { "ref": "otel/span/0x0/transient/frame/0x104e89a40/line/737" },
        { "ref": "otel/span/0x0/transient/frame/0x14d022260/line/1053" },
        { "ref": "otel/span/0x0/transient/frame/0x104ddc230/line/17" },
        { "ref": "otel/span/0x0/transient/frame/0x12c618b00/line/87" },
        { "ref": "otel/span/0x0/transient/frame/0x12c614a80/line/194" }
      ],
      "module": "secretflow.device.driver",
      "func": "reveal"
    },
    "python/id/0x104e70d30+1": {
      "ref": "python/id/0x104e70d30+1",
      "kind": "function",
      "type": "builtins.function",
      "bytecode_hash": "python/hash/0x4304358cbdda21a5",
      "module": "functools",
      "name": "wraps",
      "signature": {
        "parameters": [
          { "name": "wrapped", "kind": 1, "annotation": "typing.Any" },
          { "name": "assigned", "kind": 1, "annotation": "typing.Any" },
          { "name": "updated", "kind": 1, "annotation": "typing.Any" }
        ],
        "return_annotation": "typing.Any"
      },
      "filename": "~/.rye/py/cpython@3.8.18/install/lib/python3.8/functools.py",
      "firstlineno": 64,
      "source": "def wraps(wrapped,\n          assigned = WRAPPER_ASSIGNMENTS,\n          updated = WRAPPER_UPDATES):\n    \"\"\"Decorator factory to apply update_wrapper() to a wrapper function\n\n       Returns a decorator that invokes update_wrapper() with the decorated\n       function as the wrapper argument and the arguments to wraps() as the\n       remaining arguments. Default arguments are as for update_wrapper().\n       This is a convenience function to simplify applying partial() to\n       update_wrapper().\n    \"\"\"\n    return partial(update_wrapper, wrapped=wrapped,\n                   assigned=assigned, updated=updated)\n",
      "docstring": "Decorator factory to apply update_wrapper() to a wrapper function\n\nReturns a decorator that invokes update_wrapper() with the decorated\nfunction as the wrapper argument and the arguments to wraps() as the\nremaining arguments. Default arguments are as for update_wrapper().\nThis is a convenience function to simplify applying partial() to\nupdate_wrapper().",
      "default_args": {},
      "closure_vars": {},
      "global_vars": {}
    },
    "python/id/0x17b02ea20+1": {
      "ref": "python/id/0x17b02ea20+1",
      "kind": "object",
      "type": "abc.ABCMeta",
      "snapshot": "<class 'secretflow.device.device.heu_object.HEUObject'>"
    },
    "python/id/0x17b02ffe0+1": {
      "ref": "python/id/0x17b02ffe0+1",
      "kind": "object",
      "type": "abc.ABCMeta",
      "snapshot": "<class 'secretflow.device.device.teeu.TEEUObject'>"
    },
    "python/id/0x17b02ba60+1": {
      "ref": "python/id/0x17b02ba60+1",
      "kind": "object",
      "type": "builtins.type",
      "snapshot": "<class 'secretflow.device.device.spu.SPUIO'>"
    },
    "otel/span/0x0/transient/id/0x33e793380": {
      "ref": "otel/span/0x0/transient/id/0x33e793380",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'auc': 0.987880773010154}",
      "values": { "auc": { "ref": "otel/span/0x0/transient/id/0x33e664ef0" } }
    },
    "otel/span/0x0/transient/id/0x33e544440": {
      "ref": "otel/span/0x0/transient/id/0x33e544440",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/34": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/34",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 34,
      "func": "main",
      "code": "weights = reveal(weights)"
    },
    "otel/span/0x0/transient/id/0x33e78eb00": {
      "ref": "otel/span/0x0/transient/id/0x33e78eb00",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[array([ 1.3411045e-05,  3.7223101e-05,  7.2821975e-05, -8.4212422e-04,\n        2.0861626e-07, -2.9802322e-08, -3.2782555e-07, -1.7881393e-07,\n        4.3213367e-07,  1.9371510e-07, -5.2154064e-07,  3.6358833e-06,\n       -3.9041042e-06, -1.5723705e-04,  1.4901161e-08,  1.4901161e-08,\n        4.4703484e-08,  0.0000000e+00,  5.9604645e-08,  0.0000000e+00,\n        6.7204237e-06,  4.4181943e-05,  2.6896596e-05, -2.0324141e-03,\n        2.8312206e-07, -2.9802322e-07, -7.3015690e-07, -2.6822090e-07,\n        5.6624413e-07,  1.7881393e-07], dtype=float32)]",
      "values": [{ "ref": "python/id/0x33e6555d0+1" }]
    },
    "python/id/0x33e6555d0+1": {
      "ref": "python/id/0x33e6555d0+1",
      "kind": "object",
      "type": "numpy.ndarray",
      "snapshot": "array([ 1.3411045e-05,  3.7223101e-05,  7.2821975e-05, -8.4212422e-04,\n        2.0861626e-07, -2.9802322e-08, -3.2782555e-07, -1.7881393e-07,\n        4.3213367e-07,  1.9371510e-07, -5.2154064e-07,  3.6358833e-06,\n       -3.9041042e-06, -1.5723705e-04,  1.4901161e-08,  1.4901161e-08,\n        4.4703484e-08,  0.0000000e+00,  5.9604645e-08,  0.0000000e+00,\n        6.7204237e-06,  4.4181943e-05,  2.6896596e-05, -2.0324141e-03,\n        2.8312206e-07, -2.9802322e-07, -7.3015690e-07, -2.6822090e-07,\n        5.6624413e-07,  1.7881393e-07], dtype=float32)"
    },
    "otel/span/0x0/transient/id/0x33e7998c0": {
      "ref": "otel/span/0x0/transient/id/0x33e7998c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'all_object': [array([ 1.3411045e-05,  3.7223101e-05,  7.2821975e-05, -8.4212422e-04,\n        2.0861626e-07, -2.9802322e-08, -3.2782555e-07, -1.7881393e-07,\n        4.3213367e-07,  1.9371510e-07, -5.2154064e-07,  3.6358833e-06,\n       -3.9041042e-06, -1.5723705e-04,  1.4901161e-08,  1.4901161e-08,\n        4.4703484e-08,  0.0000000e+00,  5.9604645e-08,  0.0000000e+00,\n        6.7204237e-06,  4.4181943e-05,  2.6896596e-05, -2.0324141e-03,\n        2.8312206e-07, -2.9802322e-07, -7.3015690e-07, -2.6822090e-07,\n        5.6624413e-07,  1.7881393e-07], dtype=float32)]}",
      "values": { "all_object": { "ref": "otel/span/0x0/transient/id/0x33e78eb00" } }
    },
    "otel/span/0x0/transient/id/0x33e7bdb40": {
      "ref": "otel/span/0x0/transient/id/0x33e7bdb40",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'weights': array([ 1.3411045e-05,  3.7223101e-05,  7.2821975e-05, -8.4212422e-04,\n        2.0861626e-07, -2.9802322e-08, -3.2782555e-07, -1.7881393e-07,\n        4.3213367e-07,  1.9371510e-07, -5.2154064e-07,  3.6358833e-06,\n       -3.9041042e-06, -1.5723705e-04,  1.4901161e-08,  1.4901161e-08,\n        4.4703484e-08,  0.0000000e+00,  5.9604645e-08,  0.0000000e+00,\n        6.7204237e-06,  4.4181943e-05,  2.6896596e-05, -2.0324141e-03,\n        2.8312206e-07, -2.9802322e-07, -7.3015690e-07, -2.6822090e-07,\n        5.6624413e-07,  1.7881393e-07], dtype=float32)}",
      "values": { "weights": { "ref": "python/id/0x33e6555d0+1" } }
    },
    "otel/span/0x0/transient/id/0x33e7b6e40": {
      "ref": "otel/span/0x0/transient/id/0x33e7b6e40",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)]",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/frame/0x2b85f80c0/line/35": {
      "ref": "otel/span/0x0/transient/frame/0x2b85f80c0/line/35",
      "kind": "frame_info",
      "type": "inspect.FrameInfo",
      "filename": "Cell In[6]",
      "lineno": 35,
      "func": "main",
      "code": "bias = reveal(bias)"
    },
    "otel/span/0x0/transient/id/0x33e793500": {
      "ref": "otel/span/0x0/transient/id/0x33e793500",
      "kind": "list",
      "type": "builtins.list",
      "snapshot": "[array(0.01272169, dtype=float32)]",
      "values": [{ "ref": "python/id/0x33f026d50+1" }]
    },
    "python/id/0x33f026d50+1": {
      "ref": "python/id/0x33f026d50+1",
      "kind": "object",
      "type": "numpy.ndarray",
      "snapshot": "array(0.01272169, dtype=float32)"
    },
    "otel/span/0x0/transient/id/0x33e78e180": {
      "ref": "otel/span/0x0/transient/id/0x33e78e180",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{'all_object': [array(0.01272169, dtype=float32)]}",
      "values": { "all_object": { "ref": "otel/span/0x0/transient/id/0x33e793500" } }
    },
    "otel/span/0x0/transient/id/0x33e7a4900": {
      "ref": "otel/span/0x0/transient/id/0x33e7a4900",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "otel/span/0x0/transient/id/0x33e5eca60": {
      "ref": "otel/span/0x0/transient/id/0x33e5eca60",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(f91b78d7db9a6593af23b462bfe8c365427a357b0100000001000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(f91b78d7db9a6593af23b462bfe8c365427a357b0100000001000000)"
        }
      ]
    },
    "ray/objectref/ObjectRef(9a0afb4ce5b46f16af23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(9a0afb4ce5b46f16af23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(9a0afb4ce5b46f16af23b462bfe8c365427a357b0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e226eb0": {
      "ref": "otel/span/0x0/transient/id/0x33e226eb0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(82891771158d68c1e11e0e6b35627ffff00336110100000001000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(82891771158d68c1e11e0e6b35627ffff00336110100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e7f0080": {
      "ref": "otel/span/0x0/transient/id/0x33e7f0080",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(261bd10b0466d7e8e11e0e6b35627ffff00336110100000001000000)": {
      "ref": "ray/objectref/ObjectRef(261bd10b0466d7e8e11e0e6b35627ffff00336110100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(261bd10b0466d7e8e11e0e6b35627ffff00336110100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e2a6370": {
      "ref": "otel/span/0x0/transient/id/0x33e2a6370",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(359ec6ce30d3ca2daf23b462bfe8c365427a357b0100000001000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(359ec6ce30d3ca2daf23b462bfe8c365427a357b0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e7bd600": {
      "ref": "otel/span/0x0/transient/id/0x33e7bd600",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(b9a008d165a7e804af23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(b9a008d165a7e804af23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(b9a008d165a7e804af23b462bfe8c365427a357b0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e791100": {
      "ref": "otel/span/0x0/transient/id/0x33e791100",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(1e8ff6d236132784e11e0e6b35627ffff00336110100000001000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(1e8ff6d236132784e11e0e6b35627ffff00336110100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e798d00": {
      "ref": "otel/span/0x0/transient/id/0x33e798d00",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(a8485d936ac2e7cce11e0e6b35627ffff00336110100000001000000)": {
      "ref": "ray/objectref/ObjectRef(a8485d936ac2e7cce11e0e6b35627ffff00336110100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(a8485d936ac2e7cce11e0e6b35627ffff00336110100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e5f3ca0": {
      "ref": "otel/span/0x0/transient/id/0x33e5f3ca0",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(2751d69548dba956af23b462bfe8c365427a357b0100000001000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(2751d69548dba956af23b462bfe8c365427a357b0100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33e7cb8c0": {
      "ref": "otel/span/0x0/transient/id/0x33e7cb8c0",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(b58f0ee91e0a9599af23b462bfe8c365427a357b0100000001000000)": {
      "ref": "ray/objectref/ObjectRef(b58f0ee91e0a9599af23b462bfe8c365427a357b0100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(b58f0ee91e0a9599af23b462bfe8c365427a357b0100000001000000)"
    },
    "otel/span/0x0/transient/id/0x33e7c7d00": {
      "ref": "otel/span/0x0/transient/id/0x33e7c7d00",
      "kind": "list",
      "type": "builtins.tuple",
      "snapshot": "(ObjectRef(71b133a11e1c461ce11e0e6b35627ffff00336110100000001000000),)",
      "values": [
        {
          "ref": "ray/objectref/ObjectRef(71b133a11e1c461ce11e0e6b35627ffff00336110100000001000000)"
        }
      ]
    },
    "otel/span/0x0/transient/id/0x33f059740": {
      "ref": "otel/span/0x0/transient/id/0x33f059740",
      "kind": "dict",
      "type": "builtins.dict",
      "snapshot": "{}",
      "values": {}
    },
    "ray/objectref/ObjectRef(0cb7b64917b5af44e11e0e6b35627ffff00336110100000001000000)": {
      "ref": "ray/objectref/ObjectRef(0cb7b64917b5af44e11e0e6b35627ffff00336110100000001000000)",
      "kind": "object",
      "type": "ray._raylet.ObjectRef",
      "snapshot": "ObjectRef(0cb7b64917b5af44e11e0e6b35627ffff00336110100000001000000)"
    }
  },
  "frames": [
    {
      "span_id": "0xee87e71dd6a95713",
      "parent_span_id": "0x0aef2f65a308c9ce",
      "start_time": "2023-11-29T03:25:25.924496+00:00",
      "end_time": "2023-11-29T03:25:25.988918+00:00",
      "epoch": 1,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33bd0a3c0" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x3d9a8c9a73ad1bad",
      "parent_span_id": "0x0aef2f65a308c9ce",
      "start_time": "2023-11-29T03:25:26.017564+00:00",
      "end_time": "2023-11-29T03:25:26.032031+00:00",
      "epoch": 2,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33b968b80" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x0aef2f65a308c9ce",
      "start_time": "2023-11-29T03:25:25.877511+00:00",
      "end_time": "2023-11-29T03:25:26.041053+00:00",
      "epoch": 3,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33ba53840" },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33ad2daf0+1",
            "name": "load_dataset_for_training"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["alice"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0c080",
              "name": "rand_key"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb40",
              "name": "party_id"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": 1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "x1"
            },
            {
              "kind": "remote_object",
              "numbering": 2,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000002000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "_"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0xee87e71dd6a95713",
          "parent_span_id": "0x0aef2f65a308c9ce",
          "start_time": "2023-11-29T03:25:25.924496+00:00",
          "end_time": "2023-11-29T03:25:25.988918+00:00",
          "epoch": 1,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33bd0a3c0" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x3d9a8c9a73ad1bad",
          "parent_span_id": "0x0aef2f65a308c9ce",
          "start_time": "2023-11-29T03:25:26.017564+00:00",
          "end_time": "2023-11-29T03:25:26.032031+00:00",
          "epoch": 2,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33b968b80" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xc54aeb9627550954",
      "parent_span_id": "0xb762091bc6e02f5e",
      "start_time": "2023-11-29T03:25:26.067950+00:00",
      "end_time": "2023-11-29T03:25:26.070366+00:00",
      "epoch": 4,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33bf3c7c0" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x82ed8ab316828778",
      "parent_span_id": "0xb762091bc6e02f5e",
      "start_time": "2023-11-29T03:25:26.090456+00:00",
      "end_time": "2023-11-29T03:25:26.102299+00:00",
      "epoch": 5,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33be66c00" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xb762091bc6e02f5e",
      "start_time": "2023-11-29T03:25:26.056095+00:00",
      "end_time": "2023-11-29T03:25:26.108856+00:00",
      "epoch": 6,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33bf7bbc0" },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33ad2daf0+1",
            "name": "load_dataset_for_training"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0c080",
              "name": "rand_key"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb60",
              "name": "party_id"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": 3,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "x2"
            },
            {
              "kind": "remote_object",
              "numbering": 4,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "y"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0xc54aeb9627550954",
          "parent_span_id": "0xb762091bc6e02f5e",
          "start_time": "2023-11-29T03:25:26.067950+00:00",
          "end_time": "2023-11-29T03:25:26.070366+00:00",
          "epoch": 4,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33bf3c7c0" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x82ed8ab316828778",
          "parent_span_id": "0xb762091bc6e02f5e",
          "start_time": "2023-11-29T03:25:26.090456+00:00",
          "end_time": "2023-11-29T03:25:26.102299+00:00",
          "epoch": 5,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33be66c00" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x7d8e42c3777d5937",
      "parent_span_id": "0x5ff6336a5b93d707",
      "start_time": "2023-11-29T03:25:26.147674+00:00",
      "end_time": "2023-11-29T03:25:26.775865+00:00",
      "epoch": 7,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33bf31400" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x632ecd4b1fe870fe",
      "parent_span_id": "0x5ff6336a5b93d707",
      "start_time": "2023-11-29T03:25:26.794310+00:00",
      "end_time": "2023-11-29T03:25:26.802522+00:00",
      "epoch": 8,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(e0dc174c83599034ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x5ff6336a5b93d707",
      "parent_span_id": "0x146d796a36ee9bf9",
      "start_time": "2023-11-29T03:25:26.136553+00:00",
      "end_time": "2023-11-29T03:25:26.810143+00:00",
      "epoch": 9,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": {
        "ref": "secretflow/object/python/ray/objectref/ObjectRef(e0dc174c83599034ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33bda9550+1",
            "name": "get_shares_chunk_count"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["alice"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)",
              "name": "data"
            },
            {
              "kind": "local_object",
              "ref": "python/id/0x17ee82ac0+1",
              "name": "runtime_config"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb80",
              "name": "world_size"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
              "name": "vtype"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(e0dc174c83599034ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "shares_chunk_count"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x7d8e42c3777d5937",
          "parent_span_id": "0x5ff6336a5b93d707",
          "start_time": "2023-11-29T03:25:26.147674+00:00",
          "end_time": "2023-11-29T03:25:26.775865+00:00",
          "epoch": 7,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33bf31400" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x632ecd4b1fe870fe",
          "parent_span_id": "0x5ff6336a5b93d707",
          "start_time": "2023-11-29T03:25:26.794310+00:00",
          "end_time": "2023-11-29T03:25:26.802522+00:00",
          "epoch": 8,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(e0dc174c83599034ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x58e965a414a182bd",
      "parent_span_id": "0x146d796a36ee9bf9",
      "start_time": "2023-11-29T03:25:26.823535+00:00",
      "end_time": "2023-11-29T03:25:26.828777+00:00",
      "epoch": 10,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x8c7d82ad1058c918",
      "parent_span_id": "0xbd1cd60345be98fe",
      "start_time": "2023-11-29T03:25:26.850898+00:00",
      "end_time": "2023-11-29T03:25:26.854772+00:00",
      "epoch": 11,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33b9a5d40" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xc5e8cac2eb7c6393",
      "parent_span_id": "0xbd1cd60345be98fe",
      "start_time": "2023-11-29T03:25:26.871487+00:00",
      "end_time": "2023-11-29T03:25:26.880145+00:00",
      "epoch": 12,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33bdad440" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xbd1cd60345be98fe",
      "parent_span_id": "0x146d796a36ee9bf9",
      "start_time": "2023-11-29T03:25:26.841201+00:00",
      "end_time": "2023-11-29T03:25:26.887691+00:00",
      "epoch": 13,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c011e00" },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33bda9dc0+1",
            "name": "run_spu_io"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["alice"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)",
              "name": "data"
            },
            {
              "kind": "local_object",
              "ref": "python/id/0x17ee82ac0+1",
              "name": "runtime_config"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb80",
              "name": "world_size"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
              "name": "vtype"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "[0]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "[1]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "[2]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "[3]"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x8c7d82ad1058c918",
          "parent_span_id": "0xbd1cd60345be98fe",
          "start_time": "2023-11-29T03:25:26.850898+00:00",
          "end_time": "2023-11-29T03:25:26.854772+00:00",
          "epoch": 11,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33b9a5d40" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xc5e8cac2eb7c6393",
          "parent_span_id": "0xbd1cd60345be98fe",
          "start_time": "2023-11-29T03:25:26.871487+00:00",
          "end_time": "2023-11-29T03:25:26.880145+00:00",
          "epoch": 12,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33bdad440" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x2f8de0dca3edb445",
      "parent_span_id": "0x75d2f00ece882c11",
      "start_time": "2023-11-29T03:25:26.951245+00:00",
      "end_time": "2023-11-29T03:25:26.974739+00:00",
      "epoch": 14,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(f91b78d7db9a6593af23b462bfe8c365427a357b0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x1ec32e5209385af6",
      "parent_span_id": "0x75d2f00ece882c11",
      "start_time": "2023-11-29T03:25:26.987094+00:00",
      "end_time": "2023-11-29T03:25:26.990523+00:00",
      "epoch": 15,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(82891771158d68c1e11e0e6b35627ffff00336110100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x75d2f00ece882c11",
      "parent_span_id": "0x146d796a36ee9bf9",
      "start_time": "2023-11-29T03:25:26.927698+00:00",
      "end_time": "2023-11-29T03:25:27.002607+00:00",
      "epoch": 16,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x17b130ee0+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33bfab100" },
      "expressions": [],
      "inner_frames": [
        {
          "span_id": "0x2f8de0dca3edb445",
          "parent_span_id": "0x75d2f00ece882c11",
          "start_time": "2023-11-29T03:25:26.951245+00:00",
          "end_time": "2023-11-29T03:25:26.974739+00:00",
          "epoch": 14,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(f91b78d7db9a6593af23b462bfe8c365427a357b0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x1ec32e5209385af6",
          "parent_span_id": "0x75d2f00ece882c11",
          "start_time": "2023-11-29T03:25:26.987094+00:00",
          "end_time": "2023-11-29T03:25:26.990523+00:00",
          "epoch": 15,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(82891771158d68c1e11e0e6b35627ffff00336110100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x146d796a36ee9bf9",
      "start_time": "2023-11-29T03:25:26.126443+00:00",
      "end_time": "2023-11-29T03:25:27.010866+00:00",
      "epoch": 17,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b1528b0+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x17b5bc630/line/48" },
      "retval": {
        "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "remote_object",
            "numbering": 1,
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "PYU",
              "parties": ["alice"],
              "parameters": {}
            }
          },
          "target": {
            "kind": "remote_object",
            "numbering": 5,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            },
            "name": "x1"
          }
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x5ff6336a5b93d707",
          "parent_span_id": "0x146d796a36ee9bf9",
          "start_time": "2023-11-29T03:25:26.136553+00:00",
          "end_time": "2023-11-29T03:25:26.810143+00:00",
          "epoch": 9,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/none" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
          "retval": {
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(e0dc174c83599034ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [
            {
              "kind": "exec",
              "function": {
                "kind": "local_object",
                "ref": "python/id/0x33bda9550+1",
                "name": "get_shares_chunk_count"
              },
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "boundvars": [
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)",
                  "name": "data"
                },
                {
                  "kind": "local_object",
                  "ref": "python/id/0x17ee82ac0+1",
                  "name": "runtime_config"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x106d0bb80",
                  "name": "world_size"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
                  "name": "vtype"
                }
              ],
              "freevars": [],
              "results": [
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(e0dc174c83599034ffffffffffffffffffffffff0100000001000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "shares_chunk_count"
                }
              ]
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0x58e965a414a182bd",
          "parent_span_id": "0x146d796a36ee9bf9",
          "start_time": "2023-11-29T03:25:26.823535+00:00",
          "end_time": "2023-11-29T03:25:26.828777+00:00",
          "epoch": 10,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xbd1cd60345be98fe",
          "parent_span_id": "0x146d796a36ee9bf9",
          "start_time": "2023-11-29T03:25:26.841201+00:00",
          "end_time": "2023-11-29T03:25:26.887691+00:00",
          "epoch": 13,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/none" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c011e00" },
          "expressions": [
            {
              "kind": "exec",
              "function": {
                "kind": "local_object",
                "ref": "python/id/0x33bda9dc0+1",
                "name": "run_spu_io"
              },
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "boundvars": [
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)",
                  "name": "data"
                },
                {
                  "kind": "local_object",
                  "ref": "python/id/0x17ee82ac0+1",
                  "name": "runtime_config"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x106d0bb80",
                  "name": "world_size"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
                  "name": "vtype"
                }
              ],
              "freevars": [],
              "results": [
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "[0]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000002000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "[1]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000003000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "[2]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000004000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "[3]"
                }
              ]
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0x75d2f00ece882c11",
          "parent_span_id": "0x146d796a36ee9bf9",
          "start_time": "2023-11-29T03:25:26.927698+00:00",
          "end_time": "2023-11-29T03:25:27.002607+00:00",
          "epoch": 16,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x17b130ee0+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33bfab100" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x17225f05c528c356",
      "parent_span_id": "0x980e968c45ab8543",
      "start_time": "2023-11-29T03:25:27.043917+00:00",
      "end_time": "2023-11-29T03:25:27.047724+00:00",
      "epoch": 18,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c387900" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xfc938d23468e77dd",
      "parent_span_id": "0x980e968c45ab8543",
      "start_time": "2023-11-29T03:25:27.070127+00:00",
      "end_time": "2023-11-29T03:25:27.078602+00:00",
      "epoch": 19,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(8849b62d89cb30f9ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x980e968c45ab8543",
      "parent_span_id": "0x14e55c8255c8f302",
      "start_time": "2023-11-29T03:25:27.034611+00:00",
      "end_time": "2023-11-29T03:25:27.083842+00:00",
      "epoch": 20,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": {
        "ref": "secretflow/object/python/ray/objectref/ObjectRef(8849b62d89cb30f9ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33c3b1f70+1",
            "name": "get_shares_chunk_count"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)",
              "name": "data"
            },
            {
              "kind": "local_object",
              "ref": "python/id/0x17ee82ac0+1",
              "name": "runtime_config"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb80",
              "name": "world_size"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
              "name": "vtype"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(8849b62d89cb30f9ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "shares_chunk_count"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x17225f05c528c356",
          "parent_span_id": "0x980e968c45ab8543",
          "start_time": "2023-11-29T03:25:27.043917+00:00",
          "end_time": "2023-11-29T03:25:27.047724+00:00",
          "epoch": 18,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c387900" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xfc938d23468e77dd",
          "parent_span_id": "0x980e968c45ab8543",
          "start_time": "2023-11-29T03:25:27.070127+00:00",
          "end_time": "2023-11-29T03:25:27.078602+00:00",
          "epoch": 19,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(8849b62d89cb30f9ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xac1f9d16bb46b833",
      "parent_span_id": "0x14e55c8255c8f302",
      "start_time": "2023-11-29T03:25:27.094587+00:00",
      "end_time": "2023-11-29T03:25:27.097838+00:00",
      "epoch": 21,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x4d61a01b2fb3e4a3",
      "parent_span_id": "0x031861129304ef44",
      "start_time": "2023-11-29T03:25:27.116633+00:00",
      "end_time": "2023-11-29T03:25:27.120306+00:00",
      "epoch": 22,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c565f40" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x887197f211336e3e",
      "parent_span_id": "0x031861129304ef44",
      "start_time": "2023-11-29T03:25:27.136926+00:00",
      "end_time": "2023-11-29T03:25:27.144956+00:00",
      "epoch": 23,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c38c800" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x031861129304ef44",
      "parent_span_id": "0x14e55c8255c8f302",
      "start_time": "2023-11-29T03:25:27.107828+00:00",
      "end_time": "2023-11-29T03:25:27.149754+00:00",
      "epoch": 24,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c58df40" },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33c3b1ee0+1",
            "name": "run_spu_io"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)",
              "name": "data"
            },
            {
              "kind": "local_object",
              "ref": "python/id/0x17ee82ac0+1",
              "name": "runtime_config"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb80",
              "name": "world_size"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
              "name": "vtype"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "[0]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000002000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "[1]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000003000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "[2]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "[3]"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x4d61a01b2fb3e4a3",
          "parent_span_id": "0x031861129304ef44",
          "start_time": "2023-11-29T03:25:27.116633+00:00",
          "end_time": "2023-11-29T03:25:27.120306+00:00",
          "epoch": 22,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c565f40" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x887197f211336e3e",
          "parent_span_id": "0x031861129304ef44",
          "start_time": "2023-11-29T03:25:27.136926+00:00",
          "end_time": "2023-11-29T03:25:27.144956+00:00",
          "epoch": 23,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c38c800" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x526b6535a4649201",
      "parent_span_id": "0xcc7622f51a4a4f18",
      "start_time": "2023-11-29T03:25:27.167213+00:00",
      "end_time": "2023-11-29T03:25:27.170509+00:00",
      "epoch": 25,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(359ec6ce30d3ca2daf23b462bfe8c365427a357b0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xa8119d49d4565408",
      "parent_span_id": "0xcc7622f51a4a4f18",
      "start_time": "2023-11-29T03:25:27.181082+00:00",
      "end_time": "2023-11-29T03:25:27.184000+00:00",
      "epoch": 26,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(1e8ff6d236132784e11e0e6b35627ffff00336110100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xcc7622f51a4a4f18",
      "parent_span_id": "0x14e55c8255c8f302",
      "start_time": "2023-11-29T03:25:27.159659+00:00",
      "end_time": "2023-11-29T03:25:27.187945+00:00",
      "epoch": 27,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x17b130ee0+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c553100" },
      "expressions": [],
      "inner_frames": [
        {
          "span_id": "0x526b6535a4649201",
          "parent_span_id": "0xcc7622f51a4a4f18",
          "start_time": "2023-11-29T03:25:27.167213+00:00",
          "end_time": "2023-11-29T03:25:27.170509+00:00",
          "epoch": 25,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(359ec6ce30d3ca2daf23b462bfe8c365427a357b0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xa8119d49d4565408",
          "parent_span_id": "0xcc7622f51a4a4f18",
          "start_time": "2023-11-29T03:25:27.181082+00:00",
          "end_time": "2023-11-29T03:25:27.184000+00:00",
          "epoch": 26,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(1e8ff6d236132784e11e0e6b35627ffff00336110100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x14e55c8255c8f302",
      "start_time": "2023-11-29T03:25:27.026826+00:00",
      "end_time": "2023-11-29T03:25:27.193859+00:00",
      "epoch": 28,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b1528b0+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x17b5bc630/line/48" },
      "retval": {
        "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "remote_object",
            "numbering": 3,
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "PYU",
              "parties": ["bob"],
              "parameters": {}
            }
          },
          "target": {
            "kind": "remote_object",
            "numbering": 6,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            },
            "name": "x2"
          }
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x980e968c45ab8543",
          "parent_span_id": "0x14e55c8255c8f302",
          "start_time": "2023-11-29T03:25:27.034611+00:00",
          "end_time": "2023-11-29T03:25:27.083842+00:00",
          "epoch": 20,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/none" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
          "retval": {
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(8849b62d89cb30f9ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [
            {
              "kind": "exec",
              "function": {
                "kind": "local_object",
                "ref": "python/id/0x33c3b1f70+1",
                "name": "get_shares_chunk_count"
              },
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "boundvars": [
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)",
                  "name": "data"
                },
                {
                  "kind": "local_object",
                  "ref": "python/id/0x17ee82ac0+1",
                  "name": "runtime_config"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x106d0bb80",
                  "name": "world_size"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
                  "name": "vtype"
                }
              ],
              "freevars": [],
              "results": [
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(8849b62d89cb30f9ffffffffffffffffffffffff0100000001000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["bob"],
                    "parameters": {}
                  },
                  "name": "shares_chunk_count"
                }
              ]
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0xac1f9d16bb46b833",
          "parent_span_id": "0x14e55c8255c8f302",
          "start_time": "2023-11-29T03:25:27.094587+00:00",
          "end_time": "2023-11-29T03:25:27.097838+00:00",
          "epoch": 21,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x031861129304ef44",
          "parent_span_id": "0x14e55c8255c8f302",
          "start_time": "2023-11-29T03:25:27.107828+00:00",
          "end_time": "2023-11-29T03:25:27.149754+00:00",
          "epoch": 24,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/none" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c58df40" },
          "expressions": [
            {
              "kind": "exec",
              "function": {
                "kind": "local_object",
                "ref": "python/id/0x33c3b1ee0+1",
                "name": "run_spu_io"
              },
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "boundvars": [
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)",
                  "name": "data"
                },
                {
                  "kind": "local_object",
                  "ref": "python/id/0x17ee82ac0+1",
                  "name": "runtime_config"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x106d0bb80",
                  "name": "world_size"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
                  "name": "vtype"
                }
              ],
              "freevars": [],
              "results": [
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["bob"],
                    "parameters": {}
                  },
                  "name": "[0]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000002000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["bob"],
                    "parameters": {}
                  },
                  "name": "[1]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000003000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["bob"],
                    "parameters": {}
                  },
                  "name": "[2]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000004000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["bob"],
                    "parameters": {}
                  },
                  "name": "[3]"
                }
              ]
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0xcc7622f51a4a4f18",
          "parent_span_id": "0x14e55c8255c8f302",
          "start_time": "2023-11-29T03:25:27.159659+00:00",
          "end_time": "2023-11-29T03:25:27.187945+00:00",
          "epoch": 27,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x17b130ee0+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c553100" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x9fbc1d40fae18b9e",
      "parent_span_id": "0x159bd7cac84c5c87",
      "start_time": "2023-11-29T03:25:27.219641+00:00",
      "end_time": "2023-11-29T03:25:27.225145+00:00",
      "epoch": 29,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c3a7f00" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x3fc090088608e4f4",
      "parent_span_id": "0x159bd7cac84c5c87",
      "start_time": "2023-11-29T03:25:27.242183+00:00",
      "end_time": "2023-11-29T03:25:27.249989+00:00",
      "epoch": 30,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(85748392bcd969ccffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x159bd7cac84c5c87",
      "parent_span_id": "0x0cad85d2373ad487",
      "start_time": "2023-11-29T03:25:27.210818+00:00",
      "end_time": "2023-11-29T03:25:27.254928+00:00",
      "epoch": 31,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": {
        "ref": "secretflow/object/python/ray/objectref/ObjectRef(85748392bcd969ccffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33c59ac10+1",
            "name": "get_shares_chunk_count"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)",
              "name": "data"
            },
            {
              "kind": "local_object",
              "ref": "python/id/0x17ee82ac0+1",
              "name": "runtime_config"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb80",
              "name": "world_size"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
              "name": "vtype"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(85748392bcd969ccffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "shares_chunk_count"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x9fbc1d40fae18b9e",
          "parent_span_id": "0x159bd7cac84c5c87",
          "start_time": "2023-11-29T03:25:27.219641+00:00",
          "end_time": "2023-11-29T03:25:27.225145+00:00",
          "epoch": 29,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c3a7f00" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x3fc090088608e4f4",
          "parent_span_id": "0x159bd7cac84c5c87",
          "start_time": "2023-11-29T03:25:27.242183+00:00",
          "end_time": "2023-11-29T03:25:27.249989+00:00",
          "epoch": 30,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(85748392bcd969ccffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xfe442a515ec9b715",
      "parent_span_id": "0x0cad85d2373ad487",
      "start_time": "2023-11-29T03:25:27.267904+00:00",
      "end_time": "2023-11-29T03:25:27.271227+00:00",
      "epoch": 32,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x1d051b308299dc42",
      "parent_span_id": "0x327c4cfbec04adbd",
      "start_time": "2023-11-29T03:25:27.290731+00:00",
      "end_time": "2023-11-29T03:25:27.296449+00:00",
      "epoch": 33,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c4b0100" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x717cacdc997f75e6",
      "parent_span_id": "0x327c4cfbec04adbd",
      "start_time": "2023-11-29T03:25:27.313385+00:00",
      "end_time": "2023-11-29T03:25:27.321583+00:00",
      "epoch": 34,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c5fbe40" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x327c4cfbec04adbd",
      "parent_span_id": "0x0cad85d2373ad487",
      "start_time": "2023-11-29T03:25:27.281894+00:00",
      "end_time": "2023-11-29T03:25:27.327484+00:00",
      "epoch": 35,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c386780" },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33c59adc0+1",
            "name": "run_spu_io"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)",
              "name": "data"
            },
            {
              "kind": "local_object",
              "ref": "python/id/0x17ee82ac0+1",
              "name": "runtime_config"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb80",
              "name": "world_size"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
              "name": "vtype"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "[0]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "[1]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "[2]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "[3]"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x1d051b308299dc42",
          "parent_span_id": "0x327c4cfbec04adbd",
          "start_time": "2023-11-29T03:25:27.290731+00:00",
          "end_time": "2023-11-29T03:25:27.296449+00:00",
          "epoch": 33,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c4b0100" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x717cacdc997f75e6",
          "parent_span_id": "0x327c4cfbec04adbd",
          "start_time": "2023-11-29T03:25:27.313385+00:00",
          "end_time": "2023-11-29T03:25:27.321583+00:00",
          "epoch": 34,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c5fbe40" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xc8a9df074936207c",
      "parent_span_id": "0xfa389594ed8af619",
      "start_time": "2023-11-29T03:25:27.346456+00:00",
      "end_time": "2023-11-29T03:25:27.349340+00:00",
      "epoch": 36,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(2751d69548dba956af23b462bfe8c365427a357b0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x73e83936666ddebb",
      "parent_span_id": "0xfa389594ed8af619",
      "start_time": "2023-11-29T03:25:27.362605+00:00",
      "end_time": "2023-11-29T03:25:27.366307+00:00",
      "epoch": 37,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(71b133a11e1c461ce11e0e6b35627ffff00336110100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xfa389594ed8af619",
      "parent_span_id": "0x0cad85d2373ad487",
      "start_time": "2023-11-29T03:25:27.337604+00:00",
      "end_time": "2023-11-29T03:25:27.371946+00:00",
      "epoch": 38,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x17b130ee0+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c549780" },
      "expressions": [],
      "inner_frames": [
        {
          "span_id": "0xc8a9df074936207c",
          "parent_span_id": "0xfa389594ed8af619",
          "start_time": "2023-11-29T03:25:27.346456+00:00",
          "end_time": "2023-11-29T03:25:27.349340+00:00",
          "epoch": 36,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(2751d69548dba956af23b462bfe8c365427a357b0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x73e83936666ddebb",
          "parent_span_id": "0xfa389594ed8af619",
          "start_time": "2023-11-29T03:25:27.362605+00:00",
          "end_time": "2023-11-29T03:25:27.366307+00:00",
          "epoch": 37,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(71b133a11e1c461ce11e0e6b35627ffff00336110100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x0cad85d2373ad487",
      "start_time": "2023-11-29T03:25:27.203317+00:00",
      "end_time": "2023-11-29T03:25:27.377662+00:00",
      "epoch": 39,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b1528b0+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x17b5bc630/line/48" },
      "retval": {
        "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "remote_object",
            "numbering": 4,
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)",
            "location": {
              "kind": "location",
              "type": "PYU",
              "parties": ["bob"],
              "parameters": {}
            }
          },
          "target": {
            "kind": "remote_object",
            "numbering": 7,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            },
            "name": "y"
          }
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x159bd7cac84c5c87",
          "parent_span_id": "0x0cad85d2373ad487",
          "start_time": "2023-11-29T03:25:27.210818+00:00",
          "end_time": "2023-11-29T03:25:27.254928+00:00",
          "epoch": 31,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/none" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
          "retval": {
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(85748392bcd969ccffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [
            {
              "kind": "exec",
              "function": {
                "kind": "local_object",
                "ref": "python/id/0x33c59ac10+1",
                "name": "get_shares_chunk_count"
              },
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "boundvars": [
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)",
                  "name": "data"
                },
                {
                  "kind": "local_object",
                  "ref": "python/id/0x17ee82ac0+1",
                  "name": "runtime_config"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x106d0bb80",
                  "name": "world_size"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
                  "name": "vtype"
                }
              ],
              "freevars": [],
              "results": [
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(85748392bcd969ccffffffffffffffffffffffff0100000001000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["bob"],
                    "parameters": {}
                  },
                  "name": "shares_chunk_count"
                }
              ]
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0xfe442a515ec9b715",
          "parent_span_id": "0x0cad85d2373ad487",
          "start_time": "2023-11-29T03:25:27.267904+00:00",
          "end_time": "2023-11-29T03:25:27.271227+00:00",
          "epoch": 32,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x327c4cfbec04adbd",
          "parent_span_id": "0x0cad85d2373ad487",
          "start_time": "2023-11-29T03:25:27.281894+00:00",
          "end_time": "2023-11-29T03:25:27.327484+00:00",
          "epoch": 35,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/none" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c386780" },
          "expressions": [
            {
              "kind": "exec",
              "function": {
                "kind": "local_object",
                "ref": "python/id/0x33c59adc0+1",
                "name": "run_spu_io"
              },
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "boundvars": [
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)",
                  "name": "data"
                },
                {
                  "kind": "local_object",
                  "ref": "python/id/0x17ee82ac0+1",
                  "name": "runtime_config"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x106d0bb80",
                  "name": "world_size"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
                  "name": "vtype"
                }
              ],
              "freevars": [],
              "results": [
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["bob"],
                    "parameters": {}
                  },
                  "name": "[0]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000002000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["bob"],
                    "parameters": {}
                  },
                  "name": "[1]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000003000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["bob"],
                    "parameters": {}
                  },
                  "name": "[2]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000004000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["bob"],
                    "parameters": {}
                  },
                  "name": "[3]"
                }
              ]
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0xfa389594ed8af619",
          "parent_span_id": "0x0cad85d2373ad487",
          "start_time": "2023-11-29T03:25:27.337604+00:00",
          "end_time": "2023-11-29T03:25:27.371946+00:00",
          "epoch": 38,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x17b130ee0+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c549780" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xcde6b77c96aac161",
      "parent_span_id": "0x96afea0794a040bf",
      "start_time": "2023-11-29T03:25:27.462713+00:00",
      "end_time": "2023-11-29T03:25:27.464964+00:00",
      "epoch": 40,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c3aef40" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x062049efd30d30d2",
      "parent_span_id": "0x96afea0794a040bf",
      "start_time": "2023-11-29T03:25:27.483093+00:00",
      "end_time": "2023-11-29T03:25:27.491056+00:00",
      "epoch": 41,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x96afea0794a040bf",
      "start_time": "2023-11-29T03:25:27.451193+00:00",
      "end_time": "2023-11-29T03:25:27.498151+00:00",
      "epoch": 42,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": {
        "ref": "secretflow/object/python/ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "local_object",
            "ref": "python/id/0x2afef1a40+1",
            "name": "x"
          },
          "target": {
            "kind": "remote_object",
            "numbering": 8,
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "PYU",
              "parties": ["alice"],
              "parameters": {}
            },
            "name": "weights"
          }
        }
      ],
      "inner_frames": [
        {
          "span_id": "0xcde6b77c96aac161",
          "parent_span_id": "0x96afea0794a040bf",
          "start_time": "2023-11-29T03:25:27.462713+00:00",
          "end_time": "2023-11-29T03:25:27.464964+00:00",
          "epoch": 40,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c3aef40" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x062049efd30d30d2",
          "parent_span_id": "0x96afea0794a040bf",
          "start_time": "2023-11-29T03:25:27.483093+00:00",
          "end_time": "2023-11-29T03:25:27.491056+00:00",
          "epoch": 41,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x9d3cec3c43927cef",
      "parent_span_id": "0x6a72a96718270635",
      "start_time": "2023-11-29T03:25:27.526429+00:00",
      "end_time": "2023-11-29T03:25:27.530148+00:00",
      "epoch": 43,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33de5ec80" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xd1edcc0f1c5eb18d",
      "parent_span_id": "0x6a72a96718270635",
      "start_time": "2023-11-29T03:25:27.549191+00:00",
      "end_time": "2023-11-29T03:25:27.557261+00:00",
      "epoch": 44,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(c54e76759b2a0c10ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x6a72a96718270635",
      "parent_span_id": "0x64d82aee8137b031",
      "start_time": "2023-11-29T03:25:27.517300+00:00",
      "end_time": "2023-11-29T03:25:27.563497+00:00",
      "epoch": 45,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": {
        "ref": "secretflow/object/python/ray/objectref/ObjectRef(c54e76759b2a0c10ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33de6b310+1",
            "name": "get_shares_chunk_count"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["alice"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)",
              "name": "data"
            },
            {
              "kind": "local_object",
              "ref": "python/id/0x17ee82ac0+1",
              "name": "runtime_config"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb80",
              "name": "world_size"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
              "name": "vtype"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(c54e76759b2a0c10ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "shares_chunk_count"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x9d3cec3c43927cef",
          "parent_span_id": "0x6a72a96718270635",
          "start_time": "2023-11-29T03:25:27.526429+00:00",
          "end_time": "2023-11-29T03:25:27.530148+00:00",
          "epoch": 43,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33de5ec80" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xd1edcc0f1c5eb18d",
          "parent_span_id": "0x6a72a96718270635",
          "start_time": "2023-11-29T03:25:27.549191+00:00",
          "end_time": "2023-11-29T03:25:27.557261+00:00",
          "epoch": 44,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(c54e76759b2a0c10ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x2a7c016b30f5dcc6",
      "parent_span_id": "0x64d82aee8137b031",
      "start_time": "2023-11-29T03:25:27.575304+00:00",
      "end_time": "2023-11-29T03:25:27.578637+00:00",
      "epoch": 46,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x4fa9c27640f47e73",
      "parent_span_id": "0xc7794f280c0985a4",
      "start_time": "2023-11-29T03:25:27.598406+00:00",
      "end_time": "2023-11-29T03:25:27.601933+00:00",
      "epoch": 47,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e08c9c0" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xc961cc541a8bcbb3",
      "parent_span_id": "0xc7794f280c0985a4",
      "start_time": "2023-11-29T03:25:27.618835+00:00",
      "end_time": "2023-11-29T03:25:27.628015+00:00",
      "epoch": 48,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e21ecc0" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xc7794f280c0985a4",
      "parent_span_id": "0x64d82aee8137b031",
      "start_time": "2023-11-29T03:25:27.589426+00:00",
      "end_time": "2023-11-29T03:25:27.633745+00:00",
      "epoch": 49,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e24ee00" },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33de6b1f0+1",
            "name": "run_spu_io"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["alice"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)",
              "name": "data"
            },
            {
              "kind": "local_object",
              "ref": "python/id/0x17ee82ac0+1",
              "name": "runtime_config"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb80",
              "name": "world_size"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
              "name": "vtype"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "[0]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "[1]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "[2]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "[3]"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x4fa9c27640f47e73",
          "parent_span_id": "0xc7794f280c0985a4",
          "start_time": "2023-11-29T03:25:27.598406+00:00",
          "end_time": "2023-11-29T03:25:27.601933+00:00",
          "epoch": 47,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e08c9c0" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xc961cc541a8bcbb3",
          "parent_span_id": "0xc7794f280c0985a4",
          "start_time": "2023-11-29T03:25:27.618835+00:00",
          "end_time": "2023-11-29T03:25:27.628015+00:00",
          "epoch": 48,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e21ecc0" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x7c77fef732a0f51f",
      "parent_span_id": "0xbf366b0715293db1",
      "start_time": "2023-11-29T03:25:27.650710+00:00",
      "end_time": "2023-11-29T03:25:27.653719+00:00",
      "epoch": 50,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(1e360ffa862f8fe3af23b462bfe8c365427a357b0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x0fc44a5b555084a8",
      "parent_span_id": "0xbf366b0715293db1",
      "start_time": "2023-11-29T03:25:27.663501+00:00",
      "end_time": "2023-11-29T03:25:27.666387+00:00",
      "epoch": 51,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(18b2ad3c688fb947e11e0e6b35627ffff00336110100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xbf366b0715293db1",
      "parent_span_id": "0x64d82aee8137b031",
      "start_time": "2023-11-29T03:25:27.643417+00:00",
      "end_time": "2023-11-29T03:25:27.670635+00:00",
      "epoch": 52,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x17b130ee0+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e231280" },
      "expressions": [],
      "inner_frames": [
        {
          "span_id": "0x7c77fef732a0f51f",
          "parent_span_id": "0xbf366b0715293db1",
          "start_time": "2023-11-29T03:25:27.650710+00:00",
          "end_time": "2023-11-29T03:25:27.653719+00:00",
          "epoch": 50,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(1e360ffa862f8fe3af23b462bfe8c365427a357b0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x0fc44a5b555084a8",
          "parent_span_id": "0xbf366b0715293db1",
          "start_time": "2023-11-29T03:25:27.663501+00:00",
          "end_time": "2023-11-29T03:25:27.666387+00:00",
          "epoch": 51,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(18b2ad3c688fb947e11e0e6b35627ffff00336110100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x64d82aee8137b031",
      "start_time": "2023-11-29T03:25:27.509468+00:00",
      "end_time": "2023-11-29T03:25:27.677227+00:00",
      "epoch": 53,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b1528b0+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x17b5bc630/line/48" },
      "retval": {
        "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "remote_object",
            "numbering": 8,
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "PYU",
              "parties": ["alice"],
              "parameters": {}
            }
          },
          "target": {
            "kind": "remote_object",
            "numbering": 9,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            },
            "name": "weights"
          }
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x6a72a96718270635",
          "parent_span_id": "0x64d82aee8137b031",
          "start_time": "2023-11-29T03:25:27.517300+00:00",
          "end_time": "2023-11-29T03:25:27.563497+00:00",
          "epoch": 45,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/none" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
          "retval": {
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(c54e76759b2a0c10ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [
            {
              "kind": "exec",
              "function": {
                "kind": "local_object",
                "ref": "python/id/0x33de6b310+1",
                "name": "get_shares_chunk_count"
              },
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "boundvars": [
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)",
                  "name": "data"
                },
                {
                  "kind": "local_object",
                  "ref": "python/id/0x17ee82ac0+1",
                  "name": "runtime_config"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x106d0bb80",
                  "name": "world_size"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
                  "name": "vtype"
                }
              ],
              "freevars": [],
              "results": [
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(c54e76759b2a0c10ffffffffffffffffffffffff0100000001000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "shares_chunk_count"
                }
              ]
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0x2a7c016b30f5dcc6",
          "parent_span_id": "0x64d82aee8137b031",
          "start_time": "2023-11-29T03:25:27.575304+00:00",
          "end_time": "2023-11-29T03:25:27.578637+00:00",
          "epoch": 46,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xc7794f280c0985a4",
          "parent_span_id": "0x64d82aee8137b031",
          "start_time": "2023-11-29T03:25:27.589426+00:00",
          "end_time": "2023-11-29T03:25:27.633745+00:00",
          "epoch": 49,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/none" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e24ee00" },
          "expressions": [
            {
              "kind": "exec",
              "function": {
                "kind": "local_object",
                "ref": "python/id/0x33de6b1f0+1",
                "name": "run_spu_io"
              },
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "boundvars": [
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)",
                  "name": "data"
                },
                {
                  "kind": "local_object",
                  "ref": "python/id/0x17ee82ac0+1",
                  "name": "runtime_config"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x106d0bb80",
                  "name": "world_size"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
                  "name": "vtype"
                }
              ],
              "freevars": [],
              "results": [
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "[0]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000002000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "[1]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000003000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "[2]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000004000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "[3]"
                }
              ]
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0xbf366b0715293db1",
          "parent_span_id": "0x64d82aee8137b031",
          "start_time": "2023-11-29T03:25:27.643417+00:00",
          "end_time": "2023-11-29T03:25:27.670635+00:00",
          "epoch": 52,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x17b130ee0+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e231280" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xa1f5d989968a73d9",
      "parent_span_id": "0xc5e472859c59f2c6",
      "start_time": "2023-11-29T03:25:27.695606+00:00",
      "end_time": "2023-11-29T03:25:27.697682+00:00",
      "epoch": 54,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e2313c0" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x44f6583e9622e8f6",
      "parent_span_id": "0xc5e472859c59f2c6",
      "start_time": "2023-11-29T03:25:27.713853+00:00",
      "end_time": "2023-11-29T03:25:27.720999+00:00",
      "epoch": 55,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xc5e472859c59f2c6",
      "start_time": "2023-11-29T03:25:27.687008+00:00",
      "end_time": "2023-11-29T03:25:27.727752+00:00",
      "epoch": 56,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": {
        "ref": "secretflow/object/python/ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "local_object",
            "ref": "otel/span/0x0/transient/id/0x33ace8670",
            "name": "x"
          },
          "target": {
            "kind": "remote_object",
            "numbering": 10,
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "PYU",
              "parties": ["alice"],
              "parameters": {}
            },
            "name": "bias"
          }
        }
      ],
      "inner_frames": [
        {
          "span_id": "0xa1f5d989968a73d9",
          "parent_span_id": "0xc5e472859c59f2c6",
          "start_time": "2023-11-29T03:25:27.695606+00:00",
          "end_time": "2023-11-29T03:25:27.697682+00:00",
          "epoch": 54,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e2313c0" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x44f6583e9622e8f6",
          "parent_span_id": "0xc5e472859c59f2c6",
          "start_time": "2023-11-29T03:25:27.713853+00:00",
          "end_time": "2023-11-29T03:25:27.720999+00:00",
          "epoch": 55,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xd0dea8b83b8c8943",
      "parent_span_id": "0x666d97a7912fe492",
      "start_time": "2023-11-29T03:25:27.754103+00:00",
      "end_time": "2023-11-29T03:25:27.756392+00:00",
      "epoch": 57,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e08c800" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xdc16abca4808d148",
      "parent_span_id": "0x666d97a7912fe492",
      "start_time": "2023-11-29T03:25:27.772316+00:00",
      "end_time": "2023-11-29T03:25:27.779951+00:00",
      "epoch": 58,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(c76a79b2875a7251ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x666d97a7912fe492",
      "parent_span_id": "0x2454b79f3ad51bbb",
      "start_time": "2023-11-29T03:25:27.745273+00:00",
      "end_time": "2023-11-29T03:25:27.785176+00:00",
      "epoch": 59,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": {
        "ref": "secretflow/object/python/ray/objectref/ObjectRef(c76a79b2875a7251ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33de6b790+1",
            "name": "get_shares_chunk_count"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["alice"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)",
              "name": "data"
            },
            {
              "kind": "local_object",
              "ref": "python/id/0x17ee82ac0+1",
              "name": "runtime_config"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb80",
              "name": "world_size"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
              "name": "vtype"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(c76a79b2875a7251ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "shares_chunk_count"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0xd0dea8b83b8c8943",
          "parent_span_id": "0x666d97a7912fe492",
          "start_time": "2023-11-29T03:25:27.754103+00:00",
          "end_time": "2023-11-29T03:25:27.756392+00:00",
          "epoch": 57,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e08c800" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xdc16abca4808d148",
          "parent_span_id": "0x666d97a7912fe492",
          "start_time": "2023-11-29T03:25:27.772316+00:00",
          "end_time": "2023-11-29T03:25:27.779951+00:00",
          "epoch": 58,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(c76a79b2875a7251ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x72891b6b58b007e7",
      "parent_span_id": "0x2454b79f3ad51bbb",
      "start_time": "2023-11-29T03:25:27.795616+00:00",
      "end_time": "2023-11-29T03:25:27.798806+00:00",
      "epoch": 60,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x8b0c9c252c888c50",
      "parent_span_id": "0xa48f312d213180b5",
      "start_time": "2023-11-29T03:25:27.817907+00:00",
      "end_time": "2023-11-29T03:25:27.820162+00:00",
      "epoch": 61,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c3b0940" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x3b27b591a8a63949",
      "parent_span_id": "0xa48f312d213180b5",
      "start_time": "2023-11-29T03:25:27.836287+00:00",
      "end_time": "2023-11-29T03:25:27.844158+00:00",
      "epoch": 62,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e26fd00" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xa48f312d213180b5",
      "parent_span_id": "0x2454b79f3ad51bbb",
      "start_time": "2023-11-29T03:25:27.809107+00:00",
      "end_time": "2023-11-29T03:25:27.851149+00:00",
      "epoch": 63,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e2aee00" },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33c674c10+1",
            "name": "run_spu_io"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["alice"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)",
              "name": "data"
            },
            {
              "kind": "local_object",
              "ref": "python/id/0x17ee82ac0+1",
              "name": "runtime_config"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb80",
              "name": "world_size"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
              "name": "vtype"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "[0]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "[1]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "[2]"
            },
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "name": "[3]"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x8b0c9c252c888c50",
          "parent_span_id": "0xa48f312d213180b5",
          "start_time": "2023-11-29T03:25:27.817907+00:00",
          "end_time": "2023-11-29T03:25:27.820162+00:00",
          "epoch": 61,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c3b0940" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x3b27b591a8a63949",
          "parent_span_id": "0xa48f312d213180b5",
          "start_time": "2023-11-29T03:25:27.836287+00:00",
          "end_time": "2023-11-29T03:25:27.844158+00:00",
          "epoch": 62,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e26fd00" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x652f5ed4af7f0303",
      "parent_span_id": "0x5b4d5eec4961978d",
      "start_time": "2023-11-29T03:25:27.868437+00:00",
      "end_time": "2023-11-29T03:25:27.871600+00:00",
      "epoch": 64,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(3d3e27c54ed1f5cfaf23b462bfe8c365427a357b0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x5a53aef1ca172c9c",
      "parent_span_id": "0x5b4d5eec4961978d",
      "start_time": "2023-11-29T03:25:27.881489+00:00",
      "end_time": "2023-11-29T03:25:27.884400+00:00",
      "epoch": 65,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(cae5e964086715a4e11e0e6b35627ffff00336110100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x5b4d5eec4961978d",
      "parent_span_id": "0x2454b79f3ad51bbb",
      "start_time": "2023-11-29T03:25:27.861151+00:00",
      "end_time": "2023-11-29T03:25:27.890518+00:00",
      "epoch": 66,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x17b130ee0+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e28bb80" },
      "expressions": [],
      "inner_frames": [
        {
          "span_id": "0x652f5ed4af7f0303",
          "parent_span_id": "0x5b4d5eec4961978d",
          "start_time": "2023-11-29T03:25:27.868437+00:00",
          "end_time": "2023-11-29T03:25:27.871600+00:00",
          "epoch": 64,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(3d3e27c54ed1f5cfaf23b462bfe8c365427a357b0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x5a53aef1ca172c9c",
          "parent_span_id": "0x5b4d5eec4961978d",
          "start_time": "2023-11-29T03:25:27.881489+00:00",
          "end_time": "2023-11-29T03:25:27.884400+00:00",
          "epoch": 65,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(cae5e964086715a4e11e0e6b35627ffff00336110100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x2454b79f3ad51bbb",
      "start_time": "2023-11-29T03:25:27.737459+00:00",
      "end_time": "2023-11-29T03:25:27.895640+00:00",
      "epoch": 67,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x65f4b296d58b5448",
            "module": "secretflow.device.kernels.pyu",
            "name": "pyu_to_spu"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b1528b0+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x17b5bc630/line/48" },
      "retval": {
        "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "remote_object",
            "numbering": 10,
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "PYU",
              "parties": ["alice"],
              "parameters": {}
            }
          },
          "target": {
            "kind": "remote_object",
            "numbering": 11,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            },
            "name": "bias"
          }
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x666d97a7912fe492",
          "parent_span_id": "0x2454b79f3ad51bbb",
          "start_time": "2023-11-29T03:25:27.745273+00:00",
          "end_time": "2023-11-29T03:25:27.785176+00:00",
          "epoch": 59,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/none" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
          "retval": {
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(c76a79b2875a7251ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [
            {
              "kind": "exec",
              "function": {
                "kind": "local_object",
                "ref": "python/id/0x33de6b790+1",
                "name": "get_shares_chunk_count"
              },
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "boundvars": [
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)",
                  "name": "data"
                },
                {
                  "kind": "local_object",
                  "ref": "python/id/0x17ee82ac0+1",
                  "name": "runtime_config"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x106d0bb80",
                  "name": "world_size"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
                  "name": "vtype"
                }
              ],
              "freevars": [],
              "results": [
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(c76a79b2875a7251ffffffffffffffffffffffff0100000001000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "shares_chunk_count"
                }
              ]
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0x72891b6b58b007e7",
          "parent_span_id": "0x2454b79f3ad51bbb",
          "start_time": "2023-11-29T03:25:27.795616+00:00",
          "end_time": "2023-11-29T03:25:27.798806+00:00",
          "epoch": 60,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xa48f312d213180b5",
          "parent_span_id": "0x2454b79f3ad51bbb",
          "start_time": "2023-11-29T03:25:27.809107+00:00",
          "end_time": "2023-11-29T03:25:27.851149+00:00",
          "epoch": 63,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/none" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e2aee00" },
          "expressions": [
            {
              "kind": "exec",
              "function": {
                "kind": "local_object",
                "ref": "python/id/0x33c674c10+1",
                "name": "run_spu_io"
              },
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["alice"],
                "parameters": {}
              },
              "boundvars": [
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)",
                  "name": "data"
                },
                {
                  "kind": "local_object",
                  "ref": "python/id/0x17ee82ac0+1",
                  "name": "runtime_config"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x106d0bb80",
                  "name": "world_size"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x12f1b35f0",
                  "name": "vtype"
                }
              ],
              "freevars": [],
              "results": [
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "[0]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000002000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "[1]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000003000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "[2]"
                },
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000004000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["alice"],
                    "parameters": {}
                  },
                  "name": "[3]"
                }
              ]
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0x5b4d5eec4961978d",
          "parent_span_id": "0x2454b79f3ad51bbb",
          "start_time": "2023-11-29T03:25:27.861151+00:00",
          "end_time": "2023-11-29T03:25:27.890518+00:00",
          "epoch": 66,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x65f4b296d58b5448",
                "module": "secretflow.device.kernels.pyu",
                "name": "pyu_to_spu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x17b130ee0+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e28bb80" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xec52804a02790516",
      "parent_span_id": "0x0b5b5fb9f060b488",
      "start_time": "2023-11-29T03:25:27.926357+00:00",
      "end_time": "2023-11-29T03:25:27.988166+00:00",
      "epoch": 68,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x171c3da78111860a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x5020bd415d3b2d4d",
            "module": "secretflow.device.kernels.spu",
            "name": "spu_to_spu"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b152d30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d1a1fa0/line/53" },
      "retval": {
        "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "remote_object",
            "numbering": -1,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            }
          },
          "target": {
            "kind": "remote_object",
            "numbering": -1,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            },
            "name": ""
          }
        }
      ],
      "inner_frames": []
    },
    {
      "span_id": "0x7bd868aa44588439",
      "parent_span_id": "0x0b5b5fb9f060b488",
      "start_time": "2023-11-29T03:25:27.934019+00:00",
      "end_time": "2023-11-29T03:25:27.994228+00:00",
      "epoch": 69,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x171c3da78111860a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x5020bd415d3b2d4d",
            "module": "secretflow.device.kernels.spu",
            "name": "spu_to_spu"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b152d30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d1a1fa0/line/53" },
      "retval": {
        "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "remote_object",
            "numbering": -1,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            }
          },
          "target": {
            "kind": "remote_object",
            "numbering": -1,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            },
            "name": ""
          }
        }
      ],
      "inner_frames": []
    },
    {
      "span_id": "0xb639031b9cb361ca",
      "parent_span_id": "0x0b5b5fb9f060b488",
      "start_time": "2023-11-29T03:25:27.941655+00:00",
      "end_time": "2023-11-29T03:25:28.004989+00:00",
      "epoch": 70,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x171c3da78111860a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x5020bd415d3b2d4d",
            "module": "secretflow.device.kernels.spu",
            "name": "spu_to_spu"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b152d30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d1a1fa0/line/53" },
      "retval": {
        "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "remote_object",
            "numbering": -1,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            }
          },
          "target": {
            "kind": "remote_object",
            "numbering": -1,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            },
            "name": ""
          }
        }
      ],
      "inner_frames": []
    },
    {
      "span_id": "0xb656e7f18be2f5d1",
      "parent_span_id": "0x0b5b5fb9f060b488",
      "start_time": "2023-11-29T03:25:27.949138+00:00",
      "end_time": "2023-11-29T03:25:28.012644+00:00",
      "epoch": 71,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x171c3da78111860a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x5020bd415d3b2d4d",
            "module": "secretflow.device.kernels.spu",
            "name": "spu_to_spu"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b152d30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d1a1fa0/line/53" },
      "retval": {
        "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "remote_object",
            "numbering": -1,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            }
          },
          "target": {
            "kind": "remote_object",
            "numbering": -1,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            },
            "name": ""
          }
        }
      ],
      "inner_frames": []
    },
    {
      "span_id": "0x9f098b9e54ba1fe1",
      "parent_span_id": "0x0b5b5fb9f060b488",
      "start_time": "2023-11-29T03:25:27.956486+00:00",
      "end_time": "2023-11-29T03:25:28.020672+00:00",
      "epoch": 72,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x171c3da78111860a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x5020bd415d3b2d4d",
            "module": "secretflow.device.kernels.spu",
            "name": "spu_to_spu"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b152d30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d1a1fa0/line/53" },
      "retval": {
        "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "remote_object",
            "numbering": -1,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            }
          },
          "target": {
            "kind": "remote_object",
            "numbering": -1,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            },
            "name": ""
          }
        }
      ],
      "inner_frames": []
    },
    {
      "span_id": "0x76fb8f4f1c5e3186",
      "parent_span_id": "0x1ed7cfff64e4b078",
      "start_time": "2023-11-29T03:25:27.984287+00:00",
      "end_time": "2023-11-29T03:25:28.027689+00:00",
      "epoch": 73,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(bcb4fef46b376cafaf23b462bfe8c365427a357b0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x7d6d04589e7ae886",
      "parent_span_id": "0x1ed7cfff64e4b078",
      "start_time": "2023-11-29T03:25:28.039182+00:00",
      "end_time": "2023-11-29T03:25:28.042525+00:00",
      "epoch": 74,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(88543757a8df6d2fe11e0e6b35627ffff00336110100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x1ed7cfff64e4b078",
      "parent_span_id": "0x0b5b5fb9f060b488",
      "start_time": "2023-11-29T03:25:27.976524+00:00",
      "end_time": "2023-11-29T03:25:28.056877+00:00",
      "epoch": 75,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x171c3da78111860a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x1739b280de3cc65a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.infeed_shares"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x17b130ee0+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e231080" },
      "expressions": [],
      "inner_frames": [
        {
          "span_id": "0x76fb8f4f1c5e3186",
          "parent_span_id": "0x1ed7cfff64e4b078",
          "start_time": "2023-11-29T03:25:27.984287+00:00",
          "end_time": "2023-11-29T03:25:28.027689+00:00",
          "epoch": 73,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(bcb4fef46b376cafaf23b462bfe8c365427a357b0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x7d6d04589e7ae886",
          "parent_span_id": "0x1ed7cfff64e4b078",
          "start_time": "2023-11-29T03:25:28.039182+00:00",
          "end_time": "2023-11-29T03:25:28.042525+00:00",
          "epoch": 74,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(88543757a8df6d2fe11e0e6b35627ffff00336110100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xbd105c67d3132f8b",
      "parent_span_id": "0x0b5b5fb9f060b488",
      "start_time": "2023-11-29T03:25:28.069450+00:00",
      "end_time": "2023-11-29T03:25:28.075918+00:00",
      "epoch": 76,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x171c3da78111860a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e536340" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xc3ba0bbea9bf7b6a",
      "parent_span_id": "0x0b5b5fb9f060b488",
      "start_time": "2023-11-29T03:25:28.093216+00:00",
      "end_time": "2023-11-29T03:25:28.128272+00:00",
      "epoch": 77,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x171c3da78111860a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e3a26c0" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x5150342414c0e06c",
      "parent_span_id": "0x0b5b5fb9f060b488",
      "start_time": "2023-11-29T03:25:28.145152+00:00",
      "end_time": "2023-11-29T03:25:28.159049+00:00",
      "epoch": 78,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x171c3da78111860a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e56aa80" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xc7e27320a46ee47a",
      "parent_span_id": "0x0b5b5fb9f060b488",
      "start_time": "2023-11-29T03:25:28.169951+00:00",
      "end_time": "2023-11-29T03:25:28.175602+00:00",
      "epoch": 79,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x171c3da78111860a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e592880" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x0b5b5fb9f060b488",
      "start_time": "2023-11-29T03:25:27.908860+00:00",
      "end_time": "2023-11-29T03:25:28.189727+00:00",
      "epoch": 80,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x171c3da78111860a",
            "module": "secretflow.device.device.spu",
            "name": "SPU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2afeda6a0/line/1745" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e544c80" },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33b827ca0+1",
            "name": "logistic_regression"
          },
          "location": {
            "kind": "location",
            "type": "SPU",
            "parties": ["alice", "bob"],
            "parameters": {
              "protocol": "SEMI2K",
              "field": "FM128",
              "fxp_fraction_bits": 0
            }
          },
          "boundvars": [
            {
              "kind": "remote_object",
              "numbering": 9,
              "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "SPU",
                "parties": ["alice", "bob"],
                "parameters": {
                  "protocol": "SEMI2K",
                  "field": "FM128",
                  "fxp_fraction_bits": 0
                }
              },
              "name": "weights"
            },
            {
              "kind": "remote_object",
              "numbering": 11,
              "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "SPU",
                "parties": ["alice", "bob"],
                "parameters": {
                  "protocol": "SEMI2K",
                  "field": "FM128",
                  "fxp_fraction_bits": 0
                }
              },
              "name": "bias"
            },
            {
              "kind": "remote_object",
              "numbering": 5,
              "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "SPU",
                "parties": ["alice", "bob"],
                "parameters": {
                  "protocol": "SEMI2K",
                  "field": "FM128",
                  "fxp_fraction_bits": 0
                }
              },
              "name": "x1"
            },
            {
              "kind": "remote_object",
              "numbering": 6,
              "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "SPU",
                "parties": ["alice", "bob"],
                "parameters": {
                  "protocol": "SEMI2K",
                  "field": "FM128",
                  "fxp_fraction_bits": 0
                }
              },
              "name": "x2"
            },
            {
              "kind": "remote_object",
              "numbering": 7,
              "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "SPU",
                "parties": ["alice", "bob"],
                "parameters": {
                  "protocol": "SEMI2K",
                  "field": "FM128",
                  "fxp_fraction_bits": 0
                }
              },
              "name": "y"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bc80",
              "name": "epochs"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x33b6e6770",
              "name": "learning_rate"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": 12,
              "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)",
              "location": {
                "kind": "location",
                "type": "SPU",
                "parties": ["alice", "bob"],
                "parameters": {
                  "protocol": "SEMI2K",
                  "field": "FM128",
                  "fxp_fraction_bits": 0
                }
              },
              "name": "[0]"
            },
            {
              "kind": "remote_object",
              "numbering": 13,
              "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)",
              "location": {
                "kind": "location",
                "type": "SPU",
                "parties": ["alice", "bob"],
                "parameters": {
                  "protocol": "SEMI2K",
                  "field": "FM128",
                  "fxp_fraction_bits": 0
                }
              },
              "name": "[1]"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0xec52804a02790516",
          "parent_span_id": "0x0b5b5fb9f060b488",
          "start_time": "2023-11-29T03:25:27.926357+00:00",
          "end_time": "2023-11-29T03:25:27.988166+00:00",
          "epoch": 68,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x171c3da78111860a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x5020bd415d3b2d4d",
                "module": "secretflow.device.kernels.spu",
                "name": "spu_to_spu"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/id/0x17b152d30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d1a1fa0/line/53" },
          "retval": {
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [
            {
              "kind": "move",
              "source": {
                "kind": "remote_object",
                "numbering": -1,
                "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)",
                "location": {
                  "kind": "location",
                  "type": "SPU",
                  "parties": ["alice", "bob"],
                  "parameters": {
                    "protocol": "SEMI2K",
                    "field": "FM128",
                    "fxp_fraction_bits": 0
                  }
                }
              },
              "target": {
                "kind": "remote_object",
                "numbering": -1,
                "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)",
                "location": {
                  "kind": "location",
                  "type": "SPU",
                  "parties": ["alice", "bob"],
                  "parameters": {
                    "protocol": "SEMI2K",
                    "field": "FM128",
                    "fxp_fraction_bits": 0
                  }
                },
                "name": ""
              }
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0x7bd868aa44588439",
          "parent_span_id": "0x0b5b5fb9f060b488",
          "start_time": "2023-11-29T03:25:27.934019+00:00",
          "end_time": "2023-11-29T03:25:27.994228+00:00",
          "epoch": 69,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x171c3da78111860a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x5020bd415d3b2d4d",
                "module": "secretflow.device.kernels.spu",
                "name": "spu_to_spu"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/id/0x17b152d30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d1a1fa0/line/53" },
          "retval": {
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [
            {
              "kind": "move",
              "source": {
                "kind": "remote_object",
                "numbering": -1,
                "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)",
                "location": {
                  "kind": "location",
                  "type": "SPU",
                  "parties": ["alice", "bob"],
                  "parameters": {
                    "protocol": "SEMI2K",
                    "field": "FM128",
                    "fxp_fraction_bits": 0
                  }
                }
              },
              "target": {
                "kind": "remote_object",
                "numbering": -1,
                "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)",
                "location": {
                  "kind": "location",
                  "type": "SPU",
                  "parties": ["alice", "bob"],
                  "parameters": {
                    "protocol": "SEMI2K",
                    "field": "FM128",
                    "fxp_fraction_bits": 0
                  }
                },
                "name": ""
              }
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0xb639031b9cb361ca",
          "parent_span_id": "0x0b5b5fb9f060b488",
          "start_time": "2023-11-29T03:25:27.941655+00:00",
          "end_time": "2023-11-29T03:25:28.004989+00:00",
          "epoch": 70,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x171c3da78111860a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x5020bd415d3b2d4d",
                "module": "secretflow.device.kernels.spu",
                "name": "spu_to_spu"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/id/0x17b152d30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d1a1fa0/line/53" },
          "retval": {
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [
            {
              "kind": "move",
              "source": {
                "kind": "remote_object",
                "numbering": -1,
                "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)",
                "location": {
                  "kind": "location",
                  "type": "SPU",
                  "parties": ["alice", "bob"],
                  "parameters": {
                    "protocol": "SEMI2K",
                    "field": "FM128",
                    "fxp_fraction_bits": 0
                  }
                }
              },
              "target": {
                "kind": "remote_object",
                "numbering": -1,
                "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)",
                "location": {
                  "kind": "location",
                  "type": "SPU",
                  "parties": ["alice", "bob"],
                  "parameters": {
                    "protocol": "SEMI2K",
                    "field": "FM128",
                    "fxp_fraction_bits": 0
                  }
                },
                "name": ""
              }
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0xb656e7f18be2f5d1",
          "parent_span_id": "0x0b5b5fb9f060b488",
          "start_time": "2023-11-29T03:25:27.949138+00:00",
          "end_time": "2023-11-29T03:25:28.012644+00:00",
          "epoch": 71,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x171c3da78111860a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x5020bd415d3b2d4d",
                "module": "secretflow.device.kernels.spu",
                "name": "spu_to_spu"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/id/0x17b152d30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d1a1fa0/line/53" },
          "retval": {
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [
            {
              "kind": "move",
              "source": {
                "kind": "remote_object",
                "numbering": -1,
                "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)",
                "location": {
                  "kind": "location",
                  "type": "SPU",
                  "parties": ["alice", "bob"],
                  "parameters": {
                    "protocol": "SEMI2K",
                    "field": "FM128",
                    "fxp_fraction_bits": 0
                  }
                }
              },
              "target": {
                "kind": "remote_object",
                "numbering": -1,
                "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)",
                "location": {
                  "kind": "location",
                  "type": "SPU",
                  "parties": ["alice", "bob"],
                  "parameters": {
                    "protocol": "SEMI2K",
                    "field": "FM128",
                    "fxp_fraction_bits": 0
                  }
                },
                "name": ""
              }
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0x9f098b9e54ba1fe1",
          "parent_span_id": "0x0b5b5fb9f060b488",
          "start_time": "2023-11-29T03:25:27.956486+00:00",
          "end_time": "2023-11-29T03:25:28.020672+00:00",
          "epoch": 72,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x171c3da78111860a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x5020bd415d3b2d4d",
                "module": "secretflow.device.kernels.spu",
                "name": "spu_to_spu"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/id/0x17b152d30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d1a1fa0/line/53" },
          "retval": {
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [
            {
              "kind": "move",
              "source": {
                "kind": "remote_object",
                "numbering": -1,
                "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)",
                "location": {
                  "kind": "location",
                  "type": "SPU",
                  "parties": ["alice", "bob"],
                  "parameters": {
                    "protocol": "SEMI2K",
                    "field": "FM128",
                    "fxp_fraction_bits": 0
                  }
                }
              },
              "target": {
                "kind": "remote_object",
                "numbering": -1,
                "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)",
                "location": {
                  "kind": "location",
                  "type": "SPU",
                  "parties": ["alice", "bob"],
                  "parameters": {
                    "protocol": "SEMI2K",
                    "field": "FM128",
                    "fxp_fraction_bits": 0
                  }
                },
                "name": ""
              }
            }
          ],
          "inner_frames": []
        },
        {
          "span_id": "0x1ed7cfff64e4b078",
          "parent_span_id": "0x0b5b5fb9f060b488",
          "start_time": "2023-11-29T03:25:27.976524+00:00",
          "end_time": "2023-11-29T03:25:28.056877+00:00",
          "epoch": 75,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x171c3da78111860a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x1739b280de3cc65a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.infeed_shares"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x17b130ee0+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2afe7cfc0/line/1818" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e231080" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xbd105c67d3132f8b",
          "parent_span_id": "0x0b5b5fb9f060b488",
          "start_time": "2023-11-29T03:25:28.069450+00:00",
          "end_time": "2023-11-29T03:25:28.075918+00:00",
          "epoch": 76,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x171c3da78111860a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e536340" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xc3ba0bbea9bf7b6a",
          "parent_span_id": "0x0b5b5fb9f060b488",
          "start_time": "2023-11-29T03:25:28.093216+00:00",
          "end_time": "2023-11-29T03:25:28.128272+00:00",
          "epoch": 77,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x171c3da78111860a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e3a26c0" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x5150342414c0e06c",
          "parent_span_id": "0x0b5b5fb9f060b488",
          "start_time": "2023-11-29T03:25:28.145152+00:00",
          "end_time": "2023-11-29T03:25:28.159049+00:00",
          "epoch": 78,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x171c3da78111860a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e56aa80" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xc7e27320a46ee47a",
          "parent_span_id": "0x0b5b5fb9f060b488",
          "start_time": "2023-11-29T03:25:28.169951+00:00",
          "end_time": "2023-11-29T03:25:28.175602+00:00",
          "epoch": 79,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x171c3da78111860a",
                "module": "secretflow.device.device.spu",
                "name": "SPU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e592880" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xf9a99d3e2f868e33",
      "start_time": "2023-11-29T03:25:28.187143+00:00",
      "end_time": "2023-11-29T03:25:28.195652+00:00",
      "epoch": 81,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(79cc316456d39201af23b462bfe8c365427a357b0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xae29b3c27bda5fdc",
      "start_time": "2023-11-29T03:25:28.211241+00:00",
      "end_time": "2023-11-29T03:25:28.213416+00:00",
      "epoch": 82,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(c1464dc5b2308f10e11e0e6b35627ffff00336110100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xdd7f3f5e8f0eb432",
      "parent_span_id": "0x9f9326d85531e677",
      "start_time": "2023-11-29T03:25:28.243149+00:00",
      "end_time": "2023-11-29T03:25:28.264729+00:00",
      "epoch": 83,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x76497664dcf0e80",
            "module": "secretflow.device.device.spu",
            "name": "SPU.outfeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(a6d6d59239756144af23b462bfe8c365427a357b0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x6dc44bef21a2a58c",
      "parent_span_id": "0x9f9326d85531e677",
      "start_time": "2023-11-29T03:25:28.280021+00:00",
      "end_time": "2023-11-29T03:25:28.598577+00:00",
      "epoch": 84,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x76497664dcf0e80",
            "module": "secretflow.device.device.spu",
            "name": "SPU.outfeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xfeaecf1c54dee884",
      "parent_span_id": "0x9f9326d85531e677",
      "start_time": "2023-11-29T03:25:28.610990+00:00",
      "end_time": "2023-11-29T03:25:28.620749+00:00",
      "epoch": 85,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x76497664dcf0e80",
            "module": "secretflow.device.device.spu",
            "name": "SPU.outfeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e592800" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x3ae86e25c65736c9",
      "parent_span_id": "0x9f9326d85531e677",
      "start_time": "2023-11-29T03:25:28.631181+00:00",
      "end_time": "2023-11-29T03:25:28.634599+00:00",
      "epoch": 86,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x76497664dcf0e80",
            "module": "secretflow.device.device.spu",
            "name": "SPU.outfeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e386a80" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x9f9326d85531e677",
      "parent_span_id": "0xffd6889637a533ac",
      "start_time": "2023-11-29T03:25:28.235110+00:00",
      "end_time": "2023-11-29T03:25:28.648067+00:00",
      "epoch": 87,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1407ded4fa01ffcf",
            "module": "secretflow.device.kernels.spu",
            "name": "spu_to_pyu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x76497664dcf0e80",
            "module": "secretflow.device.device.spu",
            "name": "SPU.outfeed_shares"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x17b130f70+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x11fd43fc0/line/1838" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e5ee540" },
      "expressions": [],
      "inner_frames": [
        {
          "span_id": "0xdd7f3f5e8f0eb432",
          "parent_span_id": "0x9f9326d85531e677",
          "start_time": "2023-11-29T03:25:28.243149+00:00",
          "end_time": "2023-11-29T03:25:28.264729+00:00",
          "epoch": 83,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x76497664dcf0e80",
                "module": "secretflow.device.device.spu",
                "name": "SPU.outfeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(a6d6d59239756144af23b462bfe8c365427a357b0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x6dc44bef21a2a58c",
          "parent_span_id": "0x9f9326d85531e677",
          "start_time": "2023-11-29T03:25:28.280021+00:00",
          "end_time": "2023-11-29T03:25:28.598577+00:00",
          "epoch": 84,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x76497664dcf0e80",
                "module": "secretflow.device.device.spu",
                "name": "SPU.outfeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xfeaecf1c54dee884",
          "parent_span_id": "0x9f9326d85531e677",
          "start_time": "2023-11-29T03:25:28.610990+00:00",
          "end_time": "2023-11-29T03:25:28.620749+00:00",
          "epoch": 85,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x76497664dcf0e80",
                "module": "secretflow.device.device.spu",
                "name": "SPU.outfeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e592800" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x3ae86e25c65736c9",
          "parent_span_id": "0x9f9326d85531e677",
          "start_time": "2023-11-29T03:25:28.631181+00:00",
          "end_time": "2023-11-29T03:25:28.634599+00:00",
          "epoch": 86,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x76497664dcf0e80",
                "module": "secretflow.device.device.spu",
                "name": "SPU.outfeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e386a80" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x425144dfd355c8e8",
      "parent_span_id": "0x0a3477646a355d6f",
      "start_time": "2023-11-29T03:25:28.667387+00:00",
      "end_time": "2023-11-29T03:25:28.671457+00:00",
      "epoch": 88,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e383b00" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x56bc7312cc6eafce",
      "parent_span_id": "0x0a3477646a355d6f",
      "start_time": "2023-11-29T03:25:28.688439+00:00",
      "end_time": "2023-11-29T03:25:28.696538+00:00",
      "epoch": 89,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x0a3477646a355d6f",
      "parent_span_id": "0xffd6889637a533ac",
      "start_time": "2023-11-29T03:25:28.658227+00:00",
      "end_time": "2023-11-29T03:25:28.703808+00:00",
      "epoch": 90,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1407ded4fa01ffcf",
            "module": "secretflow.device.kernels.spu",
            "name": "spu_to_pyu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": {
        "ref": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33e538430+1",
            "name": "reveal"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "python/id/0x17ee82ac0+1",
              "name": "conf"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb80",
              "name": "world_size"
            },
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000001000000)",
              "name": "io_info"
            },
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000002000000)",
              "name": "share_chunks[0]"
            },
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000002000000)",
              "name": "share_chunks[1]"
            },
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)",
              "name": "meta"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "weights"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x425144dfd355c8e8",
          "parent_span_id": "0x0a3477646a355d6f",
          "start_time": "2023-11-29T03:25:28.667387+00:00",
          "end_time": "2023-11-29T03:25:28.671457+00:00",
          "epoch": 88,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e383b00" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x56bc7312cc6eafce",
          "parent_span_id": "0x0a3477646a355d6f",
          "start_time": "2023-11-29T03:25:28.688439+00:00",
          "end_time": "2023-11-29T03:25:28.696538+00:00",
          "epoch": 89,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xffd6889637a533ac",
      "start_time": "2023-11-29T03:25:28.226632+00:00",
      "end_time": "2023-11-29T03:25:28.708722+00:00",
      "epoch": 91,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1407ded4fa01ffcf",
            "module": "secretflow.device.kernels.spu",
            "name": "spu_to_pyu"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b152ca0+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2afec1e60/line/35" },
      "retval": {
        "ref": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "remote_object",
            "numbering": 12,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            }
          },
          "target": {
            "kind": "remote_object",
            "numbering": 14,
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "PYU",
              "parties": ["bob"],
              "parameters": {}
            },
            "name": "weights"
          }
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x9f9326d85531e677",
          "parent_span_id": "0xffd6889637a533ac",
          "start_time": "2023-11-29T03:25:28.235110+00:00",
          "end_time": "2023-11-29T03:25:28.648067+00:00",
          "epoch": 87,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1407ded4fa01ffcf",
                "module": "secretflow.device.kernels.spu",
                "name": "spu_to_pyu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x76497664dcf0e80",
                "module": "secretflow.device.device.spu",
                "name": "SPU.outfeed_shares"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x17b130f70+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x11fd43fc0/line/1838" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e5ee540" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x0a3477646a355d6f",
          "parent_span_id": "0xffd6889637a533ac",
          "start_time": "2023-11-29T03:25:28.658227+00:00",
          "end_time": "2023-11-29T03:25:28.703808+00:00",
          "epoch": 90,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1407ded4fa01ffcf",
                "module": "secretflow.device.kernels.spu",
                "name": "spu_to_pyu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/none" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
          "retval": {
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [
            {
              "kind": "exec",
              "function": {
                "kind": "local_object",
                "ref": "python/id/0x33e538430+1",
                "name": "reveal"
              },
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "boundvars": [
                {
                  "kind": "local_object",
                  "ref": "python/id/0x17ee82ac0+1",
                  "name": "conf"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x106d0bb80",
                  "name": "world_size"
                },
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000001000000)",
                  "name": "io_info"
                },
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(c7528efcb2fd36edaf23b462bfe8c365427a357b0100000002000000)",
                  "name": "share_chunks[0]"
                },
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(6efb86ef2d286c40e11e0e6b35627ffff00336110100000002000000)",
                  "name": "share_chunks[1]"
                },
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)",
                  "name": "meta"
                }
              ],
              "freevars": [],
              "results": [
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["bob"],
                    "parameters": {}
                  },
                  "name": "weights"
                }
              ]
            }
          ],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x7d708e26675e2453",
      "parent_span_id": "0x9a92877b4aca1571",
      "start_time": "2023-11-29T03:25:28.732113+00:00",
      "end_time": "2023-11-29T03:25:28.734351+00:00",
      "epoch": 92,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x76497664dcf0e80",
            "module": "secretflow.device.device.spu",
            "name": "SPU.outfeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(594c3bb38e594811af23b462bfe8c365427a357b0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x2678cc0ee6a6cadf",
      "parent_span_id": "0x9a92877b4aca1571",
      "start_time": "2023-11-29T03:25:28.745337+00:00",
      "end_time": "2023-11-29T03:25:28.747839+00:00",
      "epoch": 93,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x76497664dcf0e80",
            "module": "secretflow.device.device.spu",
            "name": "SPU.outfeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x0e0cf0ddca3ca2ce",
      "parent_span_id": "0x9a92877b4aca1571",
      "start_time": "2023-11-29T03:25:28.757478+00:00",
      "end_time": "2023-11-29T03:25:28.760518+00:00",
      "epoch": 94,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x76497664dcf0e80",
            "module": "secretflow.device.device.spu",
            "name": "SPU.outfeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e592800" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xfff72822a57d8fd0",
      "parent_span_id": "0x9a92877b4aca1571",
      "start_time": "2023-11-29T03:25:28.770042+00:00",
      "end_time": "2023-11-29T03:25:28.773409+00:00",
      "epoch": 95,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/0x76497664dcf0e80",
            "module": "secretflow.device.device.spu",
            "name": "SPU.outfeed_shares"
          },
          "semantics": { "api_level": 10 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e6760c0" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x9a92877b4aca1571",
      "parent_span_id": "0x082a349a930695d0",
      "start_time": "2023-11-29T03:25:28.724862+00:00",
      "end_time": "2023-11-29T03:25:28.777426+00:00",
      "epoch": 96,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1407ded4fa01ffcf",
            "module": "secretflow.device.kernels.spu",
            "name": "spu_to_pyu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x76497664dcf0e80",
            "module": "secretflow.device.device.spu",
            "name": "SPU.outfeed_shares"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x17b130f70+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x11fd43fc0/line/1838" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e557740" },
      "expressions": [],
      "inner_frames": [
        {
          "span_id": "0x7d708e26675e2453",
          "parent_span_id": "0x9a92877b4aca1571",
          "start_time": "2023-11-29T03:25:28.732113+00:00",
          "end_time": "2023-11-29T03:25:28.734351+00:00",
          "epoch": 92,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x76497664dcf0e80",
                "module": "secretflow.device.device.spu",
                "name": "SPU.outfeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(594c3bb38e594811af23b462bfe8c365427a357b0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x2678cc0ee6a6cadf",
          "parent_span_id": "0x9a92877b4aca1571",
          "start_time": "2023-11-29T03:25:28.745337+00:00",
          "end_time": "2023-11-29T03:25:28.747839+00:00",
          "epoch": 93,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x76497664dcf0e80",
                "module": "secretflow.device.device.spu",
                "name": "SPU.outfeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x106d0bb60" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x0e0cf0ddca3ca2ce",
          "parent_span_id": "0x9a92877b4aca1571",
          "start_time": "2023-11-29T03:25:28.757478+00:00",
          "end_time": "2023-11-29T03:25:28.760518+00:00",
          "epoch": 94,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x76497664dcf0e80",
                "module": "secretflow.device.device.spu",
                "name": "SPU.outfeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e592800" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xfff72822a57d8fd0",
          "parent_span_id": "0x9a92877b4aca1571",
          "start_time": "2023-11-29T03:25:28.770042+00:00",
          "end_time": "2023-11-29T03:25:28.773409+00:00",
          "epoch": 95,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/0x76497664dcf0e80",
                "module": "secretflow.device.device.spu",
                "name": "SPU.outfeed_shares"
              },
              "semantics": { "api_level": 10 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x6a079f443782a401",
                "module": "ray.actor",
                "name": "ActorMethod._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0c9a60+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e6760c0" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xd94a8d529cf4cd96",
      "parent_span_id": "0x24389a174883a174",
      "start_time": "2023-11-29T03:25:28.797031+00:00",
      "end_time": "2023-11-29T03:25:28.800529+00:00",
      "epoch": 97,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33c671b40" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xccc0e0f3a377c648",
      "parent_span_id": "0x24389a174883a174",
      "start_time": "2023-11-29T03:25:28.816811+00:00",
      "end_time": "2023-11-29T03:25:28.824756+00:00",
      "epoch": 98,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x24389a174883a174",
      "parent_span_id": "0x082a349a930695d0",
      "start_time": "2023-11-29T03:25:28.787785+00:00",
      "end_time": "2023-11-29T03:25:28.831549+00:00",
      "epoch": 99,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1407ded4fa01ffcf",
            "module": "secretflow.device.kernels.spu",
            "name": "spu_to_pyu"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": {
        "ref": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33e5e2040+1",
            "name": "reveal"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "python/id/0x17ee82ac0+1",
              "name": "conf"
            },
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0bb80",
              "name": "world_size"
            },
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000)",
              "name": "io_info"
            },
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000)",
              "name": "share_chunks[0]"
            },
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000)",
              "name": "share_chunks[1]"
            },
            {
              "kind": "local_object",
              "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)",
              "name": "meta"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": -1,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "bias"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0xd94a8d529cf4cd96",
          "parent_span_id": "0x24389a174883a174",
          "start_time": "2023-11-29T03:25:28.797031+00:00",
          "end_time": "2023-11-29T03:25:28.800529+00:00",
          "epoch": 97,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33c671b40" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xccc0e0f3a377c648",
          "parent_span_id": "0x24389a174883a174",
          "start_time": "2023-11-29T03:25:28.816811+00:00",
          "end_time": "2023-11-29T03:25:28.824756+00:00",
          "epoch": 98,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x082a349a930695d0",
      "start_time": "2023-11-29T03:25:28.717624+00:00",
      "end_time": "2023-11-29T03:25:28.836441+00:00",
      "epoch": 100,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x1407ded4fa01ffcf",
            "module": "secretflow.device.kernels.spu",
            "name": "spu_to_pyu"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b152ca0+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2afec1e60/line/35" },
      "retval": {
        "ref": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "move",
          "source": {
            "kind": "remote_object",
            "numbering": 13,
            "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)",
            "location": {
              "kind": "location",
              "type": "SPU",
              "parties": ["alice", "bob"],
              "parameters": {
                "protocol": "SEMI2K",
                "field": "FM128",
                "fxp_fraction_bits": 0
              }
            }
          },
          "target": {
            "kind": "remote_object",
            "numbering": 15,
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)",
            "location": {
              "kind": "location",
              "type": "PYU",
              "parties": ["bob"],
              "parameters": {}
            },
            "name": "bias"
          }
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x9a92877b4aca1571",
          "parent_span_id": "0x082a349a930695d0",
          "start_time": "2023-11-29T03:25:28.724862+00:00",
          "end_time": "2023-11-29T03:25:28.777426+00:00",
          "epoch": 96,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1407ded4fa01ffcf",
                "module": "secretflow.device.kernels.spu",
                "name": "spu_to_pyu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x76497664dcf0e80",
                "module": "secretflow.device.device.spu",
                "name": "SPU.outfeed_shares"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x17b130f70+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x11fd43fc0/line/1838" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e557740" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x24389a174883a174",
          "parent_span_id": "0x082a349a930695d0",
          "start_time": "2023-11-29T03:25:28.787785+00:00",
          "end_time": "2023-11-29T03:25:28.831549+00:00",
          "epoch": 99,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x1407ded4fa01ffcf",
                "module": "secretflow.device.kernels.spu",
                "name": "spu_to_pyu"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            }
          ],
          "function": { "ref": "python/none" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
          "retval": {
            "ref": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [
            {
              "kind": "exec",
              "function": {
                "kind": "local_object",
                "ref": "python/id/0x33e5e2040+1",
                "name": "reveal"
              },
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "boundvars": [
                {
                  "kind": "local_object",
                  "ref": "python/id/0x17ee82ac0+1",
                  "name": "conf"
                },
                {
                  "kind": "local_object",
                  "ref": "otel/span/0x0/transient/id/0x106d0bb80",
                  "name": "world_size"
                },
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000001000000)",
                  "name": "io_info"
                },
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(64ac0404a8f0916faf23b462bfe8c365427a357b0100000002000000)",
                  "name": "share_chunks[0]"
                },
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(cf9aed5eec5a308be11e0e6b35627ffff00336110100000002000000)",
                  "name": "share_chunks[1]"
                },
                {
                  "kind": "local_object",
                  "ref": "ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)",
                  "name": "meta"
                }
              ],
              "freevars": [],
              "results": [
                {
                  "kind": "remote_object",
                  "numbering": -1,
                  "ref": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)",
                  "location": {
                    "kind": "location",
                    "type": "PYU",
                    "parties": ["bob"],
                    "parameters": {}
                  },
                  "name": "bias"
                }
              ]
            }
          ],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xac435ed7230a992b",
      "parent_span_id": "0x5d18bd634357ffc5",
      "start_time": "2023-11-29T03:25:28.856181+00:00",
      "end_time": "2023-11-29T03:25:28.858205+00:00",
      "epoch": 101,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e6630c0" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xdd5fd69598cb36d4",
      "parent_span_id": "0x5d18bd634357ffc5",
      "start_time": "2023-11-29T03:25:28.874716+00:00",
      "end_time": "2023-11-29T03:25:28.886538+00:00",
      "epoch": 102,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e654980" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x5d18bd634357ffc5",
      "start_time": "2023-11-29T03:25:28.847587+00:00",
      "end_time": "2023-11-29T03:25:28.893855+00:00",
      "epoch": 103,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e71fdc0" },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33b825430+1",
            "name": "load_dataset_for_testing"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x106d0c080",
              "name": "rand_key"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": 16,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "x_test"
            },
            {
              "kind": "remote_object",
              "numbering": 17,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "y_test"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0xac435ed7230a992b",
          "parent_span_id": "0x5d18bd634357ffc5",
          "start_time": "2023-11-29T03:25:28.856181+00:00",
          "end_time": "2023-11-29T03:25:28.858205+00:00",
          "epoch": 101,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e6630c0" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0xdd5fd69598cb36d4",
          "parent_span_id": "0x5d18bd634357ffc5",
          "start_time": "2023-11-29T03:25:28.874716+00:00",
          "end_time": "2023-11-29T03:25:28.886538+00:00",
          "epoch": 102,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e654980" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x1910de873f8ecb08",
      "parent_span_id": "0x2c9ae7275a8b193f",
      "start_time": "2023-11-29T03:25:28.912134+00:00",
      "end_time": "2023-11-29T03:25:28.918363+00:00",
      "epoch": 104,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e66e5c0" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x14edc6dfe78e5582",
      "parent_span_id": "0x2c9ae7275a8b193f",
      "start_time": "2023-11-29T03:25:28.935011+00:00",
      "end_time": "2023-11-29T03:25:28.951401+00:00",
      "epoch": 105,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/0x334829ea19087875",
            "module": "ray.remote_function",
            "name": "RemoteFunction._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0cbd30+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x2c9ae7275a8b193f",
      "start_time": "2023-11-29T03:25:28.903278+00:00",
      "end_time": "2023-11-29T03:25:29.016945+00:00",
      "epoch": 106,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x2338af098e302431",
            "module": "secretflow.device.device.pyu",
            "name": "PYU.__call__.<locals>.wrapper"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/none" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85" },
      "retval": {
        "ref": "secretflow/object/python/ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)"
      },
      "expressions": [
        {
          "kind": "exec",
          "function": {
            "kind": "local_object",
            "ref": "python/id/0x33b827c10+1",
            "name": "validate_model"
          },
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "boundvars": [
            {
              "kind": "remote_object",
              "numbering": 14,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "weights"
            },
            {
              "kind": "remote_object",
              "numbering": 15,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "bias"
            },
            {
              "kind": "remote_object",
              "numbering": 16,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "X_test"
            },
            {
              "kind": "remote_object",
              "numbering": 17,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "y_test"
            }
          ],
          "freevars": [],
          "results": [
            {
              "kind": "remote_object",
              "numbering": 18,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": "x"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x1910de873f8ecb08",
          "parent_span_id": "0x2c9ae7275a8b193f",
          "start_time": "2023-11-29T03:25:28.912134+00:00",
          "end_time": "2023-11-29T03:25:28.918363+00:00",
          "epoch": 104,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e66e5c0" },
          "expressions": [],
          "inner_frames": []
        },
        {
          "span_id": "0x14edc6dfe78e5582",
          "parent_span_id": "0x2c9ae7275a8b193f",
          "start_time": "2023-11-29T03:25:28.935011+00:00",
          "end_time": "2023-11-29T03:25:28.951401+00:00",
          "epoch": 105,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x2338af098e302431",
                "module": "secretflow.device.device.pyu",
                "name": "PYU.__call__.<locals>.wrapper"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/0x334829ea19087875",
                "module": "ray.remote_function",
                "name": "RemoteFunction._remote"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f0cbd30+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x14d194e70/line/244" },
          "retval": {
            "ref": "ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)"
          },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0xdb771e9e00eb7f0a",
      "parent_span_id": "0x7ed752a5ea12317d",
      "start_time": "2023-11-29T03:25:28.982597+00:00",
      "end_time": "2023-11-29T03:25:29.023716+00:00",
      "epoch": 107,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x51687ad2b3eed279",
            "module": "secretflow.device.driver",
            "name": "reveal"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e7109c0" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x7ed752a5ea12317d",
      "start_time": "2023-11-29T03:25:28.972681+00:00",
      "end_time": "2023-11-29T03:25:29.030171+00:00",
      "epoch": 108,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x51687ad2b3eed279",
            "module": "secretflow.device.driver",
            "name": "reveal"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b149c10+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x11a3307c0/line/115" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e664ef0" },
      "expressions": [
        {
          "kind": "reveal",
          "items": [
            {
              "kind": "remote_object",
              "numbering": 18,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": ""
            }
          ],
          "results": [
            {
              "kind": "local_object",
              "ref": "otel/span/0x0/transient/id/0x33e664ef0",
              "name": "auc"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0xdb771e9e00eb7f0a",
          "parent_span_id": "0x7ed752a5ea12317d",
          "start_time": "2023-11-29T03:25:28.982597+00:00",
          "end_time": "2023-11-29T03:25:29.023716+00:00",
          "epoch": 107,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x51687ad2b3eed279",
                "module": "secretflow.device.driver",
                "name": "reveal"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e7109c0" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x11ecaa8629a7eeec",
      "parent_span_id": "0x77ea1d878d4dbcbf",
      "start_time": "2023-11-29T03:25:29.049340+00:00",
      "end_time": "2023-11-29T03:25:29.054779+00:00",
      "epoch": 109,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x51687ad2b3eed279",
            "module": "secretflow.device.driver",
            "name": "reveal"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e78eb00" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x77ea1d878d4dbcbf",
      "start_time": "2023-11-29T03:25:29.041196+00:00",
      "end_time": "2023-11-29T03:25:29.061783+00:00",
      "epoch": 110,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x51687ad2b3eed279",
            "module": "secretflow.device.driver",
            "name": "reveal"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b149c10+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x11a3307c0/line/115" },
      "retval": { "ref": "python/id/0x33e6555d0+1" },
      "expressions": [
        {
          "kind": "reveal",
          "items": [
            {
              "kind": "remote_object",
              "numbering": 14,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": ""
            }
          ],
          "results": [
            {
              "kind": "local_object",
              "ref": "python/id/0x33e6555d0+1",
              "name": "weights"
            }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x11ecaa8629a7eeec",
          "parent_span_id": "0x77ea1d878d4dbcbf",
          "start_time": "2023-11-29T03:25:29.049340+00:00",
          "end_time": "2023-11-29T03:25:29.054779+00:00",
          "epoch": 109,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x51687ad2b3eed279",
                "module": "secretflow.device.driver",
                "name": "reveal"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e78eb00" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x3b42c9ecf25e0133",
      "parent_span_id": "0xc054318bc78c7651",
      "start_time": "2023-11-29T03:25:29.081110+00:00",
      "end_time": "2023-11-29T03:25:29.085689+00:00",
      "epoch": 111,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x51687ad2b3eed279",
            "module": "secretflow.device.driver",
            "name": "reveal"
          },
          "semantics": { "api_level": 20 }
        },
        {
          "function": {
            "code_hash": "python/hash/-0x3cb29e201baf19c",
            "module": "ray._private.worker",
            "name": "get"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f121700+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
      "retval": { "ref": "otel/span/0x0/transient/id/0x33e793500" },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xc054318bc78c7651",
      "start_time": "2023-11-29T03:25:29.072984+00:00",
      "end_time": "2023-11-29T03:25:29.093454+00:00",
      "epoch": 112,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x51687ad2b3eed279",
            "module": "secretflow.device.driver",
            "name": "reveal"
          },
          "semantics": { "api_level": 20 }
        }
      ],
      "function": { "ref": "python/id/0x17b149c10+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x11a3307c0/line/115" },
      "retval": { "ref": "python/id/0x33f026d50+1" },
      "expressions": [
        {
          "kind": "reveal",
          "items": [
            {
              "kind": "remote_object",
              "numbering": 15,
              "ref": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)",
              "location": {
                "kind": "location",
                "type": "PYU",
                "parties": ["bob"],
                "parameters": {}
              },
              "name": ""
            }
          ],
          "results": [
            { "kind": "local_object", "ref": "python/id/0x33f026d50+1", "name": "bias" }
          ]
        }
      ],
      "inner_frames": [
        {
          "span_id": "0x3b42c9ecf25e0133",
          "parent_span_id": "0xc054318bc78c7651",
          "start_time": "2023-11-29T03:25:29.081110+00:00",
          "end_time": "2023-11-29T03:25:29.085689+00:00",
          "epoch": 111,
          "checkpoints": [
            {
              "function": {
                "code_hash": "python/hash/-0x51687ad2b3eed279",
                "module": "secretflow.device.driver",
                "name": "reveal"
              },
              "semantics": { "api_level": 20 }
            },
            {
              "function": {
                "code_hash": "python/hash/-0x3cb29e201baf19c",
                "module": "ray._private.worker",
                "name": "get"
              },
              "semantics": { "api_level": 10 }
            }
          ],
          "function": { "ref": "python/id/0x12f121700+1" },
          "frame": { "ref": "otel/span/0x0/transient/frame/0x12f208110/line/2439" },
          "retval": { "ref": "otel/span/0x0/transient/id/0x33e793500" },
          "expressions": [],
          "inner_frames": []
        }
      ]
    },
    {
      "span_id": "0x9ac4b52178def7b4",
      "start_time": "2023-11-29T03:25:29.102787+00:00",
      "end_time": "2023-11-29T03:25:29.104727+00:00",
      "epoch": 113,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(9a0afb4ce5b46f16af23b462bfe8c365427a357b0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xf699ffed57418af6",
      "start_time": "2023-11-29T03:25:29.112280+00:00",
      "end_time": "2023-11-29T03:25:29.114131+00:00",
      "epoch": 114,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(261bd10b0466d7e8e11e0e6b35627ffff00336110100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x84877d4cb5f075ae",
      "start_time": "2023-11-29T03:25:29.121858+00:00",
      "end_time": "2023-11-29T03:25:29.123655+00:00",
      "epoch": 115,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(b9a008d165a7e804af23b462bfe8c365427a357b0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x6cb4427c5ff9b3bf",
      "start_time": "2023-11-29T03:25:29.130974+00:00",
      "end_time": "2023-11-29T03:25:29.132723+00:00",
      "epoch": 116,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(a8485d936ac2e7cce11e0e6b35627ffff00336110100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0x91f626fbc3de7df4",
      "start_time": "2023-11-29T03:25:29.139730+00:00",
      "end_time": "2023-11-29T03:25:29.141484+00:00",
      "epoch": 117,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(b58f0ee91e0a9599af23b462bfe8c365427a357b0100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    },
    {
      "span_id": "0xe89cf3220b0e116e",
      "start_time": "2023-11-29T03:25:29.148894+00:00",
      "end_time": "2023-11-29T03:25:29.150665+00:00",
      "epoch": 118,
      "checkpoints": [
        {
          "function": {
            "code_hash": "python/hash/-0x6a079f443782a401",
            "module": "ray.actor",
            "name": "ActorMethod._remote"
          },
          "semantics": { "api_level": 10 }
        }
      ],
      "function": { "ref": "python/id/0x12f0c9a60+1" },
      "frame": { "ref": "otel/span/0x0/transient/frame/0x105be99e0/line/166" },
      "retval": {
        "ref": "ray/objectref/ObjectRef(0cb7b64917b5af44e11e0e6b35627ffff00336110100000001000000)"
      },
      "expressions": [],
      "inner_frames": []
    }
  ],
  "dependencies": {
    "nodes": [
      {
        "id": "otel/span/0x0/transient/id/0x106d0c080@3:1",
        "epoch": 3,
        "order": 1,
        "kind": "local",
        "data": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/id/0x106d0c080",
          "name": "rand_key"
        }
      },
      {
        "id": "otel/span/0x0/transient/id/0x106d0bb40@3:2",
        "epoch": 3,
        "order": 2,
        "kind": "local",
        "data": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/id/0x106d0bb40",
          "name": "party_id"
        }
      },
      {
        "id": "PYU:alice@3:3",
        "epoch": 3,
        "order": 3,
        "kind": "function",
        "function": {
          "kind": "local_object",
          "ref": "python/id/0x33ad2daf0+1",
          "name": "load_dataset_for_training"
        },
        "stackframe": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85"
        },
        "location": {
          "kind": "location",
          "type": "PYU",
          "parties": ["alice"],
          "parameters": {}
        }
      },
      {
        "id": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)@3:4",
        "epoch": 3,
        "order": 4,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 1,
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)",
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["alice"],
            "parameters": {}
          },
          "name": "x1"
        }
      },
      {
        "id": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000002000000)@3:5",
        "epoch": 3,
        "order": 5,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 2,
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000002000000)",
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["alice"],
            "parameters": {}
          },
          "name": "_"
        }
      },
      {
        "id": "otel/span/0x0/transient/id/0x106d0c080@6:1",
        "epoch": 6,
        "order": 1,
        "kind": "local",
        "data": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/id/0x106d0c080",
          "name": "rand_key"
        }
      },
      {
        "id": "otel/span/0x0/transient/id/0x106d0bb60@6:2",
        "epoch": 6,
        "order": 2,
        "kind": "local",
        "data": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/id/0x106d0bb60",
          "name": "party_id"
        }
      },
      {
        "id": "PYU:bob@6:3",
        "epoch": 6,
        "order": 3,
        "kind": "function",
        "function": {
          "kind": "local_object",
          "ref": "python/id/0x33ad2daf0+1",
          "name": "load_dataset_for_training"
        },
        "stackframe": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85"
        },
        "location": {
          "kind": "location",
          "type": "PYU",
          "parties": ["bob"],
          "parameters": {}
        }
      },
      {
        "id": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)@6:4",
        "epoch": 6,
        "order": 4,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 3,
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)",
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "name": "x2"
        }
      },
      {
        "id": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)@6:5",
        "epoch": 6,
        "order": 5,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 4,
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)",
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "name": "y"
        }
      },
      {
        "id": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)@17:2",
        "epoch": 17,
        "order": 2,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 5,
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)",
          "location": {
            "kind": "location",
            "type": "SPU",
            "parties": ["alice", "bob"],
            "parameters": {
              "protocol": "SEMI2K",
              "field": "FM128",
              "fxp_fraction_bits": 0
            }
          },
          "name": "x1"
        }
      },
      {
        "id": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)@28:2",
        "epoch": 28,
        "order": 2,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 6,
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)",
          "location": {
            "kind": "location",
            "type": "SPU",
            "parties": ["alice", "bob"],
            "parameters": {
              "protocol": "SEMI2K",
              "field": "FM128",
              "fxp_fraction_bits": 0
            }
          },
          "name": "x2"
        }
      },
      {
        "id": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)@39:2",
        "epoch": 39,
        "order": 2,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 7,
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)",
          "location": {
            "kind": "location",
            "type": "SPU",
            "parties": ["alice", "bob"],
            "parameters": {
              "protocol": "SEMI2K",
              "field": "FM128",
              "fxp_fraction_bits": 0
            }
          },
          "name": "y"
        }
      },
      {
        "id": "python/id/0x2afef1a40+1@42:1",
        "epoch": 42,
        "order": 1,
        "kind": "local",
        "data": {
          "kind": "local_object",
          "ref": "python/id/0x2afef1a40+1",
          "name": "x"
        }
      },
      {
        "id": "secretflow/object/python/ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)@42:2",
        "epoch": 42,
        "order": 2,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 8,
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)",
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["alice"],
            "parameters": {}
          },
          "name": "weights"
        }
      },
      {
        "id": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)@53:2",
        "epoch": 53,
        "order": 2,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 9,
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)",
          "location": {
            "kind": "location",
            "type": "SPU",
            "parties": ["alice", "bob"],
            "parameters": {
              "protocol": "SEMI2K",
              "field": "FM128",
              "fxp_fraction_bits": 0
            }
          },
          "name": "weights"
        }
      },
      {
        "id": "otel/span/0x0/transient/id/0x33ace8670@56:1",
        "epoch": 56,
        "order": 1,
        "kind": "local",
        "data": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/id/0x33ace8670",
          "name": "x"
        }
      },
      {
        "id": "secretflow/object/python/ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)@56:2",
        "epoch": 56,
        "order": 2,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 10,
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)",
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["alice"],
            "parameters": {}
          },
          "name": "bias"
        }
      },
      {
        "id": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)@67:2",
        "epoch": 67,
        "order": 2,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 11,
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)",
          "location": {
            "kind": "location",
            "type": "SPU",
            "parties": ["alice", "bob"],
            "parameters": {
              "protocol": "SEMI2K",
              "field": "FM128",
              "fxp_fraction_bits": 0
            }
          },
          "name": "bias"
        }
      },
      {
        "id": "otel/span/0x0/transient/id/0x106d0bc80@80:6",
        "epoch": 80,
        "order": 6,
        "kind": "local",
        "data": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/id/0x106d0bc80",
          "name": "epochs"
        }
      },
      {
        "id": "otel/span/0x0/transient/id/0x33b6e6770@80:7",
        "epoch": 80,
        "order": 7,
        "kind": "local",
        "data": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/id/0x33b6e6770",
          "name": "learning_rate"
        }
      },
      {
        "id": "SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0@80:8",
        "epoch": 80,
        "order": 8,
        "kind": "function",
        "function": {
          "kind": "local_object",
          "ref": "python/id/0x33b827ca0+1",
          "name": "logistic_regression"
        },
        "stackframe": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/frame/0x2afeda6a0/line/1745"
        },
        "location": {
          "kind": "location",
          "type": "SPU",
          "parties": ["alice", "bob"],
          "parameters": {
            "protocol": "SEMI2K",
            "field": "FM128",
            "fxp_fraction_bits": 0
          }
        }
      },
      {
        "id": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)@80:9",
        "epoch": 80,
        "order": 9,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 12,
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)",
          "location": {
            "kind": "location",
            "type": "SPU",
            "parties": ["alice", "bob"],
            "parameters": {
              "protocol": "SEMI2K",
              "field": "FM128",
              "fxp_fraction_bits": 0
            }
          },
          "name": "[0]"
        }
      },
      {
        "id": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)@80:10",
        "epoch": 80,
        "order": 10,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 13,
          "ref": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)",
          "location": {
            "kind": "location",
            "type": "SPU",
            "parties": ["alice", "bob"],
            "parameters": {
              "protocol": "SEMI2K",
              "field": "FM128",
              "fxp_fraction_bits": 0
            }
          },
          "name": "[1]"
        }
      },
      {
        "id": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)@91:2",
        "epoch": 91,
        "order": 2,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 14,
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)",
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "name": "weights"
        }
      },
      {
        "id": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)@100:2",
        "epoch": 100,
        "order": 2,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 15,
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)",
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "name": "bias"
        }
      },
      {
        "id": "otel/span/0x0/transient/id/0x106d0c080@103:1",
        "epoch": 103,
        "order": 1,
        "kind": "local",
        "data": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/id/0x106d0c080",
          "name": "rand_key"
        }
      },
      {
        "id": "PYU:bob@103:2",
        "epoch": 103,
        "order": 2,
        "kind": "function",
        "function": {
          "kind": "local_object",
          "ref": "python/id/0x33b825430+1",
          "name": "load_dataset_for_testing"
        },
        "stackframe": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85"
        },
        "location": {
          "kind": "location",
          "type": "PYU",
          "parties": ["bob"],
          "parameters": {}
        }
      },
      {
        "id": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)@103:3",
        "epoch": 103,
        "order": 3,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 16,
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)",
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "name": "x_test"
        }
      },
      {
        "id": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)@103:4",
        "epoch": 103,
        "order": 4,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 17,
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)",
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "name": "y_test"
        }
      },
      {
        "id": "PYU:bob@106:5",
        "epoch": 106,
        "order": 5,
        "kind": "function",
        "function": {
          "kind": "local_object",
          "ref": "python/id/0x33b827c10+1",
          "name": "validate_model"
        },
        "stackframe": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/frame/0x2b85f82e0/line/85"
        },
        "location": {
          "kind": "location",
          "type": "PYU",
          "parties": ["bob"],
          "parameters": {}
        }
      },
      {
        "id": "secretflow/object/python/ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)@106:6",
        "epoch": 106,
        "order": 6,
        "kind": "remote",
        "data": {
          "kind": "remote_object",
          "numbering": 18,
          "ref": "secretflow/object/python/ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)",
          "location": {
            "kind": "location",
            "type": "PYU",
            "parties": ["bob"],
            "parameters": {}
          },
          "name": "x"
        }
      },
      { "id": "reveal@108:2", "epoch": 108, "order": 2, "kind": "reveal" },
      {
        "id": "otel/span/0x0/transient/id/0x33e664ef0@108:3",
        "epoch": 108,
        "order": 3,
        "kind": "local",
        "data": {
          "kind": "local_object",
          "ref": "otel/span/0x0/transient/id/0x33e664ef0",
          "name": "auc"
        }
      },
      { "id": "reveal@110:2", "epoch": 110, "order": 2, "kind": "reveal" },
      {
        "id": "python/id/0x33e6555d0+1@110:3",
        "epoch": 110,
        "order": 3,
        "kind": "local",
        "data": {
          "kind": "local_object",
          "ref": "python/id/0x33e6555d0+1",
          "name": "weights"
        }
      },
      { "id": "reveal@112:2", "epoch": 112, "order": 2, "kind": "reveal" },
      {
        "id": "python/id/0x33f026d50+1@112:3",
        "epoch": 112,
        "order": 3,
        "kind": "local",
        "data": {
          "kind": "local_object",
          "ref": "python/id/0x33f026d50+1",
          "name": "bias"
        }
      }
    ],
    "edges": [
      {
        "source": "otel/span/0x0/transient/id/0x106d0c080@3:1",
        "target": "PYU:alice@3:3",
        "kind": "argument",
        "name": "rand_key"
      },
      {
        "source": "otel/span/0x0/transient/id/0x106d0bb40@3:2",
        "target": "PYU:alice@3:3",
        "kind": "argument",
        "name": "party_id"
      },
      {
        "source": "PYU:alice@3:3",
        "target": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)@3:4",
        "kind": "return",
        "assignment": "x1"
      },
      {
        "source": "PYU:alice@3:3",
        "target": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000002000000)@3:5",
        "kind": "return",
        "assignment": "_"
      },
      {
        "source": "secretflow/object/python/ray/objectref/ObjectRef(c2668a65bda616c1ffffffffffffffffffffffff0100000001000000)@3:4",
        "target": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)@17:2",
        "kind": "transform",
        "destination": {
          "kind": "location",
          "type": "SPU",
          "parties": ["alice", "bob"],
          "parameters": {
            "protocol": "SEMI2K",
            "field": "FM128",
            "fxp_fraction_bits": 0
          }
        }
      },
      {
        "source": "otel/span/0x0/transient/id/0x106d0c080@6:1",
        "target": "PYU:bob@6:3",
        "kind": "argument",
        "name": "rand_key"
      },
      {
        "source": "otel/span/0x0/transient/id/0x106d0bb60@6:2",
        "target": "PYU:bob@6:3",
        "kind": "argument",
        "name": "party_id"
      },
      {
        "source": "PYU:bob@6:3",
        "target": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)@6:4",
        "kind": "return",
        "assignment": "x2"
      },
      {
        "source": "PYU:bob@6:3",
        "target": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)@6:5",
        "kind": "return",
        "assignment": "y"
      },
      {
        "source": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000001000000)@6:4",
        "target": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)@28:2",
        "kind": "transform",
        "destination": {
          "kind": "location",
          "type": "SPU",
          "parties": ["alice", "bob"],
          "parameters": {
            "protocol": "SEMI2K",
            "field": "FM128",
            "fxp_fraction_bits": 0
          }
        }
      },
      {
        "source": "secretflow/object/python/ray/objectref/ObjectRef(32d950ec0ccf9d2affffffffffffffffffffffff0100000002000000)@6:5",
        "target": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)@39:2",
        "kind": "transform",
        "destination": {
          "kind": "location",
          "type": "SPU",
          "parties": ["alice", "bob"],
          "parameters": {
            "protocol": "SEMI2K",
            "field": "FM128",
            "fxp_fraction_bits": 0
          }
        }
      },
      {
        "source": "secretflow/object/mpc/ray/objectref/ObjectRef(f4402ec78d3a2607ffffffffffffffffffffffff0100000001000000)@17:2",
        "target": "SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0@80:8",
        "kind": "argument",
        "name": "x1"
      },
      {
        "source": "secretflow/object/mpc/ray/objectref/ObjectRef(80e22aed7718a125ffffffffffffffffffffffff0100000001000000)@28:2",
        "target": "SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0@80:8",
        "kind": "argument",
        "name": "x2"
      },
      {
        "source": "secretflow/object/mpc/ray/objectref/ObjectRef(d695f922effe6d99ffffffffffffffffffffffff0100000001000000)@39:2",
        "target": "SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0@80:8",
        "kind": "argument",
        "name": "y"
      },
      {
        "source": "python/id/0x2afef1a40+1@42:1",
        "target": "secretflow/object/python/ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)@42:2",
        "kind": "transform",
        "destination": {
          "kind": "location",
          "type": "PYU",
          "parties": ["alice"],
          "parameters": {}
        }
      },
      {
        "source": "secretflow/object/python/ray/objectref/ObjectRef(5d4b8d1788f12d2dffffffffffffffffffffffff0100000001000000)@42:2",
        "target": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)@53:2",
        "kind": "transform",
        "destination": {
          "kind": "location",
          "type": "SPU",
          "parties": ["alice", "bob"],
          "parameters": {
            "protocol": "SEMI2K",
            "field": "FM128",
            "fxp_fraction_bits": 0
          }
        }
      },
      {
        "source": "secretflow/object/mpc/ray/objectref/ObjectRef(239c2f70c73fbf73ffffffffffffffffffffffff0100000001000000)@53:2",
        "target": "SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0@80:8",
        "kind": "argument",
        "name": "weights"
      },
      {
        "source": "otel/span/0x0/transient/id/0x33ace8670@56:1",
        "target": "secretflow/object/python/ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)@56:2",
        "kind": "transform",
        "destination": {
          "kind": "location",
          "type": "PYU",
          "parties": ["alice"],
          "parameters": {}
        }
      },
      {
        "source": "secretflow/object/python/ray/objectref/ObjectRef(dc746dc61b2c1923ffffffffffffffffffffffff0100000001000000)@56:2",
        "target": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)@67:2",
        "kind": "transform",
        "destination": {
          "kind": "location",
          "type": "SPU",
          "parties": ["alice", "bob"],
          "parameters": {
            "protocol": "SEMI2K",
            "field": "FM128",
            "fxp_fraction_bits": 0
          }
        }
      },
      {
        "source": "secretflow/object/mpc/ray/objectref/ObjectRef(465c0fb8d6cb3cdcffffffffffffffffffffffff0100000001000000)@67:2",
        "target": "SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0@80:8",
        "kind": "argument",
        "name": "bias"
      },
      {
        "source": "otel/span/0x0/transient/id/0x106d0bc80@80:6",
        "target": "SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0@80:8",
        "kind": "argument",
        "name": "epochs"
      },
      {
        "source": "otel/span/0x0/transient/id/0x33b6e6770@80:7",
        "target": "SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0@80:8",
        "kind": "argument",
        "name": "learning_rate"
      },
      {
        "source": "SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0@80:8",
        "target": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)@80:9",
        "kind": "return",
        "assignment": "[0]"
      },
      {
        "source": "SPU:alice:bob:protocol=SEMI2K:field=FM128:fxp_fraction_bits=0@80:8",
        "target": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)@80:10",
        "kind": "return",
        "assignment": "[1]"
      },
      {
        "source": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000001000000)@80:9",
        "target": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)@91:2",
        "kind": "transform",
        "destination": {
          "kind": "location",
          "type": "PYU",
          "parties": ["bob"],
          "parameters": {}
        }
      },
      {
        "source": "secretflow/object/mpc/ray/objectref/ObjectRef(a02c24b8b7fc0a31af23b462bfe8c365427a357b0100000002000000)@80:10",
        "target": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)@100:2",
        "kind": "transform",
        "destination": {
          "kind": "location",
          "type": "PYU",
          "parties": ["bob"],
          "parameters": {}
        }
      },
      {
        "source": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)@91:2",
        "target": "PYU:bob@106:5",
        "kind": "argument",
        "name": "weights"
      },
      {
        "source": "secretflow/object/python/ray/objectref/ObjectRef(89af82725933373effffffffffffffffffffffff0100000001000000)@91:2",
        "target": "reveal@110:2",
        "kind": "reveal"
      },
      {
        "source": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)@100:2",
        "target": "PYU:bob@106:5",
        "kind": "argument",
        "name": "bias"
      },
      {
        "source": "secretflow/object/python/ray/objectref/ObjectRef(4f4ef6205ce35f90ffffffffffffffffffffffff0100000001000000)@100:2",
        "target": "reveal@112:2",
        "kind": "reveal"
      },
      {
        "source": "otel/span/0x0/transient/id/0x106d0c080@103:1",
        "target": "PYU:bob@103:2",
        "kind": "argument",
        "name": "rand_key"
      },
      {
        "source": "PYU:bob@103:2",
        "target": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)@103:3",
        "kind": "return",
        "assignment": "x_test"
      },
      {
        "source": "PYU:bob@103:2",
        "target": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)@103:4",
        "kind": "return",
        "assignment": "y_test"
      },
      {
        "source": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000001000000)@103:3",
        "target": "PYU:bob@106:5",
        "kind": "argument",
        "name": "X_test"
      },
      {
        "source": "secretflow/object/python/ray/objectref/ObjectRef(7109b8141612f944ffffffffffffffffffffffff0100000002000000)@103:4",
        "target": "PYU:bob@106:5",
        "kind": "argument",
        "name": "y_test"
      },
      {
        "source": "PYU:bob@106:5",
        "target": "secretflow/object/python/ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)@106:6",
        "kind": "return",
        "assignment": "x"
      },
      {
        "source": "secretflow/object/python/ray/objectref/ObjectRef(8c4854248414f633ffffffffffffffffffffffff0100000001000000)@106:6",
        "target": "reveal@108:2",
        "kind": "reveal"
      },
      {
        "source": "reveal@108:2",
        "target": "otel/span/0x0/transient/id/0x33e664ef0@108:3",
        "kind": "reveal"
      },
      {
        "source": "reveal@110:2",
        "target": "python/id/0x33e6555d0+1@110:3",
        "kind": "reveal"
      },
      {
        "source": "reveal@112:2",
        "target": "python/id/0x33f026d50+1@112:3",
        "kind": "reveal"
      }
    ]
  }
}
