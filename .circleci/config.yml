# This CI is used to publish secretflow/secretnote docker image.
# See https://circleci.com/docs/configuration-reference
# See https://circleci.com/docs/using-docker
version: 2.1

commands:
  devcontainer-publish:
    parameters:
      arch:
        type: string
      tag:
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and publish
          command: |
            export IMAGE_NAME=secretflow/secretnote:<< parameters.tag >>-<< parameters.arch >>

            docker buildx build \
              --platform linux/<< parameters.arch >> \
              -f docker/secretflow-secretnote/Dockerfile \
              --build-arg SECRETFLOW_VERSION=<< parameters.tag >> \
              -t ${IMAGE_NAME} \
              --progress=plain \
              .

            docker login -u secretflow -p ${DOCKER_DEPLOY_TOKEN}
            docker push ${IMAGE_NAME}
            docker logout

  devcontainer-manifest:
    parameters:
      tag:
        type: string
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Create manifest and push to registry
          command: |
            export IMAGE_NAME=secretflow/secretnote:<< parameters.tag >>

            docker login -u secretflow -p ${DOCKER_DEPLOY_TOKEN}
            docker manifest create ${IMAGE_NAME} \
              ${IMAGE_NAME}-amd64 \
              ${IMAGE_NAME}-arm64
            docker manifest push ${IMAGE_NAME}
            docker logout

jobs:
  devcontainer-publish-amd64:
    docker:
      - image: cimg/base:current
    resource_class: xlarge
    parameters:
      arch:
        type: string
      tag:
        type: string
    steps:
      - devcontainer-publish:
          arch: << parameters.arch >>
          tag: << parameters.tag >>

  devcontainer-publish-arm64:
    docker:
      - image: cimg/base:current
    resource_class: arm.large
    parameters:
      arch:
        type: string
      tag:
        type: string
    steps:
      - devcontainer-publish:
          arch: << parameters.arch >>
          tag: << parameters.tag >>

  devcontainer-manifest:
    docker:
      - image: cimg/base:current
    resource_class: small
    parameters:
      tag:
        type: string
    steps:
      - devcontainer-manifest:
          tag: << parameters.tag >>

workflows:
  devcontainer-publish-and-manifest:
    jobs:
      # Publish for linux/amd64
      - devcontainer-publish-amd64:
          filters:
            branches:
              only:
                - main
          arch: amd64
          matrix:
            parameters:
              tag: ['1.11.0b1', '1.10.0b0', '1.9.0b0', '1.8.0b0']
      # Publish for linux/arm64
      - devcontainer-publish-arm64:
          filters:
            branches:
              only:
                - main
          arch: arm64
          matrix:
            parameters:
              tag: ['1.11.0b1', '1.10.0b0', '1.9.0b0', '1.8.0b0']
      # Manifest they two and push to registry
      - devcontainer-manifest:
          requires:
            - devcontainer-publish-amd64
            - devcontainer-publish-arm64
          filters:
            branches:
              only:
                - main
          matrix:
            parameters:
              tag: ['1.11.0b1', '1.10.0b0', '1.9.0b0', '1.8.0b0']
