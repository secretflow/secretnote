{
  // We are using Nx for monorepo task orchestration
  // See https://nx.dev/concepts/mental-model
  "$schema": "https://cdn.jsdelivr.net/npm/nx@latest/schemas/nx-schema.json",
  // Inputs affect when Nx will re-run a task
  // If inputs are not changed then Nx will skip re-run and replay cached results
  // For example, we would want to re-run ESLint whenever eslintrc is updated
  // This guarantees that tasks are always correct and up-to-date
  //
  // Named inputs defined here are to be referenced in targetDefaults
  // See https://nx.dev/concepts/mental-model#computation-hashing-and-caching
  // and https://nx.dev/reference/nx-json#inputs-&-namedinputs
  //
  // ${workspaceRoot} = root of repo
  // ${projectRoot} = root of package in which the task is defined
  "namedInputs": {
    ":default": ["{projectRoot}/**/*"],
    ":eslint": ["{workspaceRoot}/.eslintrc.*", "{workspaceRoot}/.eslintignore"],
    ":stylelint": [
      "{workspaceRoot}/.stylelintrc.*",
      "{workspaceRoot}/.stylelintignore"
    ],
    ":prettier": ["{workspaceRoot}/.prettierrc.*", "{workspaceRoot}/.prettierignore"],
    ":tsc": ["{workspaceRoot}/tsconfig.*"],
    ":vitest": ["{workspaceRoot}/vitest.config.*", "{workspaceRoot}/vitest.config.mjs"],
    ":python": ["{workspaceRoot}/pyproject.toml"]
  },
  // targetDefaults configure default options for each task
  // such as inputs, outputs and dependencies
  // See https://nx.dev/reference/nx-json#target-defaults
  // The actual commands are defined in the `scripts` section in each package's package.json
  "targetDefaults": {
    "lint:eslint": {
      "inputs": [":default", ":eslint"]
    },
    "lint:stylelint": {
      "inputs": [":default", ":stylelint"]
    },
    "format:black": {
      "inputs": [":default", ":python"]
    },
    "format:prettier": {
      "inputs": [":default", ":prettier"]
    },
    "lint:ruff": {
      "inputs": [":default", ":python"]
    },
    "typecheck:tsc": {
      "inputs": ["^:default", ":default", ":tsc"]
    },
    "typecheck:pyright": {
      "inputs": ["^:default", ":default", ":python"]
    },
    "test:vitest": {
      "inputs": ["^:default", ":default", ":vitest"],
      "outputs": ["{projectRoot}/coverage"]
    },
    "test:pytest": {
      "inputs": ["^:default", ":default", ":python"]
    },
    "setup:umi": {
      "inputs": [":default", ":tsc"],
      "outputs": ["{projectRoot}/src/.umi"]
    },
    "build": {
      "inputs": ["^:default", ":default", ":tsc", ":python"],
      "outputs": ["{projectRoot}/build", "{projectRoot}/dist"],
      "dependsOn": ["^build"]
    },
    "publish": {
      "dependsOn": ["^build", "build", "^publish"]
    },
    "ci:setup": {},
    "ci:javascript": {},
    "ci:python": {},
    "ci:publish": {},
    "dev": {}
  },
  "tasksRunnerOptions": {
    "default": {
      "runner": "nx/tasks-runners/default",
      "options": {
        "parallel": 8,
        "cacheableOperations": [
          "build",
          "format:black",
          "format:prettier",
          "lint:eslint",
          "lint:ruff",
          "lint:stylelint",
          "setup:umi",
          "test:pytest",
          "test:vitest",
          "typecheck:pyright",
          "typecheck:tsc"
        ]
      }
    }
  }
}
